/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ApiKeyCreateResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyCreateResponseData{}

// ApiKeyCreateResponseData The created resource
type ApiKeyCreateResponseData struct {
	CreatedAt     time.Time      `json:"created_at"`
	Description   NullableString `json:"description,omitempty"`
	EnvironmentId NullableString `json:"environment_id,omitempty"`
	Id            string         `json:"id"`
	LastUsedAt    NullableTime   `json:"last_used_at,omitempty"`
	Name          string         `json:"name"`
	Scopes        []string       `json:"scopes"`
	Secret        string         `json:"secret"`
	UpdatedAt     time.Time      `json:"updated_at"`
}

type _ApiKeyCreateResponseData ApiKeyCreateResponseData

// NewApiKeyCreateResponseData instantiates a new ApiKeyCreateResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyCreateResponseData(createdAt time.Time, id string, name string, scopes []string, secret string, updatedAt time.Time) *ApiKeyCreateResponseData {
	this := ApiKeyCreateResponseData{}
	this.CreatedAt = createdAt
	this.Id = id
	this.Name = name
	this.Scopes = scopes
	this.Secret = secret
	this.UpdatedAt = updatedAt
	return &this
}

// NewApiKeyCreateResponseDataWithDefaults instantiates a new ApiKeyCreateResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyCreateResponseDataWithDefaults() *ApiKeyCreateResponseData {
	this := ApiKeyCreateResponseData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ApiKeyCreateResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ApiKeyCreateResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyCreateResponseData) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyCreateResponseData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiKeyCreateResponseData) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ApiKeyCreateResponseData) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ApiKeyCreateResponseData) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ApiKeyCreateResponseData) UnsetDescription() {
	o.Description.Unset()
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyCreateResponseData) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnvironmentId.Get()
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyCreateResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentId.Get(), o.EnvironmentId.IsSet()
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *ApiKeyCreateResponseData) HasEnvironmentId() bool {
	if o != nil && o.EnvironmentId.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given NullableString and assigns it to the EnvironmentId field.
func (o *ApiKeyCreateResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId.Set(&v)
}

// SetEnvironmentIdNil sets the value for EnvironmentId to be an explicit nil
func (o *ApiKeyCreateResponseData) SetEnvironmentIdNil() {
	o.EnvironmentId.Set(nil)
}

// UnsetEnvironmentId ensures that no value is present for EnvironmentId, not even an explicit nil
func (o *ApiKeyCreateResponseData) UnsetEnvironmentId() {
	o.EnvironmentId.Unset()
}

// GetId returns the Id field value
func (o *ApiKeyCreateResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiKeyCreateResponseData) SetId(v string) {
	o.Id = v
}

// GetLastUsedAt returns the LastUsedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyCreateResponseData) GetLastUsedAt() time.Time {
	if o == nil || IsNil(o.LastUsedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastUsedAt.Get()
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyCreateResponseData) GetLastUsedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUsedAt.Get(), o.LastUsedAt.IsSet()
}

// HasLastUsedAt returns a boolean if a field has been set.
func (o *ApiKeyCreateResponseData) HasLastUsedAt() bool {
	if o != nil && o.LastUsedAt.IsSet() {
		return true
	}

	return false
}

// SetLastUsedAt gets a reference to the given NullableTime and assigns it to the LastUsedAt field.
func (o *ApiKeyCreateResponseData) SetLastUsedAt(v time.Time) {
	o.LastUsedAt.Set(&v)
}

// SetLastUsedAtNil sets the value for LastUsedAt to be an explicit nil
func (o *ApiKeyCreateResponseData) SetLastUsedAtNil() {
	o.LastUsedAt.Set(nil)
}

// UnsetLastUsedAt ensures that no value is present for LastUsedAt, not even an explicit nil
func (o *ApiKeyCreateResponseData) UnsetLastUsedAt() {
	o.LastUsedAt.Unset()
}

// GetName returns the Name field value
func (o *ApiKeyCreateResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiKeyCreateResponseData) SetName(v string) {
	o.Name = v
}

// GetScopes returns the Scopes field value
func (o *ApiKeyCreateResponseData) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateResponseData) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *ApiKeyCreateResponseData) SetScopes(v []string) {
	o.Scopes = v
}

// GetSecret returns the Secret field value
func (o *ApiKeyCreateResponseData) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateResponseData) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *ApiKeyCreateResponseData) SetSecret(v string) {
	o.Secret = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ApiKeyCreateResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ApiKeyCreateResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ApiKeyCreateResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ApiKeyCreateResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyCreateResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.EnvironmentId.IsSet() {
		toSerialize["environment_id"] = o.EnvironmentId.Get()
	}
	toSerialize["id"] = o.Id
	if o.LastUsedAt.IsSet() {
		toSerialize["last_used_at"] = o.LastUsedAt.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["scopes"] = o.Scopes
	toSerialize["secret"] = o.Secret
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ApiKeyCreateResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"id",
		"name",
		"scopes",
		"secret",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiKeyCreateResponseData := _ApiKeyCreateResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiKeyCreateResponseData)

	if err != nil {
		return err
	}

	*o = ApiKeyCreateResponseData(varApiKeyCreateResponseData)

	return err
}

type NullableApiKeyCreateResponseData struct {
	value *ApiKeyCreateResponseData
	isSet bool
}

func (v NullableApiKeyCreateResponseData) Get() *ApiKeyCreateResponseData {
	return v.value
}

func (v *NullableApiKeyCreateResponseData) Set(val *ApiKeyCreateResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyCreateResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyCreateResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyCreateResponseData(val *ApiKeyCreateResponseData) *NullableApiKeyCreateResponseData {
	return &NullableApiKeyCreateResponseData{value: val, isSet: true}
}

func (v NullableApiKeyCreateResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyCreateResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
