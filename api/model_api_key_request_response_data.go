/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ApiKeyRequestResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyRequestResponseData{}

// ApiKeyRequestResponseData The returned resource
type ApiKeyRequestResponseData struct {
	ApiKeyId             string         `json:"api_key_id"`
	EndedAt              NullableTime   `json:"ended_at,omitempty"`
	EnvironmentId        NullableString `json:"environment_id,omitempty"`
	Id                   string         `json:"id"`
	Method               string         `json:"method"`
	ReqBody              NullableString `json:"req_body,omitempty"`
	RequestType          NullableString `json:"request_type,omitempty"`
	ResourceId           NullableInt32  `json:"resource_id,omitempty"`
	ResourceIdString     NullableString `json:"resource_id_string,omitempty"`
	ResourceName         NullableString `json:"resource_name,omitempty"`
	ResourceType         NullableString `json:"resource_type,omitempty"`
	RespBody             NullableString `json:"resp_body,omitempty"`
	RespCode             NullableInt32  `json:"resp_code,omitempty"`
	SecondaryResource    NullableString `json:"secondary_resource,omitempty"`
	StartedAt            time.Time      `json:"started_at"`
	Url                  string         `json:"url"`
	UserAgent            NullableString `json:"user_agent,omitempty"`
	UserId               NullableString `json:"user_id,omitempty"`
	UserName             NullableString `json:"user_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiKeyRequestResponseData ApiKeyRequestResponseData

// NewApiKeyRequestResponseData instantiates a new ApiKeyRequestResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyRequestResponseData(apiKeyId string, id string, method string, startedAt time.Time, url string) *ApiKeyRequestResponseData {
	this := ApiKeyRequestResponseData{}
	this.ApiKeyId = apiKeyId
	this.Id = id
	this.Method = method
	this.StartedAt = startedAt
	this.Url = url
	return &this
}

// NewApiKeyRequestResponseDataWithDefaults instantiates a new ApiKeyRequestResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyRequestResponseDataWithDefaults() *ApiKeyRequestResponseData {
	this := ApiKeyRequestResponseData{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value
func (o *ApiKeyRequestResponseData) GetApiKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value
// and a boolean to check if the value has been set.
func (o *ApiKeyRequestResponseData) GetApiKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKeyId, true
}

// SetApiKeyId sets field value
func (o *ApiKeyRequestResponseData) SetApiKeyId(v string) {
	o.ApiKeyId = v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt.Get()
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetEndedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndedAt.Get(), o.EndedAt.IsSet()
}

// HasEndedAt returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasEndedAt() bool {
	if o != nil && o.EndedAt.IsSet() {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given NullableTime and assigns it to the EndedAt field.
func (o *ApiKeyRequestResponseData) SetEndedAt(v time.Time) {
	o.EndedAt.Set(&v)
}

// SetEndedAtNil sets the value for EndedAt to be an explicit nil
func (o *ApiKeyRequestResponseData) SetEndedAtNil() {
	o.EndedAt.Set(nil)
}

// UnsetEndedAt ensures that no value is present for EndedAt, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetEndedAt() {
	o.EndedAt.Unset()
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnvironmentId.Get()
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentId.Get(), o.EnvironmentId.IsSet()
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasEnvironmentId() bool {
	if o != nil && o.EnvironmentId.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given NullableString and assigns it to the EnvironmentId field.
func (o *ApiKeyRequestResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId.Set(&v)
}

// SetEnvironmentIdNil sets the value for EnvironmentId to be an explicit nil
func (o *ApiKeyRequestResponseData) SetEnvironmentIdNil() {
	o.EnvironmentId.Set(nil)
}

// UnsetEnvironmentId ensures that no value is present for EnvironmentId, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetEnvironmentId() {
	o.EnvironmentId.Unset()
}

// GetId returns the Id field value
func (o *ApiKeyRequestResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiKeyRequestResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiKeyRequestResponseData) SetId(v string) {
	o.Id = v
}

// GetMethod returns the Method field value
func (o *ApiKeyRequestResponseData) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ApiKeyRequestResponseData) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ApiKeyRequestResponseData) SetMethod(v string) {
	o.Method = v
}

// GetReqBody returns the ReqBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetReqBody() string {
	if o == nil || IsNil(o.ReqBody.Get()) {
		var ret string
		return ret
	}
	return *o.ReqBody.Get()
}

// GetReqBodyOk returns a tuple with the ReqBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetReqBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReqBody.Get(), o.ReqBody.IsSet()
}

// HasReqBody returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasReqBody() bool {
	if o != nil && o.ReqBody.IsSet() {
		return true
	}

	return false
}

// SetReqBody gets a reference to the given NullableString and assigns it to the ReqBody field.
func (o *ApiKeyRequestResponseData) SetReqBody(v string) {
	o.ReqBody.Set(&v)
}

// SetReqBodyNil sets the value for ReqBody to be an explicit nil
func (o *ApiKeyRequestResponseData) SetReqBodyNil() {
	o.ReqBody.Set(nil)
}

// UnsetReqBody ensures that no value is present for ReqBody, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetReqBody() {
	o.ReqBody.Unset()
}

// GetRequestType returns the RequestType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetRequestType() string {
	if o == nil || IsNil(o.RequestType.Get()) {
		var ret string
		return ret
	}
	return *o.RequestType.Get()
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetRequestTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestType.Get(), o.RequestType.IsSet()
}

// HasRequestType returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasRequestType() bool {
	if o != nil && o.RequestType.IsSet() {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given NullableString and assigns it to the RequestType field.
func (o *ApiKeyRequestResponseData) SetRequestType(v string) {
	o.RequestType.Set(&v)
}

// SetRequestTypeNil sets the value for RequestType to be an explicit nil
func (o *ApiKeyRequestResponseData) SetRequestTypeNil() {
	o.RequestType.Set(nil)
}

// UnsetRequestType ensures that no value is present for RequestType, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetRequestType() {
	o.RequestType.Unset()
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetResourceId() int32 {
	if o == nil || IsNil(o.ResourceId.Get()) {
		var ret int32
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetResourceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableInt32 and assigns it to the ResourceId field.
func (o *ApiKeyRequestResponseData) SetResourceId(v int32) {
	o.ResourceId.Set(&v)
}

// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *ApiKeyRequestResponseData) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetResourceIdString returns the ResourceIdString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetResourceIdString() string {
	if o == nil || IsNil(o.ResourceIdString.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceIdString.Get()
}

// GetResourceIdStringOk returns a tuple with the ResourceIdString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetResourceIdStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceIdString.Get(), o.ResourceIdString.IsSet()
}

// HasResourceIdString returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasResourceIdString() bool {
	if o != nil && o.ResourceIdString.IsSet() {
		return true
	}

	return false
}

// SetResourceIdString gets a reference to the given NullableString and assigns it to the ResourceIdString field.
func (o *ApiKeyRequestResponseData) SetResourceIdString(v string) {
	o.ResourceIdString.Set(&v)
}

// SetResourceIdStringNil sets the value for ResourceIdString to be an explicit nil
func (o *ApiKeyRequestResponseData) SetResourceIdStringNil() {
	o.ResourceIdString.Set(nil)
}

// UnsetResourceIdString ensures that no value is present for ResourceIdString, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetResourceIdString() {
	o.ResourceIdString.Unset()
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceName.Get()
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceName.Get(), o.ResourceName.IsSet()
}

// HasResourceName returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasResourceName() bool {
	if o != nil && o.ResourceName.IsSet() {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given NullableString and assigns it to the ResourceName field.
func (o *ApiKeyRequestResponseData) SetResourceName(v string) {
	o.ResourceName.Set(&v)
}

// SetResourceNameNil sets the value for ResourceName to be an explicit nil
func (o *ApiKeyRequestResponseData) SetResourceNameNil() {
	o.ResourceName.Set(nil)
}

// UnsetResourceName ensures that no value is present for ResourceName, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetResourceName() {
	o.ResourceName.Unset()
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceType.Get()
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceType.Get(), o.ResourceType.IsSet()
}

// HasResourceType returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasResourceType() bool {
	if o != nil && o.ResourceType.IsSet() {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given NullableString and assigns it to the ResourceType field.
func (o *ApiKeyRequestResponseData) SetResourceType(v string) {
	o.ResourceType.Set(&v)
}

// SetResourceTypeNil sets the value for ResourceType to be an explicit nil
func (o *ApiKeyRequestResponseData) SetResourceTypeNil() {
	o.ResourceType.Set(nil)
}

// UnsetResourceType ensures that no value is present for ResourceType, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetResourceType() {
	o.ResourceType.Unset()
}

// GetRespBody returns the RespBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetRespBody() string {
	if o == nil || IsNil(o.RespBody.Get()) {
		var ret string
		return ret
	}
	return *o.RespBody.Get()
}

// GetRespBodyOk returns a tuple with the RespBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetRespBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RespBody.Get(), o.RespBody.IsSet()
}

// HasRespBody returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasRespBody() bool {
	if o != nil && o.RespBody.IsSet() {
		return true
	}

	return false
}

// SetRespBody gets a reference to the given NullableString and assigns it to the RespBody field.
func (o *ApiKeyRequestResponseData) SetRespBody(v string) {
	o.RespBody.Set(&v)
}

// SetRespBodyNil sets the value for RespBody to be an explicit nil
func (o *ApiKeyRequestResponseData) SetRespBodyNil() {
	o.RespBody.Set(nil)
}

// UnsetRespBody ensures that no value is present for RespBody, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetRespBody() {
	o.RespBody.Unset()
}

// GetRespCode returns the RespCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetRespCode() int32 {
	if o == nil || IsNil(o.RespCode.Get()) {
		var ret int32
		return ret
	}
	return *o.RespCode.Get()
}

// GetRespCodeOk returns a tuple with the RespCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetRespCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RespCode.Get(), o.RespCode.IsSet()
}

// HasRespCode returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasRespCode() bool {
	if o != nil && o.RespCode.IsSet() {
		return true
	}

	return false
}

// SetRespCode gets a reference to the given NullableInt32 and assigns it to the RespCode field.
func (o *ApiKeyRequestResponseData) SetRespCode(v int32) {
	o.RespCode.Set(&v)
}

// SetRespCodeNil sets the value for RespCode to be an explicit nil
func (o *ApiKeyRequestResponseData) SetRespCodeNil() {
	o.RespCode.Set(nil)
}

// UnsetRespCode ensures that no value is present for RespCode, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetRespCode() {
	o.RespCode.Unset()
}

// GetSecondaryResource returns the SecondaryResource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetSecondaryResource() string {
	if o == nil || IsNil(o.SecondaryResource.Get()) {
		var ret string
		return ret
	}
	return *o.SecondaryResource.Get()
}

// GetSecondaryResourceOk returns a tuple with the SecondaryResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetSecondaryResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondaryResource.Get(), o.SecondaryResource.IsSet()
}

// HasSecondaryResource returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasSecondaryResource() bool {
	if o != nil && o.SecondaryResource.IsSet() {
		return true
	}

	return false
}

// SetSecondaryResource gets a reference to the given NullableString and assigns it to the SecondaryResource field.
func (o *ApiKeyRequestResponseData) SetSecondaryResource(v string) {
	o.SecondaryResource.Set(&v)
}

// SetSecondaryResourceNil sets the value for SecondaryResource to be an explicit nil
func (o *ApiKeyRequestResponseData) SetSecondaryResourceNil() {
	o.SecondaryResource.Set(nil)
}

// UnsetSecondaryResource ensures that no value is present for SecondaryResource, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetSecondaryResource() {
	o.SecondaryResource.Unset()
}

// GetStartedAt returns the StartedAt field value
func (o *ApiKeyRequestResponseData) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *ApiKeyRequestResponseData) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *ApiKeyRequestResponseData) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetUrl returns the Url field value
func (o *ApiKeyRequestResponseData) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ApiKeyRequestResponseData) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ApiKeyRequestResponseData) SetUrl(v string) {
	o.Url = v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent.Get()) {
		var ret string
		return ret
	}
	return *o.UserAgent.Get()
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetUserAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserAgent.Get(), o.UserAgent.IsSet()
}

// HasUserAgent returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasUserAgent() bool {
	if o != nil && o.UserAgent.IsSet() {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given NullableString and assigns it to the UserAgent field.
func (o *ApiKeyRequestResponseData) SetUserAgent(v string) {
	o.UserAgent.Set(&v)
}

// SetUserAgentNil sets the value for UserAgent to be an explicit nil
func (o *ApiKeyRequestResponseData) SetUserAgentNil() {
	o.UserAgent.Set(nil)
}

// UnsetUserAgent ensures that no value is present for UserAgent, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetUserAgent() {
	o.UserAgent.Unset()
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *ApiKeyRequestResponseData) SetUserId(v string) {
	o.UserId.Set(&v)
}

// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *ApiKeyRequestResponseData) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetUserId() {
	o.UserId.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyRequestResponseData) GetUserName() string {
	if o == nil || IsNil(o.UserName.Get()) {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyRequestResponseData) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *ApiKeyRequestResponseData) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *ApiKeyRequestResponseData) SetUserName(v string) {
	o.UserName.Set(&v)
}

// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *ApiKeyRequestResponseData) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *ApiKeyRequestResponseData) UnsetUserName() {
	o.UserName.Unset()
}

func (o ApiKeyRequestResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyRequestResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key_id"] = o.ApiKeyId
	if o.EndedAt.IsSet() {
		toSerialize["ended_at"] = o.EndedAt.Get()
	}
	if o.EnvironmentId.IsSet() {
		toSerialize["environment_id"] = o.EnvironmentId.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["method"] = o.Method
	if o.ReqBody.IsSet() {
		toSerialize["req_body"] = o.ReqBody.Get()
	}
	if o.RequestType.IsSet() {
		toSerialize["request_type"] = o.RequestType.Get()
	}
	if o.ResourceId.IsSet() {
		toSerialize["resource_id"] = o.ResourceId.Get()
	}
	if o.ResourceIdString.IsSet() {
		toSerialize["resource_id_string"] = o.ResourceIdString.Get()
	}
	if o.ResourceName.IsSet() {
		toSerialize["resource_name"] = o.ResourceName.Get()
	}
	if o.ResourceType.IsSet() {
		toSerialize["resource_type"] = o.ResourceType.Get()
	}
	if o.RespBody.IsSet() {
		toSerialize["resp_body"] = o.RespBody.Get()
	}
	if o.RespCode.IsSet() {
		toSerialize["resp_code"] = o.RespCode.Get()
	}
	if o.SecondaryResource.IsSet() {
		toSerialize["secondary_resource"] = o.SecondaryResource.Get()
	}
	toSerialize["started_at"] = o.StartedAt
	toSerialize["url"] = o.Url
	if o.UserAgent.IsSet() {
		toSerialize["user_agent"] = o.UserAgent.Get()
	}
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["user_name"] = o.UserName.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiKeyRequestResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key_id",
		"id",
		"method",
		"started_at",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiKeyRequestResponseData := _ApiKeyRequestResponseData{}

	err = json.Unmarshal(data, &varApiKeyRequestResponseData)

	if err != nil {
		return err
	}

	*o = ApiKeyRequestResponseData(varApiKeyRequestResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "api_key_id")
		delete(additionalProperties, "ended_at")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "method")
		delete(additionalProperties, "req_body")
		delete(additionalProperties, "request_type")
		delete(additionalProperties, "resource_id")
		delete(additionalProperties, "resource_id_string")
		delete(additionalProperties, "resource_name")
		delete(additionalProperties, "resource_type")
		delete(additionalProperties, "resp_body")
		delete(additionalProperties, "resp_code")
		delete(additionalProperties, "secondary_resource")
		delete(additionalProperties, "started_at")
		delete(additionalProperties, "url")
		delete(additionalProperties, "user_agent")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "user_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiKeyRequestResponseData struct {
	value *ApiKeyRequestResponseData
	isSet bool
}

func (v NullableApiKeyRequestResponseData) Get() *ApiKeyRequestResponseData {
	return v.value
}

func (v *NullableApiKeyRequestResponseData) Set(val *ApiKeyRequestResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyRequestResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyRequestResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyRequestResponseData(val *ApiKeyRequestResponseData) *NullableApiKeyRequestResponseData {
	return &NullableApiKeyRequestResponseData{value: val, isSet: true}
}

func (v NullableApiKeyRequestResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyRequestResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
