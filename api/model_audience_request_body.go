/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AudienceRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceRequestBody{}

// AudienceRequestBody struct for AudienceRequestBody
type AudienceRequestBody struct {
	ConditionGroups []CreateOrUpdateConditionGroupRequestBody `json:"condition_groups"`
	Conditions []CreateOrUpdateConditionRequestBody `json:"conditions"`
	// Page limit (default 100)
	Limit NullableInt32 `json:"limit,omitempty"`
	// Page offset (default 0)
	Offset NullableInt32 `json:"offset,omitempty"`
	Q NullableString `json:"q,omitempty"`
}

type _AudienceRequestBody AudienceRequestBody

// NewAudienceRequestBody instantiates a new AudienceRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceRequestBody(conditionGroups []CreateOrUpdateConditionGroupRequestBody, conditions []CreateOrUpdateConditionRequestBody) *AudienceRequestBody {
	this := AudienceRequestBody{}
	this.ConditionGroups = conditionGroups
	this.Conditions = conditions
	return &this
}

// NewAudienceRequestBodyWithDefaults instantiates a new AudienceRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceRequestBodyWithDefaults() *AudienceRequestBody {
	this := AudienceRequestBody{}
	return &this
}

// GetConditionGroups returns the ConditionGroups field value
func (o *AudienceRequestBody) GetConditionGroups() []CreateOrUpdateConditionGroupRequestBody {
	if o == nil {
		var ret []CreateOrUpdateConditionGroupRequestBody
		return ret
	}

	return o.ConditionGroups
}

// GetConditionGroupsOk returns a tuple with the ConditionGroups field value
// and a boolean to check if the value has been set.
func (o *AudienceRequestBody) GetConditionGroupsOk() ([]CreateOrUpdateConditionGroupRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConditionGroups, true
}

// SetConditionGroups sets field value
func (o *AudienceRequestBody) SetConditionGroups(v []CreateOrUpdateConditionGroupRequestBody) {
	o.ConditionGroups = v
}

// GetConditions returns the Conditions field value
func (o *AudienceRequestBody) GetConditions() []CreateOrUpdateConditionRequestBody {
	if o == nil {
		var ret []CreateOrUpdateConditionRequestBody
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *AudienceRequestBody) GetConditionsOk() ([]CreateOrUpdateConditionRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *AudienceRequestBody) SetConditions(v []CreateOrUpdateConditionRequestBody) {
	o.Conditions = v
}

// GetLimit returns the Limit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudienceRequestBody) GetLimit() int32 {
	if o == nil || IsNil(o.Limit.Get()) {
		var ret int32
		return ret
	}
	return *o.Limit.Get()
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudienceRequestBody) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit.Get(), o.Limit.IsSet()
}

// HasLimit returns a boolean if a field has been set.
func (o *AudienceRequestBody) HasLimit() bool {
	if o != nil && o.Limit.IsSet() {
		return true
	}

	return false
}

// SetLimit gets a reference to the given NullableInt32 and assigns it to the Limit field.
func (o *AudienceRequestBody) SetLimit(v int32) {
	o.Limit.Set(&v)
}
// SetLimitNil sets the value for Limit to be an explicit nil
func (o *AudienceRequestBody) SetLimitNil() {
	o.Limit.Set(nil)
}

// UnsetLimit ensures that no value is present for Limit, not even an explicit nil
func (o *AudienceRequestBody) UnsetLimit() {
	o.Limit.Unset()
}

// GetOffset returns the Offset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudienceRequestBody) GetOffset() int32 {
	if o == nil || IsNil(o.Offset.Get()) {
		var ret int32
		return ret
	}
	return *o.Offset.Get()
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudienceRequestBody) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Offset.Get(), o.Offset.IsSet()
}

// HasOffset returns a boolean if a field has been set.
func (o *AudienceRequestBody) HasOffset() bool {
	if o != nil && o.Offset.IsSet() {
		return true
	}

	return false
}

// SetOffset gets a reference to the given NullableInt32 and assigns it to the Offset field.
func (o *AudienceRequestBody) SetOffset(v int32) {
	o.Offset.Set(&v)
}
// SetOffsetNil sets the value for Offset to be an explicit nil
func (o *AudienceRequestBody) SetOffsetNil() {
	o.Offset.Set(nil)
}

// UnsetOffset ensures that no value is present for Offset, not even an explicit nil
func (o *AudienceRequestBody) UnsetOffset() {
	o.Offset.Unset()
}

// GetQ returns the Q field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudienceRequestBody) GetQ() string {
	if o == nil || IsNil(o.Q.Get()) {
		var ret string
		return ret
	}
	return *o.Q.Get()
}

// GetQOk returns a tuple with the Q field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudienceRequestBody) GetQOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Q.Get(), o.Q.IsSet()
}

// HasQ returns a boolean if a field has been set.
func (o *AudienceRequestBody) HasQ() bool {
	if o != nil && o.Q.IsSet() {
		return true
	}

	return false
}

// SetQ gets a reference to the given NullableString and assigns it to the Q field.
func (o *AudienceRequestBody) SetQ(v string) {
	o.Q.Set(&v)
}
// SetQNil sets the value for Q to be an explicit nil
func (o *AudienceRequestBody) SetQNil() {
	o.Q.Set(nil)
}

// UnsetQ ensures that no value is present for Q, not even an explicit nil
func (o *AudienceRequestBody) UnsetQ() {
	o.Q.Unset()
}

func (o AudienceRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["condition_groups"] = o.ConditionGroups
	toSerialize["conditions"] = o.Conditions
	if o.Limit.IsSet() {
		toSerialize["limit"] = o.Limit.Get()
	}
	if o.Offset.IsSet() {
		toSerialize["offset"] = o.Offset.Get()
	}
	if o.Q.IsSet() {
		toSerialize["q"] = o.Q.Get()
	}
	return toSerialize, nil
}

func (o *AudienceRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"condition_groups",
		"conditions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAudienceRequestBody := _AudienceRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAudienceRequestBody)

	if err != nil {
		return err
	}

	*o = AudienceRequestBody(varAudienceRequestBody)

	return err
}

type NullableAudienceRequestBody struct {
	value *AudienceRequestBody
	isSet bool
}

func (v NullableAudienceRequestBody) Get() *AudienceRequestBody {
	return v.value
}

func (v *NullableAudienceRequestBody) Set(val *AudienceRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceRequestBody(val *AudienceRequestBody) *NullableAudienceRequestBody {
	return &NullableAudienceRequestBody{value: val, isSet: true}
}

func (v NullableAudienceRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


