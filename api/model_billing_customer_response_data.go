/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BillingCustomerResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingCustomerResponseData{}

// BillingCustomerResponseData The created resource
type BillingCustomerResponseData struct {
	CompanyId            NullableString `json:"company_id,omitempty"`
	DeletedAt            NullableTime   `json:"deleted_at,omitempty"`
	Email                string         `json:"email"`
	ExternalId           string         `json:"external_id"`
	FailedToImport       bool           `json:"failed_to_import"`
	Id                   string         `json:"id"`
	Name                 string         `json:"name"`
	UpdatedAt            time.Time      `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _BillingCustomerResponseData BillingCustomerResponseData

// NewBillingCustomerResponseData instantiates a new BillingCustomerResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingCustomerResponseData(email string, externalId string, failedToImport bool, id string, name string, updatedAt time.Time) *BillingCustomerResponseData {
	this := BillingCustomerResponseData{}
	this.Email = email
	this.ExternalId = externalId
	this.FailedToImport = failedToImport
	this.Id = id
	this.Name = name
	this.UpdatedAt = updatedAt
	return &this
}

// NewBillingCustomerResponseDataWithDefaults instantiates a new BillingCustomerResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingCustomerResponseDataWithDefaults() *BillingCustomerResponseData {
	this := BillingCustomerResponseData{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingCustomerResponseData) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyId.Get()
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingCustomerResponseData) GetCompanyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyId.Get(), o.CompanyId.IsSet()
}

// HasCompanyId returns a boolean if a field has been set.
func (o *BillingCustomerResponseData) HasCompanyId() bool {
	if o != nil && o.CompanyId.IsSet() {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given NullableString and assigns it to the CompanyId field.
func (o *BillingCustomerResponseData) SetCompanyId(v string) {
	o.CompanyId.Set(&v)
}

// SetCompanyIdNil sets the value for CompanyId to be an explicit nil
func (o *BillingCustomerResponseData) SetCompanyIdNil() {
	o.CompanyId.Set(nil)
}

// UnsetCompanyId ensures that no value is present for CompanyId, not even an explicit nil
func (o *BillingCustomerResponseData) UnsetCompanyId() {
	o.CompanyId.Unset()
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingCustomerResponseData) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingCustomerResponseData) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *BillingCustomerResponseData) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *BillingCustomerResponseData) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}

// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *BillingCustomerResponseData) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *BillingCustomerResponseData) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetEmail returns the Email field value
func (o *BillingCustomerResponseData) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *BillingCustomerResponseData) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *BillingCustomerResponseData) SetEmail(v string) {
	o.Email = v
}

// GetExternalId returns the ExternalId field value
func (o *BillingCustomerResponseData) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *BillingCustomerResponseData) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *BillingCustomerResponseData) SetExternalId(v string) {
	o.ExternalId = v
}

// GetFailedToImport returns the FailedToImport field value
func (o *BillingCustomerResponseData) GetFailedToImport() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FailedToImport
}

// GetFailedToImportOk returns a tuple with the FailedToImport field value
// and a boolean to check if the value has been set.
func (o *BillingCustomerResponseData) GetFailedToImportOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedToImport, true
}

// SetFailedToImport sets field value
func (o *BillingCustomerResponseData) SetFailedToImport(v bool) {
	o.FailedToImport = v
}

// GetId returns the Id field value
func (o *BillingCustomerResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingCustomerResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingCustomerResponseData) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *BillingCustomerResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingCustomerResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingCustomerResponseData) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingCustomerResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingCustomerResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingCustomerResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BillingCustomerResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingCustomerResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CompanyId.IsSet() {
		toSerialize["company_id"] = o.CompanyId.Get()
	}
	if o.DeletedAt.IsSet() {
		toSerialize["deleted_at"] = o.DeletedAt.Get()
	}
	toSerialize["email"] = o.Email
	toSerialize["external_id"] = o.ExternalId
	toSerialize["failed_to_import"] = o.FailedToImport
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BillingCustomerResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"external_id",
		"failed_to_import",
		"id",
		"name",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingCustomerResponseData := _BillingCustomerResponseData{}

	err = json.Unmarshal(data, &varBillingCustomerResponseData)

	if err != nil {
		return err
	}

	*o = BillingCustomerResponseData(varBillingCustomerResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "email")
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "failed_to_import")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingCustomerResponseData struct {
	value *BillingCustomerResponseData
	isSet bool
}

func (v NullableBillingCustomerResponseData) Get() *BillingCustomerResponseData {
	return v.value
}

func (v *NullableBillingCustomerResponseData) Set(val *BillingCustomerResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingCustomerResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingCustomerResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingCustomerResponseData(val *BillingCustomerResponseData) *NullableBillingCustomerResponseData {
	return &NullableBillingCustomerResponseData{value: val, isSet: true}
}

func (v NullableBillingCustomerResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingCustomerResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
