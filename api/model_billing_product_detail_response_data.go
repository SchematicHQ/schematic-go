/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BillingProductDetailResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingProductDetailResponseData{}

// BillingProductDetailResponseData struct for BillingProductDetailResponseData
type BillingProductDetailResponseData struct {
	Prices               []BillingPriceResponseData `json:"Prices"`
	AccountId            string                     `json:"account_id"`
	CreatedAt            time.Time                  `json:"created_at"`
	Currency             string                     `json:"currency"`
	EnvironmentId        string                     `json:"environment_id"`
	ExternalId           string                     `json:"external_id"`
	Name                 string                     `json:"name"`
	Price                float32                    `json:"price"`
	ProductId            string                     `json:"product_id"`
	Quantity             float32                    `json:"quantity"`
	UpdatedAt            time.Time                  `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _BillingProductDetailResponseData BillingProductDetailResponseData

// NewBillingProductDetailResponseData instantiates a new BillingProductDetailResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingProductDetailResponseData(prices []BillingPriceResponseData, accountId string, createdAt time.Time, currency string, environmentId string, externalId string, name string, price float32, productId string, quantity float32, updatedAt time.Time) *BillingProductDetailResponseData {
	this := BillingProductDetailResponseData{}
	this.Prices = prices
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.Currency = currency
	this.EnvironmentId = environmentId
	this.ExternalId = externalId
	this.Name = name
	this.Price = price
	this.ProductId = productId
	this.Quantity = quantity
	this.UpdatedAt = updatedAt
	return &this
}

// NewBillingProductDetailResponseDataWithDefaults instantiates a new BillingProductDetailResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingProductDetailResponseDataWithDefaults() *BillingProductDetailResponseData {
	this := BillingProductDetailResponseData{}
	return &this
}

// GetPrices returns the Prices field value
func (o *BillingProductDetailResponseData) GetPrices() []BillingPriceResponseData {
	if o == nil {
		var ret []BillingPriceResponseData
		return ret
	}

	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetPricesOk() ([]BillingPriceResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prices, true
}

// SetPrices sets field value
func (o *BillingProductDetailResponseData) SetPrices(v []BillingPriceResponseData) {
	o.Prices = v
}

// GetAccountId returns the AccountId field value
func (o *BillingProductDetailResponseData) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *BillingProductDetailResponseData) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingProductDetailResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingProductDetailResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCurrency returns the Currency field value
func (o *BillingProductDetailResponseData) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *BillingProductDetailResponseData) SetCurrency(v string) {
	o.Currency = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *BillingProductDetailResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *BillingProductDetailResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetExternalId returns the ExternalId field value
func (o *BillingProductDetailResponseData) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *BillingProductDetailResponseData) SetExternalId(v string) {
	o.ExternalId = v
}

// GetName returns the Name field value
func (o *BillingProductDetailResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingProductDetailResponseData) SetName(v string) {
	o.Name = v
}

// GetPrice returns the Price field value
func (o *BillingProductDetailResponseData) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *BillingProductDetailResponseData) SetPrice(v float32) {
	o.Price = v
}

// GetProductId returns the ProductId field value
func (o *BillingProductDetailResponseData) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *BillingProductDetailResponseData) SetProductId(v string) {
	o.ProductId = v
}

// GetQuantity returns the Quantity field value
func (o *BillingProductDetailResponseData) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *BillingProductDetailResponseData) SetQuantity(v float32) {
	o.Quantity = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingProductDetailResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingProductDetailResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingProductDetailResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BillingProductDetailResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingProductDetailResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Prices"] = o.Prices
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["currency"] = o.Currency
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["external_id"] = o.ExternalId
	toSerialize["name"] = o.Name
	toSerialize["price"] = o.Price
	toSerialize["product_id"] = o.ProductId
	toSerialize["quantity"] = o.Quantity
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BillingProductDetailResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Prices",
		"account_id",
		"created_at",
		"currency",
		"environment_id",
		"external_id",
		"name",
		"price",
		"product_id",
		"quantity",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingProductDetailResponseData := _BillingProductDetailResponseData{}

	err = json.Unmarshal(data, &varBillingProductDetailResponseData)

	if err != nil {
		return err
	}

	*o = BillingProductDetailResponseData(varBillingProductDetailResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "Prices")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "price")
		delete(additionalProperties, "product_id")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingProductDetailResponseData struct {
	value *BillingProductDetailResponseData
	isSet bool
}

func (v NullableBillingProductDetailResponseData) Get() *BillingProductDetailResponseData {
	return v.value
}

func (v *NullableBillingProductDetailResponseData) Set(val *BillingProductDetailResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingProductDetailResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingProductDetailResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingProductDetailResponseData(val *BillingProductDetailResponseData) *NullableBillingProductDetailResponseData {
	return &NullableBillingProductDetailResponseData{value: val, isSet: true}
}

func (v NullableBillingProductDetailResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingProductDetailResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
