/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BillingProductForSubscriptionResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingProductForSubscriptionResponseData{}

// BillingProductForSubscriptionResponseData struct for BillingProductForSubscriptionResponseData
type BillingProductForSubscriptionResponseData struct {
	AccountId            string         `json:"account_id"`
	CreatedAt            time.Time      `json:"created_at"`
	Currency             string         `json:"currency"`
	EnvironmentId        string         `json:"environment_id"`
	ExternalId           string         `json:"external_id"`
	Id                   string         `json:"id"`
	Interval             NullableString `json:"interval,omitempty"`
	Name                 string         `json:"name"`
	Price                float32        `json:"price"`
	Quantity             float32        `json:"quantity"`
	SubscriptionId       string         `json:"subscription_id"`
	UpdatedAt            time.Time      `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _BillingProductForSubscriptionResponseData BillingProductForSubscriptionResponseData

// NewBillingProductForSubscriptionResponseData instantiates a new BillingProductForSubscriptionResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingProductForSubscriptionResponseData(accountId string, createdAt time.Time, currency string, environmentId string, externalId string, id string, name string, price float32, quantity float32, subscriptionId string, updatedAt time.Time) *BillingProductForSubscriptionResponseData {
	this := BillingProductForSubscriptionResponseData{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.Currency = currency
	this.EnvironmentId = environmentId
	this.ExternalId = externalId
	this.Id = id
	this.Name = name
	this.Price = price
	this.Quantity = quantity
	this.SubscriptionId = subscriptionId
	this.UpdatedAt = updatedAt
	return &this
}

// NewBillingProductForSubscriptionResponseDataWithDefaults instantiates a new BillingProductForSubscriptionResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingProductForSubscriptionResponseDataWithDefaults() *BillingProductForSubscriptionResponseData {
	this := BillingProductForSubscriptionResponseData{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *BillingProductForSubscriptionResponseData) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *BillingProductForSubscriptionResponseData) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingProductForSubscriptionResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingProductForSubscriptionResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCurrency returns the Currency field value
func (o *BillingProductForSubscriptionResponseData) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *BillingProductForSubscriptionResponseData) SetCurrency(v string) {
	o.Currency = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *BillingProductForSubscriptionResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *BillingProductForSubscriptionResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetExternalId returns the ExternalId field value
func (o *BillingProductForSubscriptionResponseData) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *BillingProductForSubscriptionResponseData) SetExternalId(v string) {
	o.ExternalId = v
}

// GetId returns the Id field value
func (o *BillingProductForSubscriptionResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingProductForSubscriptionResponseData) SetId(v string) {
	o.Id = v
}

// GetInterval returns the Interval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingProductForSubscriptionResponseData) GetInterval() string {
	if o == nil || IsNil(o.Interval.Get()) {
		var ret string
		return ret
	}
	return *o.Interval.Get()
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingProductForSubscriptionResponseData) GetIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Interval.Get(), o.Interval.IsSet()
}

// HasInterval returns a boolean if a field has been set.
func (o *BillingProductForSubscriptionResponseData) HasInterval() bool {
	if o != nil && o.Interval.IsSet() {
		return true
	}

	return false
}

// SetInterval gets a reference to the given NullableString and assigns it to the Interval field.
func (o *BillingProductForSubscriptionResponseData) SetInterval(v string) {
	o.Interval.Set(&v)
}

// SetIntervalNil sets the value for Interval to be an explicit nil
func (o *BillingProductForSubscriptionResponseData) SetIntervalNil() {
	o.Interval.Set(nil)
}

// UnsetInterval ensures that no value is present for Interval, not even an explicit nil
func (o *BillingProductForSubscriptionResponseData) UnsetInterval() {
	o.Interval.Unset()
}

// GetName returns the Name field value
func (o *BillingProductForSubscriptionResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingProductForSubscriptionResponseData) SetName(v string) {
	o.Name = v
}

// GetPrice returns the Price field value
func (o *BillingProductForSubscriptionResponseData) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *BillingProductForSubscriptionResponseData) SetPrice(v float32) {
	o.Price = v
}

// GetQuantity returns the Quantity field value
func (o *BillingProductForSubscriptionResponseData) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *BillingProductForSubscriptionResponseData) SetQuantity(v float32) {
	o.Quantity = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *BillingProductForSubscriptionResponseData) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *BillingProductForSubscriptionResponseData) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingProductForSubscriptionResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingProductForSubscriptionResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingProductForSubscriptionResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BillingProductForSubscriptionResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingProductForSubscriptionResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["currency"] = o.Currency
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["external_id"] = o.ExternalId
	toSerialize["id"] = o.Id
	if o.Interval.IsSet() {
		toSerialize["interval"] = o.Interval.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["price"] = o.Price
	toSerialize["quantity"] = o.Quantity
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BillingProductForSubscriptionResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"currency",
		"environment_id",
		"external_id",
		"id",
		"name",
		"price",
		"quantity",
		"subscription_id",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingProductForSubscriptionResponseData := _BillingProductForSubscriptionResponseData{}

	err = json.Unmarshal(data, &varBillingProductForSubscriptionResponseData)

	if err != nil {
		return err
	}

	*o = BillingProductForSubscriptionResponseData(varBillingProductForSubscriptionResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "interval")
		delete(additionalProperties, "name")
		delete(additionalProperties, "price")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "subscription_id")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingProductForSubscriptionResponseData struct {
	value *BillingProductForSubscriptionResponseData
	isSet bool
}

func (v NullableBillingProductForSubscriptionResponseData) Get() *BillingProductForSubscriptionResponseData {
	return v.value
}

func (v *NullableBillingProductForSubscriptionResponseData) Set(val *BillingProductForSubscriptionResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingProductForSubscriptionResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingProductForSubscriptionResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingProductForSubscriptionResponseData(val *BillingProductForSubscriptionResponseData) *NullableBillingProductForSubscriptionResponseData {
	return &NullableBillingProductForSubscriptionResponseData{value: val, isSet: true}
}

func (v NullableBillingProductForSubscriptionResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingProductForSubscriptionResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
