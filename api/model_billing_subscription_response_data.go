/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the BillingSubscriptionResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingSubscriptionResponseData{}

// BillingSubscriptionResponseData The created resource
type BillingSubscriptionResponseData struct {
	CreatedAt  time.Time    `json:"CreatedAt"`
	DeletedAt  NullableTime `json:"DeletedAt,omitempty"`
	ExpiredAt  NullableTime `json:"ExpiredAt,omitempty"`
	ExternalId string       `json:"ExternalId"`
	ID         int32        `json:"ID"`
	UpdatedAt  time.Time    `json:"UpdatedAt"`
}

type _BillingSubscriptionResponseData BillingSubscriptionResponseData

// NewBillingSubscriptionResponseData instantiates a new BillingSubscriptionResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingSubscriptionResponseData(createdAt time.Time, externalId string, iD int32, updatedAt time.Time) *BillingSubscriptionResponseData {
	this := BillingSubscriptionResponseData{}
	this.CreatedAt = createdAt
	this.ExternalId = externalId
	this.ID = iD
	this.UpdatedAt = updatedAt
	return &this
}

// NewBillingSubscriptionResponseDataWithDefaults instantiates a new BillingSubscriptionResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingSubscriptionResponseDataWithDefaults() *BillingSubscriptionResponseData {
	this := BillingSubscriptionResponseData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingSubscriptionResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingSubscriptionResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingSubscriptionResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSubscriptionResponseData) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSubscriptionResponseData) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *BillingSubscriptionResponseData) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *BillingSubscriptionResponseData) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}

// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *BillingSubscriptionResponseData) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *BillingSubscriptionResponseData) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingSubscriptionResponseData) GetExpiredAt() time.Time {
	if o == nil || IsNil(o.ExpiredAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiredAt.Get()
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingSubscriptionResponseData) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiredAt.Get(), o.ExpiredAt.IsSet()
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *BillingSubscriptionResponseData) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt.IsSet() {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given NullableTime and assigns it to the ExpiredAt field.
func (o *BillingSubscriptionResponseData) SetExpiredAt(v time.Time) {
	o.ExpiredAt.Set(&v)
}

// SetExpiredAtNil sets the value for ExpiredAt to be an explicit nil
func (o *BillingSubscriptionResponseData) SetExpiredAtNil() {
	o.ExpiredAt.Set(nil)
}

// UnsetExpiredAt ensures that no value is present for ExpiredAt, not even an explicit nil
func (o *BillingSubscriptionResponseData) UnsetExpiredAt() {
	o.ExpiredAt.Unset()
}

// GetExternalId returns the ExternalId field value
func (o *BillingSubscriptionResponseData) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *BillingSubscriptionResponseData) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *BillingSubscriptionResponseData) SetExternalId(v string) {
	o.ExternalId = v
}

// GetID returns the ID field value
func (o *BillingSubscriptionResponseData) GetID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ID
}

// GetIDOk returns a tuple with the ID field value
// and a boolean to check if the value has been set.
func (o *BillingSubscriptionResponseData) GetIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ID, true
}

// SetID sets field value
func (o *BillingSubscriptionResponseData) SetID(v int32) {
	o.ID = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingSubscriptionResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingSubscriptionResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingSubscriptionResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BillingSubscriptionResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingSubscriptionResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CreatedAt"] = o.CreatedAt
	if o.DeletedAt.IsSet() {
		toSerialize["DeletedAt"] = o.DeletedAt.Get()
	}
	if o.ExpiredAt.IsSet() {
		toSerialize["ExpiredAt"] = o.ExpiredAt.Get()
	}
	toSerialize["ExternalId"] = o.ExternalId
	toSerialize["ID"] = o.ID
	toSerialize["UpdatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *BillingSubscriptionResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"CreatedAt",
		"ExternalId",
		"ID",
		"UpdatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingSubscriptionResponseData := _BillingSubscriptionResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingSubscriptionResponseData)

	if err != nil {
		return err
	}

	*o = BillingSubscriptionResponseData(varBillingSubscriptionResponseData)

	return err
}

type NullableBillingSubscriptionResponseData struct {
	value *BillingSubscriptionResponseData
	isSet bool
}

func (v NullableBillingSubscriptionResponseData) Get() *BillingSubscriptionResponseData {
	return v.value
}

func (v *NullableBillingSubscriptionResponseData) Set(val *BillingSubscriptionResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingSubscriptionResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingSubscriptionResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingSubscriptionResponseData(val *BillingSubscriptionResponseData) *NullableBillingSubscriptionResponseData {
	return &NullableBillingSubscriptionResponseData{value: val, isSet: true}
}

func (v NullableBillingSubscriptionResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingSubscriptionResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
