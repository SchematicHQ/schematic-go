/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CheckFlagRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckFlagRequestBody{}

// CheckFlagRequestBody struct for CheckFlagRequestBody
type CheckFlagRequestBody struct {
	Company map[string]interface{} `json:"company,omitempty"`
	User    map[string]interface{} `json:"user,omitempty"`
}

// NewCheckFlagRequestBody instantiates a new CheckFlagRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckFlagRequestBody() *CheckFlagRequestBody {
	this := CheckFlagRequestBody{}
	return &this
}

// NewCheckFlagRequestBodyWithDefaults instantiates a new CheckFlagRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckFlagRequestBodyWithDefaults() *CheckFlagRequestBody {
	this := CheckFlagRequestBody{}
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckFlagRequestBody) GetCompany() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckFlagRequestBody) GetCompanyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Company) {
		return map[string]interface{}{}, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *CheckFlagRequestBody) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given map[string]interface{} and assigns it to the Company field.
func (o *CheckFlagRequestBody) SetCompany(v map[string]interface{}) {
	o.Company = v
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckFlagRequestBody) GetUser() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckFlagRequestBody) GetUserOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.User) {
		return map[string]interface{}{}, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CheckFlagRequestBody) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given map[string]interface{} and assigns it to the User field.
func (o *CheckFlagRequestBody) SetUser(v map[string]interface{}) {
	o.User = v
}

func (o CheckFlagRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckFlagRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableCheckFlagRequestBody struct {
	value *CheckFlagRequestBody
	isSet bool
}

func (v NullableCheckFlagRequestBody) Get() *CheckFlagRequestBody {
	return v.value
}

func (v *NullableCheckFlagRequestBody) Set(val *CheckFlagRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckFlagRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckFlagRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckFlagRequestBody(val *CheckFlagRequestBody) *NullableCheckFlagRequestBody {
	return &NullableCheckFlagRequestBody{value: val, isSet: true}
}

func (v NullableCheckFlagRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckFlagRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
