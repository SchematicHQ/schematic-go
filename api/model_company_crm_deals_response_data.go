/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CompanyCrmDealsResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyCrmDealsResponseData{}

// CompanyCrmDealsResponseData struct for CompanyCrmDealsResponseData
type CompanyCrmDealsResponseData struct {
	DealArr        string            `json:"deal_arr"`
	DealExternalId string            `json:"deal_external_id"`
	DealMrr        string            `json:"deal_mrr"`
	DealName       NullableString    `json:"deal_name,omitempty"`
	LineItems      []CrmDealLineItem `json:"line_items"`
}

type _CompanyCrmDealsResponseData CompanyCrmDealsResponseData

// NewCompanyCrmDealsResponseData instantiates a new CompanyCrmDealsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyCrmDealsResponseData(dealArr string, dealExternalId string, dealMrr string, lineItems []CrmDealLineItem) *CompanyCrmDealsResponseData {
	this := CompanyCrmDealsResponseData{}
	this.DealArr = dealArr
	this.DealExternalId = dealExternalId
	this.DealMrr = dealMrr
	this.LineItems = lineItems
	return &this
}

// NewCompanyCrmDealsResponseDataWithDefaults instantiates a new CompanyCrmDealsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyCrmDealsResponseDataWithDefaults() *CompanyCrmDealsResponseData {
	this := CompanyCrmDealsResponseData{}
	return &this
}

// GetDealArr returns the DealArr field value
func (o *CompanyCrmDealsResponseData) GetDealArr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DealArr
}

// GetDealArrOk returns a tuple with the DealArr field value
// and a boolean to check if the value has been set.
func (o *CompanyCrmDealsResponseData) GetDealArrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DealArr, true
}

// SetDealArr sets field value
func (o *CompanyCrmDealsResponseData) SetDealArr(v string) {
	o.DealArr = v
}

// GetDealExternalId returns the DealExternalId field value
func (o *CompanyCrmDealsResponseData) GetDealExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DealExternalId
}

// GetDealExternalIdOk returns a tuple with the DealExternalId field value
// and a boolean to check if the value has been set.
func (o *CompanyCrmDealsResponseData) GetDealExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DealExternalId, true
}

// SetDealExternalId sets field value
func (o *CompanyCrmDealsResponseData) SetDealExternalId(v string) {
	o.DealExternalId = v
}

// GetDealMrr returns the DealMrr field value
func (o *CompanyCrmDealsResponseData) GetDealMrr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DealMrr
}

// GetDealMrrOk returns a tuple with the DealMrr field value
// and a boolean to check if the value has been set.
func (o *CompanyCrmDealsResponseData) GetDealMrrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DealMrr, true
}

// SetDealMrr sets field value
func (o *CompanyCrmDealsResponseData) SetDealMrr(v string) {
	o.DealMrr = v
}

// GetDealName returns the DealName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyCrmDealsResponseData) GetDealName() string {
	if o == nil || IsNil(o.DealName.Get()) {
		var ret string
		return ret
	}
	return *o.DealName.Get()
}

// GetDealNameOk returns a tuple with the DealName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyCrmDealsResponseData) GetDealNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DealName.Get(), o.DealName.IsSet()
}

// HasDealName returns a boolean if a field has been set.
func (o *CompanyCrmDealsResponseData) HasDealName() bool {
	if o != nil && o.DealName.IsSet() {
		return true
	}

	return false
}

// SetDealName gets a reference to the given NullableString and assigns it to the DealName field.
func (o *CompanyCrmDealsResponseData) SetDealName(v string) {
	o.DealName.Set(&v)
}

// SetDealNameNil sets the value for DealName to be an explicit nil
func (o *CompanyCrmDealsResponseData) SetDealNameNil() {
	o.DealName.Set(nil)
}

// UnsetDealName ensures that no value is present for DealName, not even an explicit nil
func (o *CompanyCrmDealsResponseData) UnsetDealName() {
	o.DealName.Unset()
}

// GetLineItems returns the LineItems field value
func (o *CompanyCrmDealsResponseData) GetLineItems() []CrmDealLineItem {
	if o == nil {
		var ret []CrmDealLineItem
		return ret
	}

	return o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value
// and a boolean to check if the value has been set.
func (o *CompanyCrmDealsResponseData) GetLineItemsOk() ([]CrmDealLineItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineItems, true
}

// SetLineItems sets field value
func (o *CompanyCrmDealsResponseData) SetLineItems(v []CrmDealLineItem) {
	o.LineItems = v
}

func (o CompanyCrmDealsResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyCrmDealsResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deal_arr"] = o.DealArr
	toSerialize["deal_external_id"] = o.DealExternalId
	toSerialize["deal_mrr"] = o.DealMrr
	if o.DealName.IsSet() {
		toSerialize["deal_name"] = o.DealName.Get()
	}
	toSerialize["line_items"] = o.LineItems
	return toSerialize, nil
}

func (o *CompanyCrmDealsResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deal_arr",
		"deal_external_id",
		"deal_mrr",
		"line_items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyCrmDealsResponseData := _CompanyCrmDealsResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompanyCrmDealsResponseData)

	if err != nil {
		return err
	}

	*o = CompanyCrmDealsResponseData(varCompanyCrmDealsResponseData)

	return err
}

type NullableCompanyCrmDealsResponseData struct {
	value *CompanyCrmDealsResponseData
	isSet bool
}

func (v NullableCompanyCrmDealsResponseData) Get() *CompanyCrmDealsResponseData {
	return v.value
}

func (v *NullableCompanyCrmDealsResponseData) Set(val *CompanyCrmDealsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyCrmDealsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyCrmDealsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyCrmDealsResponseData(val *CompanyCrmDealsResponseData) *NullableCompanyCrmDealsResponseData {
	return &NullableCompanyCrmDealsResponseData{value: val, isSet: true}
}

func (v NullableCompanyCrmDealsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyCrmDealsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
