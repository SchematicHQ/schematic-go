/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateCRMProductRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCRMProductRequestBody{}

// CreateCRMProductRequestBody struct for CreateCRMProductRequestBody
type CreateCRMProductRequestBody struct {
	Currency    string  `json:"currency"`
	Description string  `json:"description"`
	ExternalId  string  `json:"external_id"`
	Interval    string  `json:"interval"`
	Name        string  `json:"name"`
	Price       float32 `json:"price"`
	Quantity    int32   `json:"quantity"`
	Sku         string  `json:"sku"`
}

type _CreateCRMProductRequestBody CreateCRMProductRequestBody

// NewCreateCRMProductRequestBody instantiates a new CreateCRMProductRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCRMProductRequestBody(currency string, description string, externalId string, interval string, name string, price float32, quantity int32, sku string) *CreateCRMProductRequestBody {
	this := CreateCRMProductRequestBody{}
	this.Currency = currency
	this.Description = description
	this.ExternalId = externalId
	this.Interval = interval
	this.Name = name
	this.Price = price
	this.Quantity = quantity
	this.Sku = sku
	return &this
}

// NewCreateCRMProductRequestBodyWithDefaults instantiates a new CreateCRMProductRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCRMProductRequestBodyWithDefaults() *CreateCRMProductRequestBody {
	this := CreateCRMProductRequestBody{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *CreateCRMProductRequestBody) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreateCRMProductRequestBody) SetCurrency(v string) {
	o.Currency = v
}

// GetDescription returns the Description field value
func (o *CreateCRMProductRequestBody) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateCRMProductRequestBody) SetDescription(v string) {
	o.Description = v
}

// GetExternalId returns the ExternalId field value
func (o *CreateCRMProductRequestBody) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *CreateCRMProductRequestBody) SetExternalId(v string) {
	o.ExternalId = v
}

// GetInterval returns the Interval field value
func (o *CreateCRMProductRequestBody) GetInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *CreateCRMProductRequestBody) SetInterval(v string) {
	o.Interval = v
}

// GetName returns the Name field value
func (o *CreateCRMProductRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCRMProductRequestBody) SetName(v string) {
	o.Name = v
}

// GetPrice returns the Price field value
func (o *CreateCRMProductRequestBody) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *CreateCRMProductRequestBody) SetPrice(v float32) {
	o.Price = v
}

// GetQuantity returns the Quantity field value
func (o *CreateCRMProductRequestBody) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CreateCRMProductRequestBody) SetQuantity(v int32) {
	o.Quantity = v
}

// GetSku returns the Sku field value
func (o *CreateCRMProductRequestBody) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *CreateCRMProductRequestBody) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *CreateCRMProductRequestBody) SetSku(v string) {
	o.Sku = v
}

func (o CreateCRMProductRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCRMProductRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["description"] = o.Description
	toSerialize["external_id"] = o.ExternalId
	toSerialize["interval"] = o.Interval
	toSerialize["name"] = o.Name
	toSerialize["price"] = o.Price
	toSerialize["quantity"] = o.Quantity
	toSerialize["sku"] = o.Sku
	return toSerialize, nil
}

func (o *CreateCRMProductRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currency",
		"description",
		"external_id",
		"interval",
		"name",
		"price",
		"quantity",
		"sku",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCRMProductRequestBody := _CreateCRMProductRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCRMProductRequestBody)

	if err != nil {
		return err
	}

	*o = CreateCRMProductRequestBody(varCreateCRMProductRequestBody)

	return err
}

type NullableCreateCRMProductRequestBody struct {
	value *CreateCRMProductRequestBody
	isSet bool
}

func (v NullableCreateCRMProductRequestBody) Get() *CreateCRMProductRequestBody {
	return v.value
}

func (v *NullableCreateCRMProductRequestBody) Set(val *CreateCRMProductRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCRMProductRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCRMProductRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCRMProductRequestBody(val *CreateCRMProductRequestBody) *NullableCreateCRMProductRequestBody {
	return &NullableCreateCRMProductRequestBody{value: val, isSet: true}
}

func (v NullableCreateCRMProductRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCRMProductRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
