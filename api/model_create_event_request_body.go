/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CreateEventRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEventRequestBody{}

// CreateEventRequestBody struct for CreateEventRequestBody
type CreateEventRequestBody struct {
	Body *EventBody `json:"body,omitempty"`
	// Either 'identify' or 'track'
	EventType string `json:"event_type"`
	// Optionally provide a timestamp at which the event was sent to Schematic
	SentAt NullableTime `json:"sent_at,omitempty"`
}

type _CreateEventRequestBody CreateEventRequestBody

// NewCreateEventRequestBody instantiates a new CreateEventRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEventRequestBody(eventType string) *CreateEventRequestBody {
	this := CreateEventRequestBody{}
	this.EventType = eventType
	return &this
}

// NewCreateEventRequestBodyWithDefaults instantiates a new CreateEventRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEventRequestBodyWithDefaults() *CreateEventRequestBody {
	this := CreateEventRequestBody{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CreateEventRequestBody) GetBody() EventBody {
	if o == nil || IsNil(o.Body) {
		var ret EventBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEventRequestBody) GetBodyOk() (*EventBody, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CreateEventRequestBody) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given EventBody and assigns it to the Body field.
func (o *CreateEventRequestBody) SetBody(v EventBody) {
	o.Body = &v
}

// GetEventType returns the EventType field value
func (o *CreateEventRequestBody) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *CreateEventRequestBody) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *CreateEventRequestBody) SetEventType(v string) {
	o.EventType = v
}

// GetSentAt returns the SentAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEventRequestBody) GetSentAt() time.Time {
	if o == nil || IsNil(o.SentAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.SentAt.Get()
}

// GetSentAtOk returns a tuple with the SentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEventRequestBody) GetSentAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SentAt.Get(), o.SentAt.IsSet()
}

// HasSentAt returns a boolean if a field has been set.
func (o *CreateEventRequestBody) HasSentAt() bool {
	if o != nil && o.SentAt.IsSet() {
		return true
	}

	return false
}

// SetSentAt gets a reference to the given NullableTime and assigns it to the SentAt field.
func (o *CreateEventRequestBody) SetSentAt(v time.Time) {
	o.SentAt.Set(&v)
}

// SetSentAtNil sets the value for SentAt to be an explicit nil
func (o *CreateEventRequestBody) SetSentAtNil() {
	o.SentAt.Set(nil)
}

// UnsetSentAt ensures that no value is present for SentAt, not even an explicit nil
func (o *CreateEventRequestBody) UnsetSentAt() {
	o.SentAt.Unset()
}

func (o CreateEventRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEventRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	toSerialize["event_type"] = o.EventType
	if o.SentAt.IsSet() {
		toSerialize["sent_at"] = o.SentAt.Get()
	}
	return toSerialize, nil
}

func (o *CreateEventRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateEventRequestBody := _CreateEventRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateEventRequestBody)

	if err != nil {
		return err
	}

	*o = CreateEventRequestBody(varCreateEventRequestBody)

	return err
}

type NullableCreateEventRequestBody struct {
	value *CreateEventRequestBody
	isSet bool
}

func (v NullableCreateEventRequestBody) Get() *CreateEventRequestBody {
	return v.value
}

func (v *NullableCreateEventRequestBody) Set(val *CreateEventRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEventRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEventRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEventRequestBody(val *CreateEventRequestBody) *NullableCreateEventRequestBody {
	return &NullableCreateEventRequestBody{value: val, isSet: true}
}

func (v NullableCreateEventRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEventRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
