/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrUpdateConditionRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateConditionRequestBody{}

// CreateOrUpdateConditionRequestBody struct for CreateOrUpdateConditionRequestBody
type CreateOrUpdateConditionRequestBody struct {
	// Optionally provide a trait ID to compare a metric or trait value against instead of a value
	ComparisonTraitId NullableString `json:"comparison_trait_id,omitempty"`
	ConditionType string `json:"condition_type"`
	// Name of track event type used to measure this condition
	EventSubtype NullableString `json:"event_subtype,omitempty"`
	Id NullableString `json:"id,omitempty"`
	// Period of time over which to measure the track event metric
	MetricPeriod NullableString `json:"metric_period,omitempty"`
	// Value to compare the track event metric against
	MetricValue int32 `json:"metric_value"`
	Operator string `json:"operator"`
	// List of resource IDs (companies, users, or plans) targeted by this condition
	ResourceIds []string `json:"resource_ids"`
	// ID of trait to use to measure this condition
	TraitId NullableString `json:"trait_id,omitempty"`
	// Value to compare the trait value against
	TraitValue NullableString `json:"trait_value,omitempty"`
}

type _CreateOrUpdateConditionRequestBody CreateOrUpdateConditionRequestBody

// NewCreateOrUpdateConditionRequestBody instantiates a new CreateOrUpdateConditionRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateConditionRequestBody(conditionType string, metricValue int32, operator string, resourceIds []string) *CreateOrUpdateConditionRequestBody {
	this := CreateOrUpdateConditionRequestBody{}
	this.ConditionType = conditionType
	this.MetricValue = metricValue
	this.Operator = operator
	this.ResourceIds = resourceIds
	return &this
}

// NewCreateOrUpdateConditionRequestBodyWithDefaults instantiates a new CreateOrUpdateConditionRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateConditionRequestBodyWithDefaults() *CreateOrUpdateConditionRequestBody {
	this := CreateOrUpdateConditionRequestBody{}
	return &this
}

// GetComparisonTraitId returns the ComparisonTraitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateConditionRequestBody) GetComparisonTraitId() string {
	if o == nil || IsNil(o.ComparisonTraitId.Get()) {
		var ret string
		return ret
	}
	return *o.ComparisonTraitId.Get()
}

// GetComparisonTraitIdOk returns a tuple with the ComparisonTraitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateConditionRequestBody) GetComparisonTraitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComparisonTraitId.Get(), o.ComparisonTraitId.IsSet()
}

// HasComparisonTraitId returns a boolean if a field has been set.
func (o *CreateOrUpdateConditionRequestBody) HasComparisonTraitId() bool {
	if o != nil && o.ComparisonTraitId.IsSet() {
		return true
	}

	return false
}

// SetComparisonTraitId gets a reference to the given NullableString and assigns it to the ComparisonTraitId field.
func (o *CreateOrUpdateConditionRequestBody) SetComparisonTraitId(v string) {
	o.ComparisonTraitId.Set(&v)
}
// SetComparisonTraitIdNil sets the value for ComparisonTraitId to be an explicit nil
func (o *CreateOrUpdateConditionRequestBody) SetComparisonTraitIdNil() {
	o.ComparisonTraitId.Set(nil)
}

// UnsetComparisonTraitId ensures that no value is present for ComparisonTraitId, not even an explicit nil
func (o *CreateOrUpdateConditionRequestBody) UnsetComparisonTraitId() {
	o.ComparisonTraitId.Unset()
}

// GetConditionType returns the ConditionType field value
func (o *CreateOrUpdateConditionRequestBody) GetConditionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConditionType
}

// GetConditionTypeOk returns a tuple with the ConditionType field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConditionRequestBody) GetConditionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConditionType, true
}

// SetConditionType sets field value
func (o *CreateOrUpdateConditionRequestBody) SetConditionType(v string) {
	o.ConditionType = v
}

// GetEventSubtype returns the EventSubtype field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateConditionRequestBody) GetEventSubtype() string {
	if o == nil || IsNil(o.EventSubtype.Get()) {
		var ret string
		return ret
	}
	return *o.EventSubtype.Get()
}

// GetEventSubtypeOk returns a tuple with the EventSubtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateConditionRequestBody) GetEventSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventSubtype.Get(), o.EventSubtype.IsSet()
}

// HasEventSubtype returns a boolean if a field has been set.
func (o *CreateOrUpdateConditionRequestBody) HasEventSubtype() bool {
	if o != nil && o.EventSubtype.IsSet() {
		return true
	}

	return false
}

// SetEventSubtype gets a reference to the given NullableString and assigns it to the EventSubtype field.
func (o *CreateOrUpdateConditionRequestBody) SetEventSubtype(v string) {
	o.EventSubtype.Set(&v)
}
// SetEventSubtypeNil sets the value for EventSubtype to be an explicit nil
func (o *CreateOrUpdateConditionRequestBody) SetEventSubtypeNil() {
	o.EventSubtype.Set(nil)
}

// UnsetEventSubtype ensures that no value is present for EventSubtype, not even an explicit nil
func (o *CreateOrUpdateConditionRequestBody) UnsetEventSubtype() {
	o.EventSubtype.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateConditionRequestBody) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateConditionRequestBody) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CreateOrUpdateConditionRequestBody) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CreateOrUpdateConditionRequestBody) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CreateOrUpdateConditionRequestBody) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CreateOrUpdateConditionRequestBody) UnsetId() {
	o.Id.Unset()
}

// GetMetricPeriod returns the MetricPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateConditionRequestBody) GetMetricPeriod() string {
	if o == nil || IsNil(o.MetricPeriod.Get()) {
		var ret string
		return ret
	}
	return *o.MetricPeriod.Get()
}

// GetMetricPeriodOk returns a tuple with the MetricPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateConditionRequestBody) GetMetricPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricPeriod.Get(), o.MetricPeriod.IsSet()
}

// HasMetricPeriod returns a boolean if a field has been set.
func (o *CreateOrUpdateConditionRequestBody) HasMetricPeriod() bool {
	if o != nil && o.MetricPeriod.IsSet() {
		return true
	}

	return false
}

// SetMetricPeriod gets a reference to the given NullableString and assigns it to the MetricPeriod field.
func (o *CreateOrUpdateConditionRequestBody) SetMetricPeriod(v string) {
	o.MetricPeriod.Set(&v)
}
// SetMetricPeriodNil sets the value for MetricPeriod to be an explicit nil
func (o *CreateOrUpdateConditionRequestBody) SetMetricPeriodNil() {
	o.MetricPeriod.Set(nil)
}

// UnsetMetricPeriod ensures that no value is present for MetricPeriod, not even an explicit nil
func (o *CreateOrUpdateConditionRequestBody) UnsetMetricPeriod() {
	o.MetricPeriod.Unset()
}

// GetMetricValue returns the MetricValue field value
func (o *CreateOrUpdateConditionRequestBody) GetMetricValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MetricValue
}

// GetMetricValueOk returns a tuple with the MetricValue field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConditionRequestBody) GetMetricValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricValue, true
}

// SetMetricValue sets field value
func (o *CreateOrUpdateConditionRequestBody) SetMetricValue(v int32) {
	o.MetricValue = v
}

// GetOperator returns the Operator field value
func (o *CreateOrUpdateConditionRequestBody) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConditionRequestBody) GetOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *CreateOrUpdateConditionRequestBody) SetOperator(v string) {
	o.Operator = v
}

// GetResourceIds returns the ResourceIds field value
func (o *CreateOrUpdateConditionRequestBody) GetResourceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ResourceIds
}

// GetResourceIdsOk returns a tuple with the ResourceIds field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateConditionRequestBody) GetResourceIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceIds, true
}

// SetResourceIds sets field value
func (o *CreateOrUpdateConditionRequestBody) SetResourceIds(v []string) {
	o.ResourceIds = v
}

// GetTraitId returns the TraitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateConditionRequestBody) GetTraitId() string {
	if o == nil || IsNil(o.TraitId.Get()) {
		var ret string
		return ret
	}
	return *o.TraitId.Get()
}

// GetTraitIdOk returns a tuple with the TraitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateConditionRequestBody) GetTraitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraitId.Get(), o.TraitId.IsSet()
}

// HasTraitId returns a boolean if a field has been set.
func (o *CreateOrUpdateConditionRequestBody) HasTraitId() bool {
	if o != nil && o.TraitId.IsSet() {
		return true
	}

	return false
}

// SetTraitId gets a reference to the given NullableString and assigns it to the TraitId field.
func (o *CreateOrUpdateConditionRequestBody) SetTraitId(v string) {
	o.TraitId.Set(&v)
}
// SetTraitIdNil sets the value for TraitId to be an explicit nil
func (o *CreateOrUpdateConditionRequestBody) SetTraitIdNil() {
	o.TraitId.Set(nil)
}

// UnsetTraitId ensures that no value is present for TraitId, not even an explicit nil
func (o *CreateOrUpdateConditionRequestBody) UnsetTraitId() {
	o.TraitId.Unset()
}

// GetTraitValue returns the TraitValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateConditionRequestBody) GetTraitValue() string {
	if o == nil || IsNil(o.TraitValue.Get()) {
		var ret string
		return ret
	}
	return *o.TraitValue.Get()
}

// GetTraitValueOk returns a tuple with the TraitValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateConditionRequestBody) GetTraitValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraitValue.Get(), o.TraitValue.IsSet()
}

// HasTraitValue returns a boolean if a field has been set.
func (o *CreateOrUpdateConditionRequestBody) HasTraitValue() bool {
	if o != nil && o.TraitValue.IsSet() {
		return true
	}

	return false
}

// SetTraitValue gets a reference to the given NullableString and assigns it to the TraitValue field.
func (o *CreateOrUpdateConditionRequestBody) SetTraitValue(v string) {
	o.TraitValue.Set(&v)
}
// SetTraitValueNil sets the value for TraitValue to be an explicit nil
func (o *CreateOrUpdateConditionRequestBody) SetTraitValueNil() {
	o.TraitValue.Set(nil)
}

// UnsetTraitValue ensures that no value is present for TraitValue, not even an explicit nil
func (o *CreateOrUpdateConditionRequestBody) UnsetTraitValue() {
	o.TraitValue.Unset()
}

func (o CreateOrUpdateConditionRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateConditionRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ComparisonTraitId.IsSet() {
		toSerialize["comparison_trait_id"] = o.ComparisonTraitId.Get()
	}
	toSerialize["condition_type"] = o.ConditionType
	if o.EventSubtype.IsSet() {
		toSerialize["event_subtype"] = o.EventSubtype.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.MetricPeriod.IsSet() {
		toSerialize["metric_period"] = o.MetricPeriod.Get()
	}
	toSerialize["metric_value"] = o.MetricValue
	toSerialize["operator"] = o.Operator
	toSerialize["resource_ids"] = o.ResourceIds
	if o.TraitId.IsSet() {
		toSerialize["trait_id"] = o.TraitId.Get()
	}
	if o.TraitValue.IsSet() {
		toSerialize["trait_value"] = o.TraitValue.Get()
	}
	return toSerialize, nil
}

func (o *CreateOrUpdateConditionRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"condition_type",
		"metric_value",
		"operator",
		"resource_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateConditionRequestBody := _CreateOrUpdateConditionRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateConditionRequestBody)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateConditionRequestBody(varCreateOrUpdateConditionRequestBody)

	return err
}

type NullableCreateOrUpdateConditionRequestBody struct {
	value *CreateOrUpdateConditionRequestBody
	isSet bool
}

func (v NullableCreateOrUpdateConditionRequestBody) Get() *CreateOrUpdateConditionRequestBody {
	return v.value
}

func (v *NullableCreateOrUpdateConditionRequestBody) Set(val *CreateOrUpdateConditionRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateConditionRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateConditionRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateConditionRequestBody(val *CreateOrUpdateConditionRequestBody) *NullableCreateOrUpdateConditionRequestBody {
	return &NullableCreateOrUpdateConditionRequestBody{value: val, isSet: true}
}

func (v NullableCreateOrUpdateConditionRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateConditionRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


