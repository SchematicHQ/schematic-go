/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CrmDealLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrmDealLineItem{}

// CrmDealLineItem struct for CrmDealLineItem
type CrmDealLineItem struct {
	BillingFrequency   string                 `json:"billing_frequency"`
	CreatedAt          time.Time              `json:"created_at"`
	Currency           string                 `json:"currency"`
	Description        string                 `json:"description"`
	DiscountPercentage map[string]interface{} `json:"discount_percentage,omitempty"`
	Id                 string                 `json:"id"`
	Name               string                 `json:"name"`
	Price              float32                `json:"price"`
	Quantity           int32                  `json:"quantity"`
	TermMonth          NullableInt32          `json:"term_month,omitempty"`
	TotalDiscount      map[string]interface{} `json:"total_discount,omitempty"`
	UpdatedAt          time.Time              `json:"updated_at"`
}

type _CrmDealLineItem CrmDealLineItem

// NewCrmDealLineItem instantiates a new CrmDealLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrmDealLineItem(billingFrequency string, createdAt time.Time, currency string, description string, id string, name string, price float32, quantity int32, updatedAt time.Time) *CrmDealLineItem {
	this := CrmDealLineItem{}
	this.BillingFrequency = billingFrequency
	this.CreatedAt = createdAt
	this.Currency = currency
	this.Description = description
	this.Id = id
	this.Name = name
	this.Price = price
	this.Quantity = quantity
	this.UpdatedAt = updatedAt
	return &this
}

// NewCrmDealLineItemWithDefaults instantiates a new CrmDealLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrmDealLineItemWithDefaults() *CrmDealLineItem {
	this := CrmDealLineItem{}
	return &this
}

// GetBillingFrequency returns the BillingFrequency field value
func (o *CrmDealLineItem) GetBillingFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingFrequency
}

// GetBillingFrequencyOk returns a tuple with the BillingFrequency field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetBillingFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingFrequency, true
}

// SetBillingFrequency sets field value
func (o *CrmDealLineItem) SetBillingFrequency(v string) {
	o.BillingFrequency = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CrmDealLineItem) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CrmDealLineItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCurrency returns the Currency field value
func (o *CrmDealLineItem) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CrmDealLineItem) SetCurrency(v string) {
	o.Currency = v
}

// GetDescription returns the Description field value
func (o *CrmDealLineItem) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CrmDealLineItem) SetDescription(v string) {
	o.Description = v
}

// GetDiscountPercentage returns the DiscountPercentage field value if set, zero value otherwise.
func (o *CrmDealLineItem) GetDiscountPercentage() map[string]interface{} {
	if o == nil || IsNil(o.DiscountPercentage) {
		var ret map[string]interface{}
		return ret
	}
	return o.DiscountPercentage
}

// GetDiscountPercentageOk returns a tuple with the DiscountPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetDiscountPercentageOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DiscountPercentage) {
		return map[string]interface{}{}, false
	}
	return o.DiscountPercentage, true
}

// HasDiscountPercentage returns a boolean if a field has been set.
func (o *CrmDealLineItem) HasDiscountPercentage() bool {
	if o != nil && !IsNil(o.DiscountPercentage) {
		return true
	}

	return false
}

// SetDiscountPercentage gets a reference to the given map[string]interface{} and assigns it to the DiscountPercentage field.
func (o *CrmDealLineItem) SetDiscountPercentage(v map[string]interface{}) {
	o.DiscountPercentage = v
}

// GetId returns the Id field value
func (o *CrmDealLineItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CrmDealLineItem) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CrmDealLineItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CrmDealLineItem) SetName(v string) {
	o.Name = v
}

// GetPrice returns the Price field value
func (o *CrmDealLineItem) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *CrmDealLineItem) SetPrice(v float32) {
	o.Price = v
}

// GetQuantity returns the Quantity field value
func (o *CrmDealLineItem) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CrmDealLineItem) SetQuantity(v int32) {
	o.Quantity = v
}

// GetTermMonth returns the TermMonth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrmDealLineItem) GetTermMonth() int32 {
	if o == nil || IsNil(o.TermMonth.Get()) {
		var ret int32
		return ret
	}
	return *o.TermMonth.Get()
}

// GetTermMonthOk returns a tuple with the TermMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrmDealLineItem) GetTermMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TermMonth.Get(), o.TermMonth.IsSet()
}

// HasTermMonth returns a boolean if a field has been set.
func (o *CrmDealLineItem) HasTermMonth() bool {
	if o != nil && o.TermMonth.IsSet() {
		return true
	}

	return false
}

// SetTermMonth gets a reference to the given NullableInt32 and assigns it to the TermMonth field.
func (o *CrmDealLineItem) SetTermMonth(v int32) {
	o.TermMonth.Set(&v)
}

// SetTermMonthNil sets the value for TermMonth to be an explicit nil
func (o *CrmDealLineItem) SetTermMonthNil() {
	o.TermMonth.Set(nil)
}

// UnsetTermMonth ensures that no value is present for TermMonth, not even an explicit nil
func (o *CrmDealLineItem) UnsetTermMonth() {
	o.TermMonth.Unset()
}

// GetTotalDiscount returns the TotalDiscount field value if set, zero value otherwise.
func (o *CrmDealLineItem) GetTotalDiscount() map[string]interface{} {
	if o == nil || IsNil(o.TotalDiscount) {
		var ret map[string]interface{}
		return ret
	}
	return o.TotalDiscount
}

// GetTotalDiscountOk returns a tuple with the TotalDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetTotalDiscountOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TotalDiscount) {
		return map[string]interface{}{}, false
	}
	return o.TotalDiscount, true
}

// HasTotalDiscount returns a boolean if a field has been set.
func (o *CrmDealLineItem) HasTotalDiscount() bool {
	if o != nil && !IsNil(o.TotalDiscount) {
		return true
	}

	return false
}

// SetTotalDiscount gets a reference to the given map[string]interface{} and assigns it to the TotalDiscount field.
func (o *CrmDealLineItem) SetTotalDiscount(v map[string]interface{}) {
	o.TotalDiscount = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CrmDealLineItem) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CrmDealLineItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CrmDealLineItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CrmDealLineItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrmDealLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["billing_frequency"] = o.BillingFrequency
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["currency"] = o.Currency
	toSerialize["description"] = o.Description
	if !IsNil(o.DiscountPercentage) {
		toSerialize["discount_percentage"] = o.DiscountPercentage
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["price"] = o.Price
	toSerialize["quantity"] = o.Quantity
	if o.TermMonth.IsSet() {
		toSerialize["term_month"] = o.TermMonth.Get()
	}
	if !IsNil(o.TotalDiscount) {
		toSerialize["total_discount"] = o.TotalDiscount
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *CrmDealLineItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"billing_frequency",
		"created_at",
		"currency",
		"description",
		"id",
		"name",
		"price",
		"quantity",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCrmDealLineItem := _CrmDealLineItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCrmDealLineItem)

	if err != nil {
		return err
	}

	*o = CrmDealLineItem(varCrmDealLineItem)

	return err
}

type NullableCrmDealLineItem struct {
	value *CrmDealLineItem
	isSet bool
}

func (v NullableCrmDealLineItem) Get() *CrmDealLineItem {
	return v.value
}

func (v *NullableCrmDealLineItem) Set(val *CrmDealLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCrmDealLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCrmDealLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrmDealLineItem(val *CrmDealLineItem) *NullableCrmDealLineItem {
	return &NullableCrmDealLineItem{value: val, isSet: true}
}

func (v NullableCrmDealLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrmDealLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
