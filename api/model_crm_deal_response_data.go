/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CrmDealResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrmDealResponseData{}

// CrmDealResponseData The created resource
type CrmDealResponseData struct {
	AccountId         string         `json:"account_id"`
	Arr               string         `json:"arr"`
	CompanyExternalId NullableString `json:"company_external_id,omitempty"`
	CreatedAt         time.Time      `json:"created_at"`
	DealExternalId    string         `json:"deal_external_id"`
	DealId            string         `json:"deal_id"`
	DeletedAt         NullableTime   `json:"deleted_at,omitempty"`
	EnvironmentId     string         `json:"environment_id"`
	Mrr               string         `json:"mrr"`
	Name              NullableString `json:"name,omitempty"`
	ProductExternalId NullableString `json:"product_external_id,omitempty"`
	UpdatedAt         time.Time      `json:"updated_at"`
}

type _CrmDealResponseData CrmDealResponseData

// NewCrmDealResponseData instantiates a new CrmDealResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrmDealResponseData(accountId string, arr string, createdAt time.Time, dealExternalId string, dealId string, environmentId string, mrr string, updatedAt time.Time) *CrmDealResponseData {
	this := CrmDealResponseData{}
	this.AccountId = accountId
	this.Arr = arr
	this.CreatedAt = createdAt
	this.DealExternalId = dealExternalId
	this.DealId = dealId
	this.EnvironmentId = environmentId
	this.Mrr = mrr
	this.UpdatedAt = updatedAt
	return &this
}

// NewCrmDealResponseDataWithDefaults instantiates a new CrmDealResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrmDealResponseDataWithDefaults() *CrmDealResponseData {
	this := CrmDealResponseData{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *CrmDealResponseData) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CrmDealResponseData) SetAccountId(v string) {
	o.AccountId = v
}

// GetArr returns the Arr field value
func (o *CrmDealResponseData) GetArr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arr
}

// GetArrOk returns a tuple with the Arr field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetArrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Arr, true
}

// SetArr sets field value
func (o *CrmDealResponseData) SetArr(v string) {
	o.Arr = v
}

// GetCompanyExternalId returns the CompanyExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrmDealResponseData) GetCompanyExternalId() string {
	if o == nil || IsNil(o.CompanyExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyExternalId.Get()
}

// GetCompanyExternalIdOk returns a tuple with the CompanyExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrmDealResponseData) GetCompanyExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyExternalId.Get(), o.CompanyExternalId.IsSet()
}

// HasCompanyExternalId returns a boolean if a field has been set.
func (o *CrmDealResponseData) HasCompanyExternalId() bool {
	if o != nil && o.CompanyExternalId.IsSet() {
		return true
	}

	return false
}

// SetCompanyExternalId gets a reference to the given NullableString and assigns it to the CompanyExternalId field.
func (o *CrmDealResponseData) SetCompanyExternalId(v string) {
	o.CompanyExternalId.Set(&v)
}

// SetCompanyExternalIdNil sets the value for CompanyExternalId to be an explicit nil
func (o *CrmDealResponseData) SetCompanyExternalIdNil() {
	o.CompanyExternalId.Set(nil)
}

// UnsetCompanyExternalId ensures that no value is present for CompanyExternalId, not even an explicit nil
func (o *CrmDealResponseData) UnsetCompanyExternalId() {
	o.CompanyExternalId.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *CrmDealResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CrmDealResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDealExternalId returns the DealExternalId field value
func (o *CrmDealResponseData) GetDealExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DealExternalId
}

// GetDealExternalIdOk returns a tuple with the DealExternalId field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetDealExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DealExternalId, true
}

// SetDealExternalId sets field value
func (o *CrmDealResponseData) SetDealExternalId(v string) {
	o.DealExternalId = v
}

// GetDealId returns the DealId field value
func (o *CrmDealResponseData) GetDealId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DealId
}

// GetDealIdOk returns a tuple with the DealId field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetDealIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DealId, true
}

// SetDealId sets field value
func (o *CrmDealResponseData) SetDealId(v string) {
	o.DealId = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrmDealResponseData) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrmDealResponseData) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *CrmDealResponseData) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableTime and assigns it to the DeletedAt field.
func (o *CrmDealResponseData) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}

// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *CrmDealResponseData) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *CrmDealResponseData) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *CrmDealResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *CrmDealResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetMrr returns the Mrr field value
func (o *CrmDealResponseData) GetMrr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mrr
}

// GetMrrOk returns a tuple with the Mrr field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetMrrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mrr, true
}

// SetMrr sets field value
func (o *CrmDealResponseData) SetMrr(v string) {
	o.Mrr = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrmDealResponseData) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrmDealResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CrmDealResponseData) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CrmDealResponseData) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CrmDealResponseData) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CrmDealResponseData) UnsetName() {
	o.Name.Unset()
}

// GetProductExternalId returns the ProductExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrmDealResponseData) GetProductExternalId() string {
	if o == nil || IsNil(o.ProductExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ProductExternalId.Get()
}

// GetProductExternalIdOk returns a tuple with the ProductExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrmDealResponseData) GetProductExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductExternalId.Get(), o.ProductExternalId.IsSet()
}

// HasProductExternalId returns a boolean if a field has been set.
func (o *CrmDealResponseData) HasProductExternalId() bool {
	if o != nil && o.ProductExternalId.IsSet() {
		return true
	}

	return false
}

// SetProductExternalId gets a reference to the given NullableString and assigns it to the ProductExternalId field.
func (o *CrmDealResponseData) SetProductExternalId(v string) {
	o.ProductExternalId.Set(&v)
}

// SetProductExternalIdNil sets the value for ProductExternalId to be an explicit nil
func (o *CrmDealResponseData) SetProductExternalIdNil() {
	o.ProductExternalId.Set(nil)
}

// UnsetProductExternalId ensures that no value is present for ProductExternalId, not even an explicit nil
func (o *CrmDealResponseData) UnsetProductExternalId() {
	o.ProductExternalId.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CrmDealResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CrmDealResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CrmDealResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CrmDealResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrmDealResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["arr"] = o.Arr
	if o.CompanyExternalId.IsSet() {
		toSerialize["company_external_id"] = o.CompanyExternalId.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["deal_external_id"] = o.DealExternalId
	toSerialize["deal_id"] = o.DealId
	if o.DeletedAt.IsSet() {
		toSerialize["deleted_at"] = o.DeletedAt.Get()
	}
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["mrr"] = o.Mrr
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ProductExternalId.IsSet() {
		toSerialize["product_external_id"] = o.ProductExternalId.Get()
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *CrmDealResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"arr",
		"created_at",
		"deal_external_id",
		"deal_id",
		"environment_id",
		"mrr",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCrmDealResponseData := _CrmDealResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCrmDealResponseData)

	if err != nil {
		return err
	}

	*o = CrmDealResponseData(varCrmDealResponseData)

	return err
}

type NullableCrmDealResponseData struct {
	value *CrmDealResponseData
	isSet bool
}

func (v NullableCrmDealResponseData) Get() *CrmDealResponseData {
	return v.value
}

func (v *NullableCrmDealResponseData) Set(val *CrmDealResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCrmDealResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCrmDealResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrmDealResponseData(val *CrmDealResponseData) *NullableCrmDealResponseData {
	return &NullableCrmDealResponseData{value: val, isSet: true}
}

func (v NullableCrmDealResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrmDealResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
