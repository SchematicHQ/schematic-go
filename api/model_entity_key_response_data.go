/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the EntityKeyResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityKeyResponseData{}

// EntityKeyResponseData struct for EntityKeyResponseData
type EntityKeyResponseData struct {
	CreatedAt time.Time `json:"created_at"`
	DefinitionId string `json:"definition_id"`
	EntityId string `json:"entity_id"`
	EntityType string `json:"entity_type"`
	EnvironmentId string `json:"environment_id"`
	Id string `json:"id"`
	Key string `json:"key"`
	UpdatedAt time.Time `json:"updated_at"`
	Value string `json:"value"`
}

type _EntityKeyResponseData EntityKeyResponseData

// NewEntityKeyResponseData instantiates a new EntityKeyResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityKeyResponseData(createdAt time.Time, definitionId string, entityId string, entityType string, environmentId string, id string, key string, updatedAt time.Time, value string) *EntityKeyResponseData {
	this := EntityKeyResponseData{}
	this.CreatedAt = createdAt
	this.DefinitionId = definitionId
	this.EntityId = entityId
	this.EntityType = entityType
	this.EnvironmentId = environmentId
	this.Id = id
	this.Key = key
	this.UpdatedAt = updatedAt
	this.Value = value
	return &this
}

// NewEntityKeyResponseDataWithDefaults instantiates a new EntityKeyResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityKeyResponseDataWithDefaults() *EntityKeyResponseData {
	this := EntityKeyResponseData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *EntityKeyResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EntityKeyResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDefinitionId returns the DefinitionId field value
func (o *EntityKeyResponseData) GetDefinitionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefinitionId
}

// GetDefinitionIdOk returns a tuple with the DefinitionId field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefinitionId, true
}

// SetDefinitionId sets field value
func (o *EntityKeyResponseData) SetDefinitionId(v string) {
	o.DefinitionId = v
}

// GetEntityId returns the EntityId field value
func (o *EntityKeyResponseData) GetEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityId, true
}

// SetEntityId sets field value
func (o *EntityKeyResponseData) SetEntityId(v string) {
	o.EntityId = v
}

// GetEntityType returns the EntityType field value
func (o *EntityKeyResponseData) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *EntityKeyResponseData) SetEntityType(v string) {
	o.EntityType = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *EntityKeyResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *EntityKeyResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetId returns the Id field value
func (o *EntityKeyResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EntityKeyResponseData) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *EntityKeyResponseData) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *EntityKeyResponseData) SetKey(v string) {
	o.Key = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *EntityKeyResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *EntityKeyResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetValue returns the Value field value
func (o *EntityKeyResponseData) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *EntityKeyResponseData) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *EntityKeyResponseData) SetValue(v string) {
	o.Value = v
}

func (o EntityKeyResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityKeyResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["definition_id"] = o.DefinitionId
	toSerialize["entity_id"] = o.EntityId
	toSerialize["entity_type"] = o.EntityType
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *EntityKeyResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"definition_id",
		"entity_id",
		"entity_type",
		"environment_id",
		"id",
		"key",
		"updated_at",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEntityKeyResponseData := _EntityKeyResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEntityKeyResponseData)

	if err != nil {
		return err
	}

	*o = EntityKeyResponseData(varEntityKeyResponseData)

	return err
}

type NullableEntityKeyResponseData struct {
	value *EntityKeyResponseData
	isSet bool
}

func (v NullableEntityKeyResponseData) Get() *EntityKeyResponseData {
	return v.value
}

func (v *NullableEntityKeyResponseData) Set(val *EntityKeyResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityKeyResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityKeyResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityKeyResponseData(val *EntityKeyResponseData) *NullableEntityKeyResponseData {
	return &NullableEntityKeyResponseData{value: val, isSet: true}
}

func (v NullableEntityKeyResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityKeyResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


