/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the EntityTraitDetailResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityTraitDetailResponseData{}

// EntityTraitDetailResponseData struct for EntityTraitDetailResponseData
type EntityTraitDetailResponseData struct {
	CreatedAt     time.Time                          `json:"created_at"`
	Definition    *EntityTraitDefinitionResponseData `json:"definition,omitempty"`
	DefinitionId  string                             `json:"definition_id"`
	EnvironmentId string                             `json:"environment_id"`
	Id            string                             `json:"id"`
	UpdatedAt     time.Time                          `json:"updated_at"`
	Value         string                             `json:"value"`
}

type _EntityTraitDetailResponseData EntityTraitDetailResponseData

// NewEntityTraitDetailResponseData instantiates a new EntityTraitDetailResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityTraitDetailResponseData(createdAt time.Time, definitionId string, environmentId string, id string, updatedAt time.Time, value string) *EntityTraitDetailResponseData {
	this := EntityTraitDetailResponseData{}
	this.CreatedAt = createdAt
	this.DefinitionId = definitionId
	this.EnvironmentId = environmentId
	this.Id = id
	this.UpdatedAt = updatedAt
	this.Value = value
	return &this
}

// NewEntityTraitDetailResponseDataWithDefaults instantiates a new EntityTraitDetailResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityTraitDetailResponseDataWithDefaults() *EntityTraitDetailResponseData {
	this := EntityTraitDetailResponseData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *EntityTraitDetailResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EntityTraitDetailResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *EntityTraitDetailResponseData) GetDefinition() EntityTraitDefinitionResponseData {
	if o == nil || IsNil(o.Definition) {
		var ret EntityTraitDefinitionResponseData
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetDefinitionOk() (*EntityTraitDefinitionResponseData, bool) {
	if o == nil || IsNil(o.Definition) {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *EntityTraitDetailResponseData) HasDefinition() bool {
	if o != nil && !IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given EntityTraitDefinitionResponseData and assigns it to the Definition field.
func (o *EntityTraitDetailResponseData) SetDefinition(v EntityTraitDefinitionResponseData) {
	o.Definition = &v
}

// GetDefinitionId returns the DefinitionId field value
func (o *EntityTraitDetailResponseData) GetDefinitionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefinitionId
}

// GetDefinitionIdOk returns a tuple with the DefinitionId field value
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetDefinitionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefinitionId, true
}

// SetDefinitionId sets field value
func (o *EntityTraitDetailResponseData) SetDefinitionId(v string) {
	o.DefinitionId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *EntityTraitDetailResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *EntityTraitDetailResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetId returns the Id field value
func (o *EntityTraitDetailResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EntityTraitDetailResponseData) SetId(v string) {
	o.Id = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *EntityTraitDetailResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *EntityTraitDetailResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetValue returns the Value field value
func (o *EntityTraitDetailResponseData) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *EntityTraitDetailResponseData) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *EntityTraitDetailResponseData) SetValue(v string) {
	o.Value = v
}

func (o EntityTraitDetailResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityTraitDetailResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	toSerialize["definition_id"] = o.DefinitionId
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["id"] = o.Id
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *EntityTraitDetailResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"definition_id",
		"environment_id",
		"id",
		"updated_at",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEntityTraitDetailResponseData := _EntityTraitDetailResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEntityTraitDetailResponseData)

	if err != nil {
		return err
	}

	*o = EntityTraitDetailResponseData(varEntityTraitDetailResponseData)

	return err
}

type NullableEntityTraitDetailResponseData struct {
	value *EntityTraitDetailResponseData
	isSet bool
}

func (v NullableEntityTraitDetailResponseData) Get() *EntityTraitDetailResponseData {
	return v.value
}

func (v *NullableEntityTraitDetailResponseData) Set(val *EntityTraitDetailResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityTraitDetailResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityTraitDetailResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityTraitDetailResponseData(val *EntityTraitDetailResponseData) *NullableEntityTraitDetailResponseData {
	return &NullableEntityTraitDetailResponseData{value: val, isSet: true}
}

func (v NullableEntityTraitDetailResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityTraitDetailResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
