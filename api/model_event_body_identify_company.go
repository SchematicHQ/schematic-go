/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EventBodyIdentifyCompany type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventBodyIdentifyCompany{}

// EventBodyIdentifyCompany Information about the company associated with the user; required only if it is a new user
type EventBodyIdentifyCompany struct {
	// Key-value pairs to identify the company
	Keys map[string]interface{} `json:"keys"`
	// The display name of the company; required only if it is a new company
	Name *string `json:"name,omitempty"`
	// A map of company trait names to trait values
	Traits map[string]interface{} `json:"traits,omitempty"`
}

type _EventBodyIdentifyCompany EventBodyIdentifyCompany

// NewEventBodyIdentifyCompany instantiates a new EventBodyIdentifyCompany object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventBodyIdentifyCompany(keys map[string]interface{}) *EventBodyIdentifyCompany {
	this := EventBodyIdentifyCompany{}
	this.Keys = keys
	return &this
}

// NewEventBodyIdentifyCompanyWithDefaults instantiates a new EventBodyIdentifyCompany object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventBodyIdentifyCompanyWithDefaults() *EventBodyIdentifyCompany {
	this := EventBodyIdentifyCompany{}
	return &this
}

// GetKeys returns the Keys field value
func (o *EventBodyIdentifyCompany) GetKeys() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *EventBodyIdentifyCompany) GetKeysOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Keys, true
}

// SetKeys sets field value
func (o *EventBodyIdentifyCompany) SetKeys(v map[string]interface{}) {
	o.Keys = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EventBodyIdentifyCompany) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventBodyIdentifyCompany) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EventBodyIdentifyCompany) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EventBodyIdentifyCompany) SetName(v string) {
	o.Name = &v
}

// GetTraits returns the Traits field value if set, zero value otherwise.
func (o *EventBodyIdentifyCompany) GetTraits() map[string]interface{} {
	if o == nil || IsNil(o.Traits) {
		var ret map[string]interface{}
		return ret
	}
	return o.Traits
}

// GetTraitsOk returns a tuple with the Traits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventBodyIdentifyCompany) GetTraitsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Traits) {
		return map[string]interface{}{}, false
	}
	return o.Traits, true
}

// HasTraits returns a boolean if a field has been set.
func (o *EventBodyIdentifyCompany) HasTraits() bool {
	if o != nil && !IsNil(o.Traits) {
		return true
	}

	return false
}

// SetTraits gets a reference to the given map[string]interface{} and assigns it to the Traits field.
func (o *EventBodyIdentifyCompany) SetTraits(v map[string]interface{}) {
	o.Traits = v
}

func (o EventBodyIdentifyCompany) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventBodyIdentifyCompany) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keys"] = o.Keys
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Traits) {
		toSerialize["traits"] = o.Traits
	}
	return toSerialize, nil
}

func (o *EventBodyIdentifyCompany) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"keys",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventBodyIdentifyCompany := _EventBodyIdentifyCompany{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventBodyIdentifyCompany)

	if err != nil {
		return err
	}

	*o = EventBodyIdentifyCompany(varEventBodyIdentifyCompany)

	return err
}

type NullableEventBodyIdentifyCompany struct {
	value *EventBodyIdentifyCompany
	isSet bool
}

func (v NullableEventBodyIdentifyCompany) Get() *EventBodyIdentifyCompany {
	return v.value
}

func (v *NullableEventBodyIdentifyCompany) Set(val *EventBodyIdentifyCompany) {
	v.value = val
	v.isSet = true
}

func (v NullableEventBodyIdentifyCompany) IsSet() bool {
	return v.isSet
}

func (v *NullableEventBodyIdentifyCompany) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventBodyIdentifyCompany(val *EventBodyIdentifyCompany) *NullableEventBodyIdentifyCompany {
	return &NullableEventBodyIdentifyCompany{value: val, isSet: true}
}

func (v NullableEventBodyIdentifyCompany) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventBodyIdentifyCompany) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
