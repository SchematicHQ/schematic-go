/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EventSummaryResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventSummaryResponseData{}

// EventSummaryResponseData struct for EventSummaryResponseData
type EventSummaryResponseData struct {
	EnvironmentId string `json:"environment_id"`
	EventSubtype string `json:"event_subtype"`
	Last30CompanyCount int32 `json:"last_30_company_count"`
	Last30Count int32 `json:"last_30_count"`
	Last30UserCount int32 `json:"last_30_user_count"`
}

type _EventSummaryResponseData EventSummaryResponseData

// NewEventSummaryResponseData instantiates a new EventSummaryResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventSummaryResponseData(environmentId string, eventSubtype string, last30CompanyCount int32, last30Count int32, last30UserCount int32) *EventSummaryResponseData {
	this := EventSummaryResponseData{}
	this.EnvironmentId = environmentId
	this.EventSubtype = eventSubtype
	this.Last30CompanyCount = last30CompanyCount
	this.Last30Count = last30Count
	this.Last30UserCount = last30UserCount
	return &this
}

// NewEventSummaryResponseDataWithDefaults instantiates a new EventSummaryResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventSummaryResponseDataWithDefaults() *EventSummaryResponseData {
	this := EventSummaryResponseData{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *EventSummaryResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *EventSummaryResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *EventSummaryResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEventSubtype returns the EventSubtype field value
func (o *EventSummaryResponseData) GetEventSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventSubtype
}

// GetEventSubtypeOk returns a tuple with the EventSubtype field value
// and a boolean to check if the value has been set.
func (o *EventSummaryResponseData) GetEventSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventSubtype, true
}

// SetEventSubtype sets field value
func (o *EventSummaryResponseData) SetEventSubtype(v string) {
	o.EventSubtype = v
}

// GetLast30CompanyCount returns the Last30CompanyCount field value
func (o *EventSummaryResponseData) GetLast30CompanyCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Last30CompanyCount
}

// GetLast30CompanyCountOk returns a tuple with the Last30CompanyCount field value
// and a boolean to check if the value has been set.
func (o *EventSummaryResponseData) GetLast30CompanyCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last30CompanyCount, true
}

// SetLast30CompanyCount sets field value
func (o *EventSummaryResponseData) SetLast30CompanyCount(v int32) {
	o.Last30CompanyCount = v
}

// GetLast30Count returns the Last30Count field value
func (o *EventSummaryResponseData) GetLast30Count() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Last30Count
}

// GetLast30CountOk returns a tuple with the Last30Count field value
// and a boolean to check if the value has been set.
func (o *EventSummaryResponseData) GetLast30CountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last30Count, true
}

// SetLast30Count sets field value
func (o *EventSummaryResponseData) SetLast30Count(v int32) {
	o.Last30Count = v
}

// GetLast30UserCount returns the Last30UserCount field value
func (o *EventSummaryResponseData) GetLast30UserCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Last30UserCount
}

// GetLast30UserCountOk returns a tuple with the Last30UserCount field value
// and a boolean to check if the value has been set.
func (o *EventSummaryResponseData) GetLast30UserCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last30UserCount, true
}

// SetLast30UserCount sets field value
func (o *EventSummaryResponseData) SetLast30UserCount(v int32) {
	o.Last30UserCount = v
}

func (o EventSummaryResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventSummaryResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["event_subtype"] = o.EventSubtype
	toSerialize["last_30_company_count"] = o.Last30CompanyCount
	toSerialize["last_30_count"] = o.Last30Count
	toSerialize["last_30_user_count"] = o.Last30UserCount
	return toSerialize, nil
}

func (o *EventSummaryResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environment_id",
		"event_subtype",
		"last_30_company_count",
		"last_30_count",
		"last_30_user_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventSummaryResponseData := _EventSummaryResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventSummaryResponseData)

	if err != nil {
		return err
	}

	*o = EventSummaryResponseData(varEventSummaryResponseData)

	return err
}

type NullableEventSummaryResponseData struct {
	value *EventSummaryResponseData
	isSet bool
}

func (v NullableEventSummaryResponseData) Get() *EventSummaryResponseData {
	return v.value
}

func (v *NullableEventSummaryResponseData) Set(val *EventSummaryResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEventSummaryResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEventSummaryResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventSummaryResponseData(val *EventSummaryResponseData) *NullableEventSummaryResponseData {
	return &NullableEventSummaryResponseData{value: val, isSet: true}
}

func (v NullableEventSummaryResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventSummaryResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


