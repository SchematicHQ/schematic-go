/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the FlagCheckLogResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlagCheckLogResponseData{}

// FlagCheckLogResponseData struct for FlagCheckLogResponseData
type FlagCheckLogResponseData struct {
	CheckStatus          string            `json:"check_status"`
	CompanyId            NullableString    `json:"company_id,omitempty"`
	CreatedAt            time.Time         `json:"created_at"`
	EnvironmentId        string            `json:"environment_id"`
	Error                NullableString    `json:"error,omitempty"`
	FlagId               NullableString    `json:"flag_id,omitempty"`
	FlagKey              string            `json:"flag_key"`
	Id                   string            `json:"id"`
	Reason               string            `json:"reason"`
	ReqCompany           map[string]string `json:"req_company,omitempty"`
	ReqUser              map[string]string `json:"req_user,omitempty"`
	RuleId               NullableString    `json:"rule_id,omitempty"`
	UpdatedAt            time.Time         `json:"updated_at"`
	UserId               NullableString    `json:"user_id,omitempty"`
	Value                bool              `json:"value"`
	AdditionalProperties map[string]interface{}
}

type _FlagCheckLogResponseData FlagCheckLogResponseData

// NewFlagCheckLogResponseData instantiates a new FlagCheckLogResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlagCheckLogResponseData(checkStatus string, createdAt time.Time, environmentId string, flagKey string, id string, reason string, updatedAt time.Time, value bool) *FlagCheckLogResponseData {
	this := FlagCheckLogResponseData{}
	this.CheckStatus = checkStatus
	this.CreatedAt = createdAt
	this.EnvironmentId = environmentId
	this.FlagKey = flagKey
	this.Id = id
	this.Reason = reason
	this.UpdatedAt = updatedAt
	this.Value = value
	return &this
}

// NewFlagCheckLogResponseDataWithDefaults instantiates a new FlagCheckLogResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagCheckLogResponseDataWithDefaults() *FlagCheckLogResponseData {
	this := FlagCheckLogResponseData{}
	return &this
}

// GetCheckStatus returns the CheckStatus field value
func (o *FlagCheckLogResponseData) GetCheckStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckStatus
}

// GetCheckStatusOk returns a tuple with the CheckStatus field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetCheckStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckStatus, true
}

// SetCheckStatus sets field value
func (o *FlagCheckLogResponseData) SetCheckStatus(v string) {
	o.CheckStatus = v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId.Get()) {
		var ret string
		return ret
	}
	return *o.CompanyId.Get()
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetCompanyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyId.Get(), o.CompanyId.IsSet()
}

// HasCompanyId returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasCompanyId() bool {
	if o != nil && o.CompanyId.IsSet() {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given NullableString and assigns it to the CompanyId field.
func (o *FlagCheckLogResponseData) SetCompanyId(v string) {
	o.CompanyId.Set(&v)
}

// SetCompanyIdNil sets the value for CompanyId to be an explicit nil
func (o *FlagCheckLogResponseData) SetCompanyIdNil() {
	o.CompanyId.Set(nil)
}

// UnsetCompanyId ensures that no value is present for CompanyId, not even an explicit nil
func (o *FlagCheckLogResponseData) UnsetCompanyId() {
	o.CompanyId.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *FlagCheckLogResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FlagCheckLogResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *FlagCheckLogResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *FlagCheckLogResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetError() string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *FlagCheckLogResponseData) SetError(v string) {
	o.Error.Set(&v)
}

// SetErrorNil sets the value for Error to be an explicit nil
func (o *FlagCheckLogResponseData) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *FlagCheckLogResponseData) UnsetError() {
	o.Error.Unset()
}

// GetFlagId returns the FlagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetFlagId() string {
	if o == nil || IsNil(o.FlagId.Get()) {
		var ret string
		return ret
	}
	return *o.FlagId.Get()
}

// GetFlagIdOk returns a tuple with the FlagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetFlagIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FlagId.Get(), o.FlagId.IsSet()
}

// HasFlagId returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasFlagId() bool {
	if o != nil && o.FlagId.IsSet() {
		return true
	}

	return false
}

// SetFlagId gets a reference to the given NullableString and assigns it to the FlagId field.
func (o *FlagCheckLogResponseData) SetFlagId(v string) {
	o.FlagId.Set(&v)
}

// SetFlagIdNil sets the value for FlagId to be an explicit nil
func (o *FlagCheckLogResponseData) SetFlagIdNil() {
	o.FlagId.Set(nil)
}

// UnsetFlagId ensures that no value is present for FlagId, not even an explicit nil
func (o *FlagCheckLogResponseData) UnsetFlagId() {
	o.FlagId.Unset()
}

// GetFlagKey returns the FlagKey field value
func (o *FlagCheckLogResponseData) GetFlagKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlagKey
}

// GetFlagKeyOk returns a tuple with the FlagKey field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetFlagKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlagKey, true
}

// SetFlagKey sets field value
func (o *FlagCheckLogResponseData) SetFlagKey(v string) {
	o.FlagKey = v
}

// GetId returns the Id field value
func (o *FlagCheckLogResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FlagCheckLogResponseData) SetId(v string) {
	o.Id = v
}

// GetReason returns the Reason field value
func (o *FlagCheckLogResponseData) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *FlagCheckLogResponseData) SetReason(v string) {
	o.Reason = v
}

// GetReqCompany returns the ReqCompany field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetReqCompany() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ReqCompany
}

// GetReqCompanyOk returns a tuple with the ReqCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetReqCompanyOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ReqCompany) {
		return nil, false
	}
	return &o.ReqCompany, true
}

// HasReqCompany returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasReqCompany() bool {
	if o != nil && !IsNil(o.ReqCompany) {
		return true
	}

	return false
}

// SetReqCompany gets a reference to the given map[string]string and assigns it to the ReqCompany field.
func (o *FlagCheckLogResponseData) SetReqCompany(v map[string]string) {
	o.ReqCompany = v
}

// GetReqUser returns the ReqUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetReqUser() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ReqUser
}

// GetReqUserOk returns a tuple with the ReqUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetReqUserOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ReqUser) {
		return nil, false
	}
	return &o.ReqUser, true
}

// HasReqUser returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasReqUser() bool {
	if o != nil && !IsNil(o.ReqUser) {
		return true
	}

	return false
}

// SetReqUser gets a reference to the given map[string]string and assigns it to the ReqUser field.
func (o *FlagCheckLogResponseData) SetReqUser(v map[string]string) {
	o.ReqUser = v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetRuleId() string {
	if o == nil || IsNil(o.RuleId.Get()) {
		var ret string
		return ret
	}
	return *o.RuleId.Get()
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuleId.Get(), o.RuleId.IsSet()
}

// HasRuleId returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasRuleId() bool {
	if o != nil && o.RuleId.IsSet() {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given NullableString and assigns it to the RuleId field.
func (o *FlagCheckLogResponseData) SetRuleId(v string) {
	o.RuleId.Set(&v)
}

// SetRuleIdNil sets the value for RuleId to be an explicit nil
func (o *FlagCheckLogResponseData) SetRuleIdNil() {
	o.RuleId.Set(nil)
}

// UnsetRuleId ensures that no value is present for RuleId, not even an explicit nil
func (o *FlagCheckLogResponseData) UnsetRuleId() {
	o.RuleId.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *FlagCheckLogResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *FlagCheckLogResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagCheckLogResponseData) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagCheckLogResponseData) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *FlagCheckLogResponseData) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *FlagCheckLogResponseData) SetUserId(v string) {
	o.UserId.Set(&v)
}

// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *FlagCheckLogResponseData) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *FlagCheckLogResponseData) UnsetUserId() {
	o.UserId.Unset()
}

// GetValue returns the Value field value
func (o *FlagCheckLogResponseData) GetValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FlagCheckLogResponseData) GetValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FlagCheckLogResponseData) SetValue(v bool) {
	o.Value = v
}

func (o FlagCheckLogResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlagCheckLogResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["check_status"] = o.CheckStatus
	if o.CompanyId.IsSet() {
		toSerialize["company_id"] = o.CompanyId.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["environment_id"] = o.EnvironmentId
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.FlagId.IsSet() {
		toSerialize["flag_id"] = o.FlagId.Get()
	}
	toSerialize["flag_key"] = o.FlagKey
	toSerialize["id"] = o.Id
	toSerialize["reason"] = o.Reason
	if o.ReqCompany != nil {
		toSerialize["req_company"] = o.ReqCompany
	}
	if o.ReqUser != nil {
		toSerialize["req_user"] = o.ReqUser
	}
	if o.RuleId.IsSet() {
		toSerialize["rule_id"] = o.RuleId.Get()
	}
	toSerialize["updated_at"] = o.UpdatedAt
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	toSerialize["value"] = o.Value

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FlagCheckLogResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"check_status",
		"created_at",
		"environment_id",
		"flag_key",
		"id",
		"reason",
		"updated_at",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFlagCheckLogResponseData := _FlagCheckLogResponseData{}

	err = json.Unmarshal(data, &varFlagCheckLogResponseData)

	if err != nil {
		return err
	}

	*o = FlagCheckLogResponseData(varFlagCheckLogResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "check_status")
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "error")
		delete(additionalProperties, "flag_id")
		delete(additionalProperties, "flag_key")
		delete(additionalProperties, "id")
		delete(additionalProperties, "reason")
		delete(additionalProperties, "req_company")
		delete(additionalProperties, "req_user")
		delete(additionalProperties, "rule_id")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFlagCheckLogResponseData struct {
	value *FlagCheckLogResponseData
	isSet bool
}

func (v NullableFlagCheckLogResponseData) Get() *FlagCheckLogResponseData {
	return v.value
}

func (v *NullableFlagCheckLogResponseData) Set(val *FlagCheckLogResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableFlagCheckLogResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableFlagCheckLogResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlagCheckLogResponseData(val *FlagCheckLogResponseData) *NullableFlagCheckLogResponseData {
	return &NullableFlagCheckLogResponseData{value: val, isSet: true}
}

func (v NullableFlagCheckLogResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlagCheckLogResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
