/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the FlagDetailResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlagDetailResponseData{}

// FlagDetailResponseData The updated resource
type FlagDetailResponseData struct {
	CreatedAt    time.Time                `json:"created_at"`
	DefaultValue bool                     `json:"default_value"`
	Description  string                   `json:"description"`
	FeatureId    NullableString           `json:"feature_id,omitempty"`
	FlagType     string                   `json:"flag_type"`
	Id           string                   `json:"id"`
	Key          string                   `json:"key"`
	Name         string                   `json:"name"`
	Rules        []RuleDetailResponseData `json:"rules"`
	UpdatedAt    time.Time                `json:"updated_at"`
}

type _FlagDetailResponseData FlagDetailResponseData

// NewFlagDetailResponseData instantiates a new FlagDetailResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlagDetailResponseData(createdAt time.Time, defaultValue bool, description string, flagType string, id string, key string, name string, rules []RuleDetailResponseData, updatedAt time.Time) *FlagDetailResponseData {
	this := FlagDetailResponseData{}
	this.CreatedAt = createdAt
	this.DefaultValue = defaultValue
	this.Description = description
	this.FlagType = flagType
	this.Id = id
	this.Key = key
	this.Name = name
	this.Rules = rules
	this.UpdatedAt = updatedAt
	return &this
}

// NewFlagDetailResponseDataWithDefaults instantiates a new FlagDetailResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagDetailResponseDataWithDefaults() *FlagDetailResponseData {
	this := FlagDetailResponseData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *FlagDetailResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FlagDetailResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDefaultValue returns the DefaultValue field value
func (o *FlagDetailResponseData) GetDefaultValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetDefaultValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultValue, true
}

// SetDefaultValue sets field value
func (o *FlagDetailResponseData) SetDefaultValue(v bool) {
	o.DefaultValue = v
}

// GetDescription returns the Description field value
func (o *FlagDetailResponseData) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *FlagDetailResponseData) SetDescription(v string) {
	o.Description = v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagDetailResponseData) GetFeatureId() string {
	if o == nil || IsNil(o.FeatureId.Get()) {
		var ret string
		return ret
	}
	return *o.FeatureId.Get()
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagDetailResponseData) GetFeatureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeatureId.Get(), o.FeatureId.IsSet()
}

// HasFeatureId returns a boolean if a field has been set.
func (o *FlagDetailResponseData) HasFeatureId() bool {
	if o != nil && o.FeatureId.IsSet() {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given NullableString and assigns it to the FeatureId field.
func (o *FlagDetailResponseData) SetFeatureId(v string) {
	o.FeatureId.Set(&v)
}

// SetFeatureIdNil sets the value for FeatureId to be an explicit nil
func (o *FlagDetailResponseData) SetFeatureIdNil() {
	o.FeatureId.Set(nil)
}

// UnsetFeatureId ensures that no value is present for FeatureId, not even an explicit nil
func (o *FlagDetailResponseData) UnsetFeatureId() {
	o.FeatureId.Unset()
}

// GetFlagType returns the FlagType field value
func (o *FlagDetailResponseData) GetFlagType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlagType
}

// GetFlagTypeOk returns a tuple with the FlagType field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetFlagTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlagType, true
}

// SetFlagType sets field value
func (o *FlagDetailResponseData) SetFlagType(v string) {
	o.FlagType = v
}

// GetId returns the Id field value
func (o *FlagDetailResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FlagDetailResponseData) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *FlagDetailResponseData) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *FlagDetailResponseData) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *FlagDetailResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FlagDetailResponseData) SetName(v string) {
	o.Name = v
}

// GetRules returns the Rules field value
func (o *FlagDetailResponseData) GetRules() []RuleDetailResponseData {
	if o == nil {
		var ret []RuleDetailResponseData
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetRulesOk() ([]RuleDetailResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *FlagDetailResponseData) SetRules(v []RuleDetailResponseData) {
	o.Rules = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *FlagDetailResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *FlagDetailResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *FlagDetailResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o FlagDetailResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlagDetailResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["default_value"] = o.DefaultValue
	toSerialize["description"] = o.Description
	if o.FeatureId.IsSet() {
		toSerialize["feature_id"] = o.FeatureId.Get()
	}
	toSerialize["flag_type"] = o.FlagType
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	toSerialize["rules"] = o.Rules
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *FlagDetailResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"default_value",
		"description",
		"flag_type",
		"id",
		"key",
		"name",
		"rules",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFlagDetailResponseData := _FlagDetailResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFlagDetailResponseData)

	if err != nil {
		return err
	}

	*o = FlagDetailResponseData(varFlagDetailResponseData)

	return err
}

type NullableFlagDetailResponseData struct {
	value *FlagDetailResponseData
	isSet bool
}

func (v NullableFlagDetailResponseData) Get() *FlagDetailResponseData {
	return v.value
}

func (v *NullableFlagDetailResponseData) Set(val *FlagDetailResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableFlagDetailResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableFlagDetailResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlagDetailResponseData(val *FlagDetailResponseData) *NullableFlagDetailResponseData {
	return &NullableFlagDetailResponseData{value: val, isSet: true}
}

func (v NullableFlagDetailResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlagDetailResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
