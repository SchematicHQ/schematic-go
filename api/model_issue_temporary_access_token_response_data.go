/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the IssueTemporaryAccessTokenResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueTemporaryAccessTokenResponseData{}

// IssueTemporaryAccessTokenResponseData The created resource
type IssueTemporaryAccessTokenResponseData struct {
	ApiKeyId      string    `json:"api_key_id"`
	CreatedAt     time.Time `json:"created_at"`
	EnvironmentId string    `json:"environment_id"`
	ExpiredAt     time.Time `json:"expired_at"`
	Id            string    `json:"id"`
	ResourceType  string    `json:"resource_type"`
	Token         string    `json:"token"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type _IssueTemporaryAccessTokenResponseData IssueTemporaryAccessTokenResponseData

// NewIssueTemporaryAccessTokenResponseData instantiates a new IssueTemporaryAccessTokenResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueTemporaryAccessTokenResponseData(apiKeyId string, createdAt time.Time, environmentId string, expiredAt time.Time, id string, resourceType string, token string, updatedAt time.Time) *IssueTemporaryAccessTokenResponseData {
	this := IssueTemporaryAccessTokenResponseData{}
	this.ApiKeyId = apiKeyId
	this.CreatedAt = createdAt
	this.EnvironmentId = environmentId
	this.ExpiredAt = expiredAt
	this.Id = id
	this.ResourceType = resourceType
	this.Token = token
	this.UpdatedAt = updatedAt
	return &this
}

// NewIssueTemporaryAccessTokenResponseDataWithDefaults instantiates a new IssueTemporaryAccessTokenResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueTemporaryAccessTokenResponseDataWithDefaults() *IssueTemporaryAccessTokenResponseData {
	this := IssueTemporaryAccessTokenResponseData{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value
func (o *IssueTemporaryAccessTokenResponseData) GetApiKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetApiKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKeyId, true
}

// SetApiKeyId sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetApiKeyId(v string) {
	o.ApiKeyId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *IssueTemporaryAccessTokenResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *IssueTemporaryAccessTokenResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetExpiredAt returns the ExpiredAt field value
func (o *IssueTemporaryAccessTokenResponseData) GetExpiredAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiredAt, true
}

// SetExpiredAt sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetExpiredAt(v time.Time) {
	o.ExpiredAt = v
}

// GetId returns the Id field value
func (o *IssueTemporaryAccessTokenResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetId(v string) {
	o.Id = v
}

// GetResourceType returns the ResourceType field value
func (o *IssueTemporaryAccessTokenResponseData) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetResourceType(v string) {
	o.ResourceType = v
}

// GetToken returns the Token field value
func (o *IssueTemporaryAccessTokenResponseData) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetToken(v string) {
	o.Token = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *IssueTemporaryAccessTokenResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *IssueTemporaryAccessTokenResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *IssueTemporaryAccessTokenResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o IssueTemporaryAccessTokenResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueTemporaryAccessTokenResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key_id"] = o.ApiKeyId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["expired_at"] = o.ExpiredAt
	toSerialize["id"] = o.Id
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["token"] = o.Token
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *IssueTemporaryAccessTokenResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key_id",
		"created_at",
		"environment_id",
		"expired_at",
		"id",
		"resource_type",
		"token",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIssueTemporaryAccessTokenResponseData := _IssueTemporaryAccessTokenResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIssueTemporaryAccessTokenResponseData)

	if err != nil {
		return err
	}

	*o = IssueTemporaryAccessTokenResponseData(varIssueTemporaryAccessTokenResponseData)

	return err
}

type NullableIssueTemporaryAccessTokenResponseData struct {
	value *IssueTemporaryAccessTokenResponseData
	isSet bool
}

func (v NullableIssueTemporaryAccessTokenResponseData) Get() *IssueTemporaryAccessTokenResponseData {
	return v.value
}

func (v *NullableIssueTemporaryAccessTokenResponseData) Set(val *IssueTemporaryAccessTokenResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueTemporaryAccessTokenResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueTemporaryAccessTokenResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueTemporaryAccessTokenResponseData(val *IssueTemporaryAccessTokenResponseData) *NullableIssueTemporaryAccessTokenResponseData {
	return &NullableIssueTemporaryAccessTokenResponseData{value: val, isSet: true}
}

func (v NullableIssueTemporaryAccessTokenResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueTemporaryAccessTokenResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
