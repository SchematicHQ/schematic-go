/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ListInvoicesParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInvoicesParams{}

// ListInvoicesParams Input parameters
type ListInvoicesParams struct {
	CompanyId          *string `json:"company_id,omitempty"`
	CustomerExternalId *string `json:"customer_external_id,omitempty"`
	// Page limit (default 100)
	Limit *int32 `json:"limit,omitempty"`
	// Page offset (default 0)
	Offset                 *int32  `json:"offset,omitempty"`
	SubscriptionExternalId *string `json:"subscription_external_id,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _ListInvoicesParams ListInvoicesParams

// NewListInvoicesParams instantiates a new ListInvoicesParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInvoicesParams() *ListInvoicesParams {
	this := ListInvoicesParams{}
	return &this
}

// NewListInvoicesParamsWithDefaults instantiates a new ListInvoicesParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInvoicesParamsWithDefaults() *ListInvoicesParams {
	this := ListInvoicesParams{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ListInvoicesParams) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInvoicesParams) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ListInvoicesParams) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *ListInvoicesParams) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCustomerExternalId returns the CustomerExternalId field value if set, zero value otherwise.
func (o *ListInvoicesParams) GetCustomerExternalId() string {
	if o == nil || IsNil(o.CustomerExternalId) {
		var ret string
		return ret
	}
	return *o.CustomerExternalId
}

// GetCustomerExternalIdOk returns a tuple with the CustomerExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInvoicesParams) GetCustomerExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerExternalId) {
		return nil, false
	}
	return o.CustomerExternalId, true
}

// HasCustomerExternalId returns a boolean if a field has been set.
func (o *ListInvoicesParams) HasCustomerExternalId() bool {
	if o != nil && !IsNil(o.CustomerExternalId) {
		return true
	}

	return false
}

// SetCustomerExternalId gets a reference to the given string and assigns it to the CustomerExternalId field.
func (o *ListInvoicesParams) SetCustomerExternalId(v string) {
	o.CustomerExternalId = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListInvoicesParams) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInvoicesParams) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListInvoicesParams) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *ListInvoicesParams) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ListInvoicesParams) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInvoicesParams) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *ListInvoicesParams) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *ListInvoicesParams) SetOffset(v int32) {
	o.Offset = &v
}

// GetSubscriptionExternalId returns the SubscriptionExternalId field value if set, zero value otherwise.
func (o *ListInvoicesParams) GetSubscriptionExternalId() string {
	if o == nil || IsNil(o.SubscriptionExternalId) {
		var ret string
		return ret
	}
	return *o.SubscriptionExternalId
}

// GetSubscriptionExternalIdOk returns a tuple with the SubscriptionExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInvoicesParams) GetSubscriptionExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionExternalId) {
		return nil, false
	}
	return o.SubscriptionExternalId, true
}

// HasSubscriptionExternalId returns a boolean if a field has been set.
func (o *ListInvoicesParams) HasSubscriptionExternalId() bool {
	if o != nil && !IsNil(o.SubscriptionExternalId) {
		return true
	}

	return false
}

// SetSubscriptionExternalId gets a reference to the given string and assigns it to the SubscriptionExternalId field.
func (o *ListInvoicesParams) SetSubscriptionExternalId(v string) {
	o.SubscriptionExternalId = &v
}

func (o ListInvoicesParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInvoicesParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.CustomerExternalId) {
		toSerialize["customer_external_id"] = o.CustomerExternalId
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.SubscriptionExternalId) {
		toSerialize["subscription_external_id"] = o.SubscriptionExternalId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListInvoicesParams) UnmarshalJSON(data []byte) (err error) {
	varListInvoicesParams := _ListInvoicesParams{}

	err = json.Unmarshal(data, &varListInvoicesParams)

	if err != nil {
		return err
	}

	*o = ListInvoicesParams(varListInvoicesParams)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "customer_external_id")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "offset")
		delete(additionalProperties, "subscription_external_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListInvoicesParams struct {
	value *ListInvoicesParams
	isSet bool
}

func (v NullableListInvoicesParams) Get() *ListInvoicesParams {
	return v.value
}

func (v *NullableListInvoicesParams) Set(val *ListInvoicesParams) {
	v.value = val
	v.isSet = true
}

func (v NullableListInvoicesParams) IsSet() bool {
	return v.isSet
}

func (v *NullableListInvoicesParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInvoicesParams(val *ListInvoicesParams) *NullableListInvoicesParams {
	return &NullableListInvoicesParams{value: val, isSet: true}
}

func (v NullableListInvoicesParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInvoicesParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
