/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PreviewComponentDataParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewComponentDataParams{}

// PreviewComponentDataParams Input parameters
type PreviewComponentDataParams struct {
	CompanyId            *string `json:"company_id,omitempty"`
	ComponentId          *string `json:"component_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PreviewComponentDataParams PreviewComponentDataParams

// NewPreviewComponentDataParams instantiates a new PreviewComponentDataParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewComponentDataParams() *PreviewComponentDataParams {
	this := PreviewComponentDataParams{}
	return &this
}

// NewPreviewComponentDataParamsWithDefaults instantiates a new PreviewComponentDataParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewComponentDataParamsWithDefaults() *PreviewComponentDataParams {
	this := PreviewComponentDataParams{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *PreviewComponentDataParams) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewComponentDataParams) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *PreviewComponentDataParams) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *PreviewComponentDataParams) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetComponentId returns the ComponentId field value if set, zero value otherwise.
func (o *PreviewComponentDataParams) GetComponentId() string {
	if o == nil || IsNil(o.ComponentId) {
		var ret string
		return ret
	}
	return *o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewComponentDataParams) GetComponentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentId) {
		return nil, false
	}
	return o.ComponentId, true
}

// HasComponentId returns a boolean if a field has been set.
func (o *PreviewComponentDataParams) HasComponentId() bool {
	if o != nil && !IsNil(o.ComponentId) {
		return true
	}

	return false
}

// SetComponentId gets a reference to the given string and assigns it to the ComponentId field.
func (o *PreviewComponentDataParams) SetComponentId(v string) {
	o.ComponentId = &v
}

func (o PreviewComponentDataParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewComponentDataParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.ComponentId) {
		toSerialize["component_id"] = o.ComponentId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PreviewComponentDataParams) UnmarshalJSON(data []byte) (err error) {
	varPreviewComponentDataParams := _PreviewComponentDataParams{}

	err = json.Unmarshal(data, &varPreviewComponentDataParams)

	if err != nil {
		return err
	}

	*o = PreviewComponentDataParams(varPreviewComponentDataParams)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "component_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePreviewComponentDataParams struct {
	value *PreviewComponentDataParams
	isSet bool
}

func (v NullablePreviewComponentDataParams) Get() *PreviewComponentDataParams {
	return v.value
}

func (v *NullablePreviewComponentDataParams) Set(val *PreviewComponentDataParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewComponentDataParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewComponentDataParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewComponentDataParams(val *PreviewComponentDataParams) *NullablePreviewComponentDataParams {
	return &NullablePreviewComponentDataParams{value: val, isSet: true}
}

func (v NullablePreviewComponentDataParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewComponentDataParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
