/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SegmentStatusResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentStatusResp{}

// SegmentStatusResp The returned resource
type SegmentStatusResp struct {
	Connected            bool         `json:"connected"`
	EnvironmentId        string       `json:"environment_id"`
	LastEventAt          NullableTime `json:"last_event_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SegmentStatusResp SegmentStatusResp

// NewSegmentStatusResp instantiates a new SegmentStatusResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentStatusResp(connected bool, environmentId string) *SegmentStatusResp {
	this := SegmentStatusResp{}
	this.Connected = connected
	this.EnvironmentId = environmentId
	return &this
}

// NewSegmentStatusRespWithDefaults instantiates a new SegmentStatusResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentStatusRespWithDefaults() *SegmentStatusResp {
	this := SegmentStatusResp{}
	return &this
}

// GetConnected returns the Connected field value
func (o *SegmentStatusResp) GetConnected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value
// and a boolean to check if the value has been set.
func (o *SegmentStatusResp) GetConnectedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connected, true
}

// SetConnected sets field value
func (o *SegmentStatusResp) SetConnected(v bool) {
	o.Connected = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *SegmentStatusResp) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *SegmentStatusResp) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *SegmentStatusResp) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetLastEventAt returns the LastEventAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SegmentStatusResp) GetLastEventAt() time.Time {
	if o == nil || IsNil(o.LastEventAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastEventAt.Get()
}

// GetLastEventAtOk returns a tuple with the LastEventAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SegmentStatusResp) GetLastEventAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastEventAt.Get(), o.LastEventAt.IsSet()
}

// HasLastEventAt returns a boolean if a field has been set.
func (o *SegmentStatusResp) HasLastEventAt() bool {
	if o != nil && o.LastEventAt.IsSet() {
		return true
	}

	return false
}

// SetLastEventAt gets a reference to the given NullableTime and assigns it to the LastEventAt field.
func (o *SegmentStatusResp) SetLastEventAt(v time.Time) {
	o.LastEventAt.Set(&v)
}

// SetLastEventAtNil sets the value for LastEventAt to be an explicit nil
func (o *SegmentStatusResp) SetLastEventAtNil() {
	o.LastEventAt.Set(nil)
}

// UnsetLastEventAt ensures that no value is present for LastEventAt, not even an explicit nil
func (o *SegmentStatusResp) UnsetLastEventAt() {
	o.LastEventAt.Unset()
}

func (o SegmentStatusResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentStatusResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connected"] = o.Connected
	toSerialize["environment_id"] = o.EnvironmentId
	if o.LastEventAt.IsSet() {
		toSerialize["last_event_at"] = o.LastEventAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SegmentStatusResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connected",
		"environment_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSegmentStatusResp := _SegmentStatusResp{}

	err = json.Unmarshal(data, &varSegmentStatusResp)

	if err != nil {
		return err
	}

	*o = SegmentStatusResp(varSegmentStatusResp)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "connected")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "last_event_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSegmentStatusResp struct {
	value *SegmentStatusResp
	isSet bool
}

func (v NullableSegmentStatusResp) Get() *SegmentStatusResp {
	return v.value
}

func (v *NullableSegmentStatusResp) Set(val *SegmentStatusResp) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentStatusResp) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentStatusResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentStatusResp(val *SegmentStatusResp) *NullableSegmentStatusResp {
	return &NullableSegmentStatusResp{value: val, isSet: true}
}

func (v NullableSegmentStatusResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentStatusResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
