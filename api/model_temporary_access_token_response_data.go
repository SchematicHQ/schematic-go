/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the TemporaryAccessTokenResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemporaryAccessTokenResponseData{}

// TemporaryAccessTokenResponseData struct for TemporaryAccessTokenResponseData
type TemporaryAccessTokenResponseData struct {
	ApiKeyId             string    `json:"api_key_id"`
	CreatedAt            time.Time `json:"created_at"`
	EnvironmentId        string    `json:"environment_id"`
	ExpiredAt            time.Time `json:"expired_at"`
	Id                   string    `json:"id"`
	ResourceType         string    `json:"resource_type"`
	UpdatedAt            time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _TemporaryAccessTokenResponseData TemporaryAccessTokenResponseData

// NewTemporaryAccessTokenResponseData instantiates a new TemporaryAccessTokenResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemporaryAccessTokenResponseData(apiKeyId string, createdAt time.Time, environmentId string, expiredAt time.Time, id string, resourceType string, updatedAt time.Time) *TemporaryAccessTokenResponseData {
	this := TemporaryAccessTokenResponseData{}
	this.ApiKeyId = apiKeyId
	this.CreatedAt = createdAt
	this.EnvironmentId = environmentId
	this.ExpiredAt = expiredAt
	this.Id = id
	this.ResourceType = resourceType
	this.UpdatedAt = updatedAt
	return &this
}

// NewTemporaryAccessTokenResponseDataWithDefaults instantiates a new TemporaryAccessTokenResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemporaryAccessTokenResponseDataWithDefaults() *TemporaryAccessTokenResponseData {
	this := TemporaryAccessTokenResponseData{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value
func (o *TemporaryAccessTokenResponseData) GetApiKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetApiKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKeyId, true
}

// SetApiKeyId sets field value
func (o *TemporaryAccessTokenResponseData) SetApiKeyId(v string) {
	o.ApiKeyId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TemporaryAccessTokenResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TemporaryAccessTokenResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *TemporaryAccessTokenResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *TemporaryAccessTokenResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetExpiredAt returns the ExpiredAt field value
func (o *TemporaryAccessTokenResponseData) GetExpiredAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiredAt, true
}

// SetExpiredAt sets field value
func (o *TemporaryAccessTokenResponseData) SetExpiredAt(v time.Time) {
	o.ExpiredAt = v
}

// GetId returns the Id field value
func (o *TemporaryAccessTokenResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TemporaryAccessTokenResponseData) SetId(v string) {
	o.Id = v
}

// GetResourceType returns the ResourceType field value
func (o *TemporaryAccessTokenResponseData) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *TemporaryAccessTokenResponseData) SetResourceType(v string) {
	o.ResourceType = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TemporaryAccessTokenResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TemporaryAccessTokenResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TemporaryAccessTokenResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o TemporaryAccessTokenResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemporaryAccessTokenResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key_id"] = o.ApiKeyId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["expired_at"] = o.ExpiredAt
	toSerialize["id"] = o.Id
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TemporaryAccessTokenResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key_id",
		"created_at",
		"environment_id",
		"expired_at",
		"id",
		"resource_type",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTemporaryAccessTokenResponseData := _TemporaryAccessTokenResponseData{}

	err = json.Unmarshal(data, &varTemporaryAccessTokenResponseData)

	if err != nil {
		return err
	}

	*o = TemporaryAccessTokenResponseData(varTemporaryAccessTokenResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "api_key_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "environment_id")
		delete(additionalProperties, "expired_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "resource_type")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTemporaryAccessTokenResponseData struct {
	value *TemporaryAccessTokenResponseData
	isSet bool
}

func (v NullableTemporaryAccessTokenResponseData) Get() *TemporaryAccessTokenResponseData {
	return v.value
}

func (v *NullableTemporaryAccessTokenResponseData) Set(val *TemporaryAccessTokenResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableTemporaryAccessTokenResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableTemporaryAccessTokenResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemporaryAccessTokenResponseData(val *TemporaryAccessTokenResponseData) *NullableTemporaryAccessTokenResponseData {
	return &NullableTemporaryAccessTokenResponseData{value: val, isSet: true}
}

func (v NullableTemporaryAccessTokenResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemporaryAccessTokenResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
