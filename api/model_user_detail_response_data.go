/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the UserDetailResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDetailResponseData{}

// UserDetailResponseData struct for UserDetailResponseData
type UserDetailResponseData struct {
	CompanyMemberships []CompanyMembershipDetailResponseData `json:"company_memberships"`
	CreatedAt          time.Time                             `json:"created_at"`
	EntityTraits       []EntityTraitDetailResponseData       `json:"entity_traits"`
	EnvironmentId      string                                `json:"environment_id"`
	Id                 string                                `json:"id"`
	Keys               []EntityKeyDetailResponseData         `json:"keys"`
	LastSeenAt         NullableTime                          `json:"last_seen_at,omitempty"`
	Name               string                                `json:"name"`
	// A map of trait names to trait values
	Traits    map[string]interface{} `json:"traits,omitempty"`
	UpdatedAt time.Time              `json:"updated_at"`
}

type _UserDetailResponseData UserDetailResponseData

// NewUserDetailResponseData instantiates a new UserDetailResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDetailResponseData(companyMemberships []CompanyMembershipDetailResponseData, createdAt time.Time, entityTraits []EntityTraitDetailResponseData, environmentId string, id string, keys []EntityKeyDetailResponseData, name string, updatedAt time.Time) *UserDetailResponseData {
	this := UserDetailResponseData{}
	this.CompanyMemberships = companyMemberships
	this.CreatedAt = createdAt
	this.EntityTraits = entityTraits
	this.EnvironmentId = environmentId
	this.Id = id
	this.Keys = keys
	this.Name = name
	this.UpdatedAt = updatedAt
	return &this
}

// NewUserDetailResponseDataWithDefaults instantiates a new UserDetailResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDetailResponseDataWithDefaults() *UserDetailResponseData {
	this := UserDetailResponseData{}
	return &this
}

// GetCompanyMemberships returns the CompanyMemberships field value
func (o *UserDetailResponseData) GetCompanyMemberships() []CompanyMembershipDetailResponseData {
	if o == nil {
		var ret []CompanyMembershipDetailResponseData
		return ret
	}

	return o.CompanyMemberships
}

// GetCompanyMembershipsOk returns a tuple with the CompanyMemberships field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetCompanyMembershipsOk() ([]CompanyMembershipDetailResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyMemberships, true
}

// SetCompanyMemberships sets field value
func (o *UserDetailResponseData) SetCompanyMemberships(v []CompanyMembershipDetailResponseData) {
	o.CompanyMemberships = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserDetailResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserDetailResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEntityTraits returns the EntityTraits field value
func (o *UserDetailResponseData) GetEntityTraits() []EntityTraitDetailResponseData {
	if o == nil {
		var ret []EntityTraitDetailResponseData
		return ret
	}

	return o.EntityTraits
}

// GetEntityTraitsOk returns a tuple with the EntityTraits field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetEntityTraitsOk() ([]EntityTraitDetailResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntityTraits, true
}

// SetEntityTraits sets field value
func (o *UserDetailResponseData) SetEntityTraits(v []EntityTraitDetailResponseData) {
	o.EntityTraits = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *UserDetailResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *UserDetailResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetId returns the Id field value
func (o *UserDetailResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserDetailResponseData) SetId(v string) {
	o.Id = v
}

// GetKeys returns the Keys field value
func (o *UserDetailResponseData) GetKeys() []EntityKeyDetailResponseData {
	if o == nil {
		var ret []EntityKeyDetailResponseData
		return ret
	}

	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetKeysOk() ([]EntityKeyDetailResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keys, true
}

// SetKeys sets field value
func (o *UserDetailResponseData) SetKeys(v []EntityKeyDetailResponseData) {
	o.Keys = v
}

// GetLastSeenAt returns the LastSeenAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserDetailResponseData) GetLastSeenAt() time.Time {
	if o == nil || IsNil(o.LastSeenAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastSeenAt.Get()
}

// GetLastSeenAtOk returns a tuple with the LastSeenAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserDetailResponseData) GetLastSeenAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastSeenAt.Get(), o.LastSeenAt.IsSet()
}

// HasLastSeenAt returns a boolean if a field has been set.
func (o *UserDetailResponseData) HasLastSeenAt() bool {
	if o != nil && o.LastSeenAt.IsSet() {
		return true
	}

	return false
}

// SetLastSeenAt gets a reference to the given NullableTime and assigns it to the LastSeenAt field.
func (o *UserDetailResponseData) SetLastSeenAt(v time.Time) {
	o.LastSeenAt.Set(&v)
}

// SetLastSeenAtNil sets the value for LastSeenAt to be an explicit nil
func (o *UserDetailResponseData) SetLastSeenAtNil() {
	o.LastSeenAt.Set(nil)
}

// UnsetLastSeenAt ensures that no value is present for LastSeenAt, not even an explicit nil
func (o *UserDetailResponseData) UnsetLastSeenAt() {
	o.LastSeenAt.Unset()
}

// GetName returns the Name field value
func (o *UserDetailResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserDetailResponseData) SetName(v string) {
	o.Name = v
}

// GetTraits returns the Traits field value if set, zero value otherwise.
func (o *UserDetailResponseData) GetTraits() map[string]interface{} {
	if o == nil || IsNil(o.Traits) {
		var ret map[string]interface{}
		return ret
	}
	return o.Traits
}

// GetTraitsOk returns a tuple with the Traits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetTraitsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Traits) {
		return map[string]interface{}{}, false
	}
	return o.Traits, true
}

// HasTraits returns a boolean if a field has been set.
func (o *UserDetailResponseData) HasTraits() bool {
	if o != nil && !IsNil(o.Traits) {
		return true
	}

	return false
}

// SetTraits gets a reference to the given map[string]interface{} and assigns it to the Traits field.
func (o *UserDetailResponseData) SetTraits(v map[string]interface{}) {
	o.Traits = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UserDetailResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UserDetailResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UserDetailResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o UserDetailResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDetailResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["company_memberships"] = o.CompanyMemberships
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["entity_traits"] = o.EntityTraits
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["id"] = o.Id
	toSerialize["keys"] = o.Keys
	if o.LastSeenAt.IsSet() {
		toSerialize["last_seen_at"] = o.LastSeenAt.Get()
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Traits) {
		toSerialize["traits"] = o.Traits
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *UserDetailResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"company_memberships",
		"created_at",
		"entity_traits",
		"environment_id",
		"id",
		"keys",
		"name",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserDetailResponseData := _UserDetailResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserDetailResponseData)

	if err != nil {
		return err
	}

	*o = UserDetailResponseData(varUserDetailResponseData)

	return err
}

type NullableUserDetailResponseData struct {
	value *UserDetailResponseData
	isSet bool
}

func (v NullableUserDetailResponseData) Get() *UserDetailResponseData {
	return v.value
}

func (v *NullableUserDetailResponseData) Set(val *UserDetailResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDetailResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDetailResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDetailResponseData(val *UserDetailResponseData) *NullableUserDetailResponseData {
	return &NullableUserDetailResponseData{value: val, isSet: true}
}

func (v NullableUserDetailResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDetailResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
