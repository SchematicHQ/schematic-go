// This file was auto-generated by Fern from our API Definition.

package schematichq

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/schematichq/schematic-go/core"
)

type CountComponentsRequest struct {
	Q *string `json:"-" url:"q,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type CreateComponentRequestBody struct {
	Ast        *core.Optional[map[string]float64]   `json:"ast,omitempty" url:"-"`
	EntityType CreateComponentRequestBodyEntityType `json:"entity_type" url:"-"`
	Name       string                               `json:"name" url:"-"`
}

type ListComponentsRequest struct {
	Q *string `json:"-" url:"q,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type PreviewComponentDataRequest struct {
	CompanyID   *string `json:"-" url:"company_id,omitempty"`
	ComponentID *string `json:"-" url:"component_id,omitempty"`
}

type CountComponentsResponse struct {
	Data *CountResponse `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *CountComponentsParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CountComponentsResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CountComponentsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CountComponentsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CountComponentsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CountComponentsResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CreateComponentRequestBodyEntityType string

const (
	CreateComponentRequestBodyEntityTypeEntitlement CreateComponentRequestBodyEntityType = "entitlement"
	CreateComponentRequestBodyEntityTypeBilling     CreateComponentRequestBodyEntityType = "billing"
)

func NewCreateComponentRequestBodyEntityTypeFromString(s string) (CreateComponentRequestBodyEntityType, error) {
	switch s {
	case "entitlement":
		return CreateComponentRequestBodyEntityTypeEntitlement, nil
	case "billing":
		return CreateComponentRequestBodyEntityTypeBilling, nil
	}
	var t CreateComponentRequestBodyEntityType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CreateComponentRequestBodyEntityType) Ptr() *CreateComponentRequestBodyEntityType {
	return &c
}

type CreateComponentResponse struct {
	Data *ComponentResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CreateComponentResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateComponentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateComponentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateComponentResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateComponentResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DeleteComponentResponse struct {
	Data *DeleteResponse `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (d *DeleteComponentResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteComponentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteComponentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteComponentResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties

	d._rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteComponentResponse) String() string {
	if len(d._rawJSON) > 0 {
		if value, err := core.StringifyJSON(d._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GetComponentResponse struct {
	Data *ComponentResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetComponentResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetComponentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetComponentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetComponentResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetComponentResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type ListComponentsResponse struct {
	// The returned resources
	Data []*ComponentResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *ListComponentsParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListComponentsResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListComponentsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListComponentsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListComponentsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListComponentsResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type PreviewComponentDataResponse struct {
	Data *ComponentHydrateResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *PreviewComponentDataParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (p *PreviewComponentDataResponse) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PreviewComponentDataResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler PreviewComponentDataResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PreviewComponentDataResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties

	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PreviewComponentDataResponse) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type UpdateComponentRequestBodyEntityType string

const (
	UpdateComponentRequestBodyEntityTypeEntitlement UpdateComponentRequestBodyEntityType = "entitlement"
	UpdateComponentRequestBodyEntityTypeBilling     UpdateComponentRequestBodyEntityType = "billing"
)

func NewUpdateComponentRequestBodyEntityTypeFromString(s string) (UpdateComponentRequestBodyEntityType, error) {
	switch s {
	case "entitlement":
		return UpdateComponentRequestBodyEntityTypeEntitlement, nil
	case "billing":
		return UpdateComponentRequestBodyEntityTypeBilling, nil
	}
	var t UpdateComponentRequestBodyEntityType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (u UpdateComponentRequestBodyEntityType) Ptr() *UpdateComponentRequestBodyEntityType {
	return &u
}

type UpdateComponentRequestBodyState string

const (
	UpdateComponentRequestBodyStateDraft UpdateComponentRequestBodyState = "draft"
	UpdateComponentRequestBodyStateLive  UpdateComponentRequestBodyState = "live"
)

func NewUpdateComponentRequestBodyStateFromString(s string) (UpdateComponentRequestBodyState, error) {
	switch s {
	case "draft":
		return UpdateComponentRequestBodyStateDraft, nil
	case "live":
		return UpdateComponentRequestBodyStateLive, nil
	}
	var t UpdateComponentRequestBodyState
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (u UpdateComponentRequestBodyState) Ptr() *UpdateComponentRequestBodyState {
	return &u
}

type UpdateComponentResponse struct {
	Data *ComponentResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UpdateComponentResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpdateComponentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpdateComponentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpdateComponentResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpdateComponentResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UpdateComponentRequestBody struct {
	Ast        *core.Optional[map[string]float64]                   `json:"ast,omitempty" url:"-"`
	EntityType *core.Optional[UpdateComponentRequestBodyEntityType] `json:"entity_type,omitempty" url:"-"`
	Name       *core.Optional[string]                               `json:"name,omitempty" url:"-"`
	State      *core.Optional[UpdateComponentRequestBodyState]      `json:"state,omitempty" url:"-"`
}
