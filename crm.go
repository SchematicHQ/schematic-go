// This file was auto-generated by Fern from our API Definition.

package schematichq

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/schematichq/schematic-go/core"
)

type ListCrmProductsRequest struct {
	IDs  []*string `json:"-" url:"ids,omitempty"`
	Name *string   `json:"-" url:"name,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type ListCrmProductsResponse struct {
	// The returned resources
	Data []*CrmProductResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *ListCrmProductsParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListCrmProductsResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCrmProductsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCrmProductsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCrmProductsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCrmProductsResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type UpsertCrmDealResponse struct {
	Data *CrmDealResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UpsertCrmDealResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpsertCrmDealResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpsertCrmDealResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpsertCrmDealResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpsertCrmDealResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UpsertCrmProductResponse struct {
	Data *CrmProductResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UpsertCrmProductResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpsertCrmProductResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpsertCrmProductResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpsertCrmProductResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpsertCrmProductResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UpsertDealLineItemAssociationResponse struct {
	Data *CrmLineItemResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UpsertDealLineItemAssociationResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpsertDealLineItemAssociationResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpsertDealLineItemAssociationResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpsertDealLineItemAssociationResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpsertDealLineItemAssociationResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UpsertLineItemResponse struct {
	Data *CrmLineItemResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UpsertLineItemResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpsertLineItemResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpsertLineItemResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpsertLineItemResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpsertLineItemResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type CreateCrmDealRequestBody struct {
	Arr            *string `json:"arr,omitempty" url:"-"`
	CrmCompanyID   *string `json:"crm_company_id,omitempty" url:"-"`
	CrmCompanyKey  string  `json:"crm_company_key" url:"-"`
	CrmProductID   *string `json:"crm_product_id,omitempty" url:"-"`
	CrmType        string  `json:"crm_type" url:"-"`
	DealExternalID string  `json:"deal_external_id" url:"-"`
	DealName       *string `json:"deal_name,omitempty" url:"-"`
	DealStage      *string `json:"deal_stage,omitempty" url:"-"`
	Mrr            *string `json:"mrr,omitempty" url:"-"`
}

type CreateCrmProductRequestBody struct {
	Currency    string `json:"currency" url:"-"`
	Description string `json:"description" url:"-"`
	ExternalID  string `json:"external_id" url:"-"`
	Interval    string `json:"interval" url:"-"`
	Name        string `json:"name" url:"-"`
	Price       string `json:"price" url:"-"`
	Quantity    int    `json:"quantity" url:"-"`
	Sku         string `json:"sku" url:"-"`
}

type CreateCrmDealLineItemAssociationRequestBody struct {
	DealExternalID     string `json:"deal_external_id" url:"-"`
	LineItemExternalID string `json:"line_item_external_id" url:"-"`
}

type CreateCrmLineItemRequestBody struct {
	TermMonth          *int    `json:"TermMonth,omitempty" url:"-"`
	Amount             string  `json:"amount" url:"-"`
	DiscountPercentage *string `json:"discount_percentage,omitempty" url:"-"`
	Interval           string  `json:"interval" url:"-"`
	LineItemExternalID string  `json:"line_item_external_id" url:"-"`
	ProductExternalID  string  `json:"product_external_id" url:"-"`
	Quantity           int     `json:"quantity" url:"-"`
	TotalDiscount      *string `json:"total_discount,omitempty" url:"-"`
}
