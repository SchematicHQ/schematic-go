/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
	"time"
)

// checks if the CompanyDetailResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyDetailResponseData{}

// CompanyDetailResponseData struct for CompanyDetailResponseData
type CompanyDetailResponseData struct {
	CreatedAt time.Time `json:"created_at"`
	EnvironmentId string `json:"environment_id"`
	Id string `json:"id"`
	Keys []EntityKeyResponseData `json:"keys"`
	LastSeenAt NullableTime `json:"last_seen_at,omitempty"`
	Name string `json:"name"`
	// A map of trait names to trait values
	Traits map[string]interface{} `json:"traits,omitempty"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewCompanyDetailResponseData instantiates a new CompanyDetailResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyDetailResponseData(createdAt time.Time, environmentId string, id string, keys []EntityKeyResponseData, name string, updatedAt time.Time) *CompanyDetailResponseData {
	this := CompanyDetailResponseData{}
	this.CreatedAt = createdAt
	this.EnvironmentId = environmentId
	this.Id = id
	this.Keys = keys
	this.Name = name
	this.UpdatedAt = updatedAt
	return &this
}

// NewCompanyDetailResponseDataWithDefaults instantiates a new CompanyDetailResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyDetailResponseDataWithDefaults() *CompanyDetailResponseData {
	this := CompanyDetailResponseData{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *CompanyDetailResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CompanyDetailResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *CompanyDetailResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *CompanyDetailResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetId returns the Id field value
func (o *CompanyDetailResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CompanyDetailResponseData) SetId(v string) {
	o.Id = v
}

// GetKeys returns the Keys field value
func (o *CompanyDetailResponseData) GetKeys() []EntityKeyResponseData {
	if o == nil {
		var ret []EntityKeyResponseData
		return ret
	}

	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetKeysOk() ([]EntityKeyResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keys, true
}

// SetKeys sets field value
func (o *CompanyDetailResponseData) SetKeys(v []EntityKeyResponseData) {
	o.Keys = v
}

// GetLastSeenAt returns the LastSeenAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyDetailResponseData) GetLastSeenAt() time.Time {
	if o == nil || IsNil(o.LastSeenAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastSeenAt.Get()
}

// GetLastSeenAtOk returns a tuple with the LastSeenAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyDetailResponseData) GetLastSeenAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastSeenAt.Get(), o.LastSeenAt.IsSet()
}

// HasLastSeenAt returns a boolean if a field has been set.
func (o *CompanyDetailResponseData) HasLastSeenAt() bool {
	if o != nil && o.LastSeenAt.IsSet() {
		return true
	}

	return false
}

// SetLastSeenAt gets a reference to the given NullableTime and assigns it to the LastSeenAt field.
func (o *CompanyDetailResponseData) SetLastSeenAt(v time.Time) {
	o.LastSeenAt.Set(&v)
}
// SetLastSeenAtNil sets the value for LastSeenAt to be an explicit nil
func (o *CompanyDetailResponseData) SetLastSeenAtNil() {
	o.LastSeenAt.Set(nil)
}

// UnsetLastSeenAt ensures that no value is present for LastSeenAt, not even an explicit nil
func (o *CompanyDetailResponseData) UnsetLastSeenAt() {
	o.LastSeenAt.Unset()
}

// GetName returns the Name field value
func (o *CompanyDetailResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CompanyDetailResponseData) SetName(v string) {
	o.Name = v
}

// GetTraits returns the Traits field value if set, zero value otherwise.
func (o *CompanyDetailResponseData) GetTraits() map[string]interface{} {
	if o == nil || IsNil(o.Traits) {
		var ret map[string]interface{}
		return ret
	}
	return o.Traits
}

// GetTraitsOk returns a tuple with the Traits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetTraitsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Traits) {
		return map[string]interface{}{}, false
	}
	return o.Traits, true
}

// HasTraits returns a boolean if a field has been set.
func (o *CompanyDetailResponseData) HasTraits() bool {
	if o != nil && !IsNil(o.Traits) {
		return true
	}

	return false
}

// SetTraits gets a reference to the given map[string]interface{} and assigns it to the Traits field.
func (o *CompanyDetailResponseData) SetTraits(v map[string]interface{}) {
	o.Traits = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CompanyDetailResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyDetailResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CompanyDetailResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CompanyDetailResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyDetailResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["id"] = o.Id
	toSerialize["keys"] = o.Keys
	if o.LastSeenAt.IsSet() {
		toSerialize["last_seen_at"] = o.LastSeenAt.Get()
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Traits) {
		toSerialize["traits"] = o.Traits
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableCompanyDetailResponseData struct {
	value *CompanyDetailResponseData
	isSet bool
}

func (v NullableCompanyDetailResponseData) Get() *CompanyDetailResponseData {
	return v.value
}

func (v *NullableCompanyDetailResponseData) Set(val *CompanyDetailResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyDetailResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyDetailResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyDetailResponseData(val *CompanyDetailResponseData) *NullableCompanyDetailResponseData {
	return &NullableCompanyDetailResponseData{value: val, isSet: true}
}

func (v NullableCompanyDetailResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyDetailResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


