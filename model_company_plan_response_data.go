/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
	"time"
)

// checks if the CompanyPlanResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyPlanResponseData{}

// CompanyPlanResponseData struct for CompanyPlanResponseData
type CompanyPlanResponseData struct {
	CompanyId string `json:"company_id"`
	CreatedAt time.Time `json:"created_at"`
	EndedAt NullableTime `json:"ended_at,omitempty"`
	EnvironmentId string `json:"environment_id"`
	Id string `json:"id"`
	PlanId string `json:"plan_id"`
	StartedAt time.Time `json:"started_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewCompanyPlanResponseData instantiates a new CompanyPlanResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyPlanResponseData(companyId string, createdAt time.Time, environmentId string, id string, planId string, startedAt time.Time, updatedAt time.Time) *CompanyPlanResponseData {
	this := CompanyPlanResponseData{}
	this.CompanyId = companyId
	this.CreatedAt = createdAt
	this.EnvironmentId = environmentId
	this.Id = id
	this.PlanId = planId
	this.StartedAt = startedAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewCompanyPlanResponseDataWithDefaults instantiates a new CompanyPlanResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyPlanResponseDataWithDefaults() *CompanyPlanResponseData {
	this := CompanyPlanResponseData{}
	return &this
}

// GetCompanyId returns the CompanyId field value
func (o *CompanyPlanResponseData) GetCompanyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetCompanyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyId, true
}

// SetCompanyId sets field value
func (o *CompanyPlanResponseData) SetCompanyId(v string) {
	o.CompanyId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CompanyPlanResponseData) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CompanyPlanResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompanyPlanResponseData) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt.Get()
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompanyPlanResponseData) GetEndedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndedAt.Get(), o.EndedAt.IsSet()
}

// HasEndedAt returns a boolean if a field has been set.
func (o *CompanyPlanResponseData) HasEndedAt() bool {
	if o != nil && o.EndedAt.IsSet() {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given NullableTime and assigns it to the EndedAt field.
func (o *CompanyPlanResponseData) SetEndedAt(v time.Time) {
	o.EndedAt.Set(&v)
}
// SetEndedAtNil sets the value for EndedAt to be an explicit nil
func (o *CompanyPlanResponseData) SetEndedAtNil() {
	o.EndedAt.Set(nil)
}

// UnsetEndedAt ensures that no value is present for EndedAt, not even an explicit nil
func (o *CompanyPlanResponseData) UnsetEndedAt() {
	o.EndedAt.Unset()
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *CompanyPlanResponseData) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *CompanyPlanResponseData) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetId returns the Id field value
func (o *CompanyPlanResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CompanyPlanResponseData) SetId(v string) {
	o.Id = v
}

// GetPlanId returns the PlanId field value
func (o *CompanyPlanResponseData) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *CompanyPlanResponseData) SetPlanId(v string) {
	o.PlanId = v
}

// GetStartedAt returns the StartedAt field value
func (o *CompanyPlanResponseData) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *CompanyPlanResponseData) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CompanyPlanResponseData) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyPlanResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CompanyPlanResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CompanyPlanResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyPlanResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["company_id"] = o.CompanyId
	toSerialize["created_at"] = o.CreatedAt
	if o.EndedAt.IsSet() {
		toSerialize["ended_at"] = o.EndedAt.Get()
	}
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["id"] = o.Id
	toSerialize["plan_id"] = o.PlanId
	toSerialize["started_at"] = o.StartedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableCompanyPlanResponseData struct {
	value *CompanyPlanResponseData
	isSet bool
}

func (v NullableCompanyPlanResponseData) Get() *CompanyPlanResponseData {
	return v.value
}

func (v *NullableCompanyPlanResponseData) Set(val *CompanyPlanResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyPlanResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyPlanResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyPlanResponseData(val *CompanyPlanResponseData) *NullableCompanyPlanResponseData {
	return &NullableCompanyPlanResponseData{value: val, isSet: true}
}

func (v NullableCompanyPlanResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyPlanResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


