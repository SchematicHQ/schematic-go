/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the CreateFeatureRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFeatureRequestBody{}

// CreateFeatureRequestBody struct for CreateFeatureRequestBody
type CreateFeatureRequestBody struct {
	Description string `json:"description"`
	EventSubtype NullableString `json:"event_subtype,omitempty"`
	FeatureType string `json:"feature_type"`
	Flag *CreateOrUpdateFlagRequestBody `json:"flag,omitempty"`
	LifecyclePhase NullableString `json:"lifecycle_phase,omitempty"`
	Name string `json:"name"`
	SkipWebhooks NullableBool `json:"skip_webhooks,omitempty"`
	TraitId NullableString `json:"trait_id,omitempty"`
}

// NewCreateFeatureRequestBody instantiates a new CreateFeatureRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFeatureRequestBody(description string, featureType string, name string) *CreateFeatureRequestBody {
	this := CreateFeatureRequestBody{}
	this.Description = description
	this.FeatureType = featureType
	this.Name = name
	return &this
}

// NewCreateFeatureRequestBodyWithDefaults instantiates a new CreateFeatureRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFeatureRequestBodyWithDefaults() *CreateFeatureRequestBody {
	this := CreateFeatureRequestBody{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateFeatureRequestBody) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateFeatureRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateFeatureRequestBody) SetDescription(v string) {
	o.Description = v
}

// GetEventSubtype returns the EventSubtype field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFeatureRequestBody) GetEventSubtype() string {
	if o == nil || IsNil(o.EventSubtype.Get()) {
		var ret string
		return ret
	}
	return *o.EventSubtype.Get()
}

// GetEventSubtypeOk returns a tuple with the EventSubtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFeatureRequestBody) GetEventSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventSubtype.Get(), o.EventSubtype.IsSet()
}

// HasEventSubtype returns a boolean if a field has been set.
func (o *CreateFeatureRequestBody) HasEventSubtype() bool {
	if o != nil && o.EventSubtype.IsSet() {
		return true
	}

	return false
}

// SetEventSubtype gets a reference to the given NullableString and assigns it to the EventSubtype field.
func (o *CreateFeatureRequestBody) SetEventSubtype(v string) {
	o.EventSubtype.Set(&v)
}
// SetEventSubtypeNil sets the value for EventSubtype to be an explicit nil
func (o *CreateFeatureRequestBody) SetEventSubtypeNil() {
	o.EventSubtype.Set(nil)
}

// UnsetEventSubtype ensures that no value is present for EventSubtype, not even an explicit nil
func (o *CreateFeatureRequestBody) UnsetEventSubtype() {
	o.EventSubtype.Unset()
}

// GetFeatureType returns the FeatureType field value
func (o *CreateFeatureRequestBody) GetFeatureType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value
// and a boolean to check if the value has been set.
func (o *CreateFeatureRequestBody) GetFeatureTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureType, true
}

// SetFeatureType sets field value
func (o *CreateFeatureRequestBody) SetFeatureType(v string) {
	o.FeatureType = v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *CreateFeatureRequestBody) GetFlag() CreateOrUpdateFlagRequestBody {
	if o == nil || IsNil(o.Flag) {
		var ret CreateOrUpdateFlagRequestBody
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFeatureRequestBody) GetFlagOk() (*CreateOrUpdateFlagRequestBody, bool) {
	if o == nil || IsNil(o.Flag) {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *CreateFeatureRequestBody) HasFlag() bool {
	if o != nil && !IsNil(o.Flag) {
		return true
	}

	return false
}

// SetFlag gets a reference to the given CreateOrUpdateFlagRequestBody and assigns it to the Flag field.
func (o *CreateFeatureRequestBody) SetFlag(v CreateOrUpdateFlagRequestBody) {
	o.Flag = &v
}

// GetLifecyclePhase returns the LifecyclePhase field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFeatureRequestBody) GetLifecyclePhase() string {
	if o == nil || IsNil(o.LifecyclePhase.Get()) {
		var ret string
		return ret
	}
	return *o.LifecyclePhase.Get()
}

// GetLifecyclePhaseOk returns a tuple with the LifecyclePhase field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFeatureRequestBody) GetLifecyclePhaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LifecyclePhase.Get(), o.LifecyclePhase.IsSet()
}

// HasLifecyclePhase returns a boolean if a field has been set.
func (o *CreateFeatureRequestBody) HasLifecyclePhase() bool {
	if o != nil && o.LifecyclePhase.IsSet() {
		return true
	}

	return false
}

// SetLifecyclePhase gets a reference to the given NullableString and assigns it to the LifecyclePhase field.
func (o *CreateFeatureRequestBody) SetLifecyclePhase(v string) {
	o.LifecyclePhase.Set(&v)
}
// SetLifecyclePhaseNil sets the value for LifecyclePhase to be an explicit nil
func (o *CreateFeatureRequestBody) SetLifecyclePhaseNil() {
	o.LifecyclePhase.Set(nil)
}

// UnsetLifecyclePhase ensures that no value is present for LifecyclePhase, not even an explicit nil
func (o *CreateFeatureRequestBody) UnsetLifecyclePhase() {
	o.LifecyclePhase.Unset()
}

// GetName returns the Name field value
func (o *CreateFeatureRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateFeatureRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateFeatureRequestBody) SetName(v string) {
	o.Name = v
}

// GetSkipWebhooks returns the SkipWebhooks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFeatureRequestBody) GetSkipWebhooks() bool {
	if o == nil || IsNil(o.SkipWebhooks.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipWebhooks.Get()
}

// GetSkipWebhooksOk returns a tuple with the SkipWebhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFeatureRequestBody) GetSkipWebhooksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipWebhooks.Get(), o.SkipWebhooks.IsSet()
}

// HasSkipWebhooks returns a boolean if a field has been set.
func (o *CreateFeatureRequestBody) HasSkipWebhooks() bool {
	if o != nil && o.SkipWebhooks.IsSet() {
		return true
	}

	return false
}

// SetSkipWebhooks gets a reference to the given NullableBool and assigns it to the SkipWebhooks field.
func (o *CreateFeatureRequestBody) SetSkipWebhooks(v bool) {
	o.SkipWebhooks.Set(&v)
}
// SetSkipWebhooksNil sets the value for SkipWebhooks to be an explicit nil
func (o *CreateFeatureRequestBody) SetSkipWebhooksNil() {
	o.SkipWebhooks.Set(nil)
}

// UnsetSkipWebhooks ensures that no value is present for SkipWebhooks, not even an explicit nil
func (o *CreateFeatureRequestBody) UnsetSkipWebhooks() {
	o.SkipWebhooks.Unset()
}

// GetTraitId returns the TraitId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateFeatureRequestBody) GetTraitId() string {
	if o == nil || IsNil(o.TraitId.Get()) {
		var ret string
		return ret
	}
	return *o.TraitId.Get()
}

// GetTraitIdOk returns a tuple with the TraitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateFeatureRequestBody) GetTraitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraitId.Get(), o.TraitId.IsSet()
}

// HasTraitId returns a boolean if a field has been set.
func (o *CreateFeatureRequestBody) HasTraitId() bool {
	if o != nil && o.TraitId.IsSet() {
		return true
	}

	return false
}

// SetTraitId gets a reference to the given NullableString and assigns it to the TraitId field.
func (o *CreateFeatureRequestBody) SetTraitId(v string) {
	o.TraitId.Set(&v)
}
// SetTraitIdNil sets the value for TraitId to be an explicit nil
func (o *CreateFeatureRequestBody) SetTraitIdNil() {
	o.TraitId.Set(nil)
}

// UnsetTraitId ensures that no value is present for TraitId, not even an explicit nil
func (o *CreateFeatureRequestBody) UnsetTraitId() {
	o.TraitId.Unset()
}

func (o CreateFeatureRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFeatureRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	if o.EventSubtype.IsSet() {
		toSerialize["event_subtype"] = o.EventSubtype.Get()
	}
	toSerialize["feature_type"] = o.FeatureType
	if !IsNil(o.Flag) {
		toSerialize["flag"] = o.Flag
	}
	if o.LifecyclePhase.IsSet() {
		toSerialize["lifecycle_phase"] = o.LifecyclePhase.Get()
	}
	toSerialize["name"] = o.Name
	if o.SkipWebhooks.IsSet() {
		toSerialize["skip_webhooks"] = o.SkipWebhooks.Get()
	}
	if o.TraitId.IsSet() {
		toSerialize["trait_id"] = o.TraitId.Get()
	}
	return toSerialize, nil
}

type NullableCreateFeatureRequestBody struct {
	value *CreateFeatureRequestBody
	isSet bool
}

func (v NullableCreateFeatureRequestBody) Get() *CreateFeatureRequestBody {
	return v.value
}

func (v *NullableCreateFeatureRequestBody) Set(val *CreateFeatureRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFeatureRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFeatureRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFeatureRequestBody(val *CreateFeatureRequestBody) *NullableCreateFeatureRequestBody {
	return &NullableCreateFeatureRequestBody{value: val, isSet: true}
}

func (v NullableCreateFeatureRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFeatureRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


