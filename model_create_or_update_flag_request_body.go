/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the CreateOrUpdateFlagRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateFlagRequestBody{}

// CreateOrUpdateFlagRequestBody struct for CreateOrUpdateFlagRequestBody
type CreateOrUpdateFlagRequestBody struct {
	DefaultValue bool `json:"default_value"`
	Description string `json:"description"`
	FeatureId NullableString `json:"feature_id,omitempty"`
	FlagType string `json:"flag_type"`
	Id NullableString `json:"id,omitempty"`
	Key string `json:"key"`
	Name string `json:"name"`
	Rules []CreateOrUpdateRuleRequestBody `json:"rules"`
	SkipWebhooks NullableBool `json:"skip_webhooks,omitempty"`
}

// NewCreateOrUpdateFlagRequestBody instantiates a new CreateOrUpdateFlagRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateFlagRequestBody(defaultValue bool, description string, flagType string, key string, name string, rules []CreateOrUpdateRuleRequestBody) *CreateOrUpdateFlagRequestBody {
	this := CreateOrUpdateFlagRequestBody{}
	this.DefaultValue = defaultValue
	this.Description = description
	this.FlagType = flagType
	this.Key = key
	this.Name = name
	this.Rules = rules
	return &this
}

// NewCreateOrUpdateFlagRequestBodyWithDefaults instantiates a new CreateOrUpdateFlagRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateFlagRequestBodyWithDefaults() *CreateOrUpdateFlagRequestBody {
	this := CreateOrUpdateFlagRequestBody{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value
func (o *CreateOrUpdateFlagRequestBody) GetDefaultValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateFlagRequestBody) GetDefaultValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultValue, true
}

// SetDefaultValue sets field value
func (o *CreateOrUpdateFlagRequestBody) SetDefaultValue(v bool) {
	o.DefaultValue = v
}

// GetDescription returns the Description field value
func (o *CreateOrUpdateFlagRequestBody) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateFlagRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateOrUpdateFlagRequestBody) SetDescription(v string) {
	o.Description = v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateFlagRequestBody) GetFeatureId() string {
	if o == nil || IsNil(o.FeatureId.Get()) {
		var ret string
		return ret
	}
	return *o.FeatureId.Get()
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateFlagRequestBody) GetFeatureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeatureId.Get(), o.FeatureId.IsSet()
}

// HasFeatureId returns a boolean if a field has been set.
func (o *CreateOrUpdateFlagRequestBody) HasFeatureId() bool {
	if o != nil && o.FeatureId.IsSet() {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given NullableString and assigns it to the FeatureId field.
func (o *CreateOrUpdateFlagRequestBody) SetFeatureId(v string) {
	o.FeatureId.Set(&v)
}
// SetFeatureIdNil sets the value for FeatureId to be an explicit nil
func (o *CreateOrUpdateFlagRequestBody) SetFeatureIdNil() {
	o.FeatureId.Set(nil)
}

// UnsetFeatureId ensures that no value is present for FeatureId, not even an explicit nil
func (o *CreateOrUpdateFlagRequestBody) UnsetFeatureId() {
	o.FeatureId.Unset()
}

// GetFlagType returns the FlagType field value
func (o *CreateOrUpdateFlagRequestBody) GetFlagType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlagType
}

// GetFlagTypeOk returns a tuple with the FlagType field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateFlagRequestBody) GetFlagTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlagType, true
}

// SetFlagType sets field value
func (o *CreateOrUpdateFlagRequestBody) SetFlagType(v string) {
	o.FlagType = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateFlagRequestBody) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateFlagRequestBody) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CreateOrUpdateFlagRequestBody) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CreateOrUpdateFlagRequestBody) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CreateOrUpdateFlagRequestBody) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CreateOrUpdateFlagRequestBody) UnsetId() {
	o.Id.Unset()
}

// GetKey returns the Key field value
func (o *CreateOrUpdateFlagRequestBody) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateFlagRequestBody) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateOrUpdateFlagRequestBody) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *CreateOrUpdateFlagRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateFlagRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrUpdateFlagRequestBody) SetName(v string) {
	o.Name = v
}

// GetRules returns the Rules field value
func (o *CreateOrUpdateFlagRequestBody) GetRules() []CreateOrUpdateRuleRequestBody {
	if o == nil {
		var ret []CreateOrUpdateRuleRequestBody
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateFlagRequestBody) GetRulesOk() ([]CreateOrUpdateRuleRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *CreateOrUpdateFlagRequestBody) SetRules(v []CreateOrUpdateRuleRequestBody) {
	o.Rules = v
}

// GetSkipWebhooks returns the SkipWebhooks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrUpdateFlagRequestBody) GetSkipWebhooks() bool {
	if o == nil || IsNil(o.SkipWebhooks.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipWebhooks.Get()
}

// GetSkipWebhooksOk returns a tuple with the SkipWebhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrUpdateFlagRequestBody) GetSkipWebhooksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipWebhooks.Get(), o.SkipWebhooks.IsSet()
}

// HasSkipWebhooks returns a boolean if a field has been set.
func (o *CreateOrUpdateFlagRequestBody) HasSkipWebhooks() bool {
	if o != nil && o.SkipWebhooks.IsSet() {
		return true
	}

	return false
}

// SetSkipWebhooks gets a reference to the given NullableBool and assigns it to the SkipWebhooks field.
func (o *CreateOrUpdateFlagRequestBody) SetSkipWebhooks(v bool) {
	o.SkipWebhooks.Set(&v)
}
// SetSkipWebhooksNil sets the value for SkipWebhooks to be an explicit nil
func (o *CreateOrUpdateFlagRequestBody) SetSkipWebhooksNil() {
	o.SkipWebhooks.Set(nil)
}

// UnsetSkipWebhooks ensures that no value is present for SkipWebhooks, not even an explicit nil
func (o *CreateOrUpdateFlagRequestBody) UnsetSkipWebhooks() {
	o.SkipWebhooks.Unset()
}

func (o CreateOrUpdateFlagRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateFlagRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["default_value"] = o.DefaultValue
	toSerialize["description"] = o.Description
	if o.FeatureId.IsSet() {
		toSerialize["feature_id"] = o.FeatureId.Get()
	}
	toSerialize["flag_type"] = o.FlagType
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	toSerialize["rules"] = o.Rules
	if o.SkipWebhooks.IsSet() {
		toSerialize["skip_webhooks"] = o.SkipWebhooks.Get()
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateFlagRequestBody struct {
	value *CreateOrUpdateFlagRequestBody
	isSet bool
}

func (v NullableCreateOrUpdateFlagRequestBody) Get() *CreateOrUpdateFlagRequestBody {
	return v.value
}

func (v *NullableCreateOrUpdateFlagRequestBody) Set(val *CreateOrUpdateFlagRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateFlagRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateFlagRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateFlagRequestBody(val *CreateOrUpdateFlagRequestBody) *NullableCreateOrUpdateFlagRequestBody {
	return &NullableCreateOrUpdateFlagRequestBody{value: val, isSet: true}
}

func (v NullableCreateOrUpdateFlagRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateFlagRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


