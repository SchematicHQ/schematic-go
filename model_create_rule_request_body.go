/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the CreateRuleRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRuleRequestBody{}

// CreateRuleRequestBody struct for CreateRuleRequestBody
type CreateRuleRequestBody struct {
	ConditionGroups []CreateOrUpdateConditionGroupRequestBody `json:"condition_groups"`
	Conditions []CreateOrUpdateConditionRequestBody `json:"conditions"`
	FlagId NullableString `json:"flag_id,omitempty"`
	Name string `json:"name"`
	PlanId NullableString `json:"plan_id,omitempty"`
	Priority int32 `json:"priority"`
	PriorityGroup NullableInt32 `json:"priority_group,omitempty"`
	SkipWebhooks NullableBool `json:"skip_webhooks,omitempty"`
	Value bool `json:"value"`
}

// NewCreateRuleRequestBody instantiates a new CreateRuleRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRuleRequestBody(conditionGroups []CreateOrUpdateConditionGroupRequestBody, conditions []CreateOrUpdateConditionRequestBody, name string, priority int32, value bool) *CreateRuleRequestBody {
	this := CreateRuleRequestBody{}
	this.ConditionGroups = conditionGroups
	this.Conditions = conditions
	this.Name = name
	this.Priority = priority
	this.Value = value
	return &this
}

// NewCreateRuleRequestBodyWithDefaults instantiates a new CreateRuleRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRuleRequestBodyWithDefaults() *CreateRuleRequestBody {
	this := CreateRuleRequestBody{}
	return &this
}

// GetConditionGroups returns the ConditionGroups field value
func (o *CreateRuleRequestBody) GetConditionGroups() []CreateOrUpdateConditionGroupRequestBody {
	if o == nil {
		var ret []CreateOrUpdateConditionGroupRequestBody
		return ret
	}

	return o.ConditionGroups
}

// GetConditionGroupsOk returns a tuple with the ConditionGroups field value
// and a boolean to check if the value has been set.
func (o *CreateRuleRequestBody) GetConditionGroupsOk() ([]CreateOrUpdateConditionGroupRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConditionGroups, true
}

// SetConditionGroups sets field value
func (o *CreateRuleRequestBody) SetConditionGroups(v []CreateOrUpdateConditionGroupRequestBody) {
	o.ConditionGroups = v
}

// GetConditions returns the Conditions field value
func (o *CreateRuleRequestBody) GetConditions() []CreateOrUpdateConditionRequestBody {
	if o == nil {
		var ret []CreateOrUpdateConditionRequestBody
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *CreateRuleRequestBody) GetConditionsOk() ([]CreateOrUpdateConditionRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *CreateRuleRequestBody) SetConditions(v []CreateOrUpdateConditionRequestBody) {
	o.Conditions = v
}

// GetFlagId returns the FlagId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRuleRequestBody) GetFlagId() string {
	if o == nil || IsNil(o.FlagId.Get()) {
		var ret string
		return ret
	}
	return *o.FlagId.Get()
}

// GetFlagIdOk returns a tuple with the FlagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRuleRequestBody) GetFlagIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FlagId.Get(), o.FlagId.IsSet()
}

// HasFlagId returns a boolean if a field has been set.
func (o *CreateRuleRequestBody) HasFlagId() bool {
	if o != nil && o.FlagId.IsSet() {
		return true
	}

	return false
}

// SetFlagId gets a reference to the given NullableString and assigns it to the FlagId field.
func (o *CreateRuleRequestBody) SetFlagId(v string) {
	o.FlagId.Set(&v)
}
// SetFlagIdNil sets the value for FlagId to be an explicit nil
func (o *CreateRuleRequestBody) SetFlagIdNil() {
	o.FlagId.Set(nil)
}

// UnsetFlagId ensures that no value is present for FlagId, not even an explicit nil
func (o *CreateRuleRequestBody) UnsetFlagId() {
	o.FlagId.Unset()
}

// GetName returns the Name field value
func (o *CreateRuleRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateRuleRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateRuleRequestBody) SetName(v string) {
	o.Name = v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRuleRequestBody) GetPlanId() string {
	if o == nil || IsNil(o.PlanId.Get()) {
		var ret string
		return ret
	}
	return *o.PlanId.Get()
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRuleRequestBody) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PlanId.Get(), o.PlanId.IsSet()
}

// HasPlanId returns a boolean if a field has been set.
func (o *CreateRuleRequestBody) HasPlanId() bool {
	if o != nil && o.PlanId.IsSet() {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given NullableString and assigns it to the PlanId field.
func (o *CreateRuleRequestBody) SetPlanId(v string) {
	o.PlanId.Set(&v)
}
// SetPlanIdNil sets the value for PlanId to be an explicit nil
func (o *CreateRuleRequestBody) SetPlanIdNil() {
	o.PlanId.Set(nil)
}

// UnsetPlanId ensures that no value is present for PlanId, not even an explicit nil
func (o *CreateRuleRequestBody) UnsetPlanId() {
	o.PlanId.Unset()
}

// GetPriority returns the Priority field value
func (o *CreateRuleRequestBody) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *CreateRuleRequestBody) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *CreateRuleRequestBody) SetPriority(v int32) {
	o.Priority = v
}

// GetPriorityGroup returns the PriorityGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRuleRequestBody) GetPriorityGroup() int32 {
	if o == nil || IsNil(o.PriorityGroup.Get()) {
		var ret int32
		return ret
	}
	return *o.PriorityGroup.Get()
}

// GetPriorityGroupOk returns a tuple with the PriorityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRuleRequestBody) GetPriorityGroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriorityGroup.Get(), o.PriorityGroup.IsSet()
}

// HasPriorityGroup returns a boolean if a field has been set.
func (o *CreateRuleRequestBody) HasPriorityGroup() bool {
	if o != nil && o.PriorityGroup.IsSet() {
		return true
	}

	return false
}

// SetPriorityGroup gets a reference to the given NullableInt32 and assigns it to the PriorityGroup field.
func (o *CreateRuleRequestBody) SetPriorityGroup(v int32) {
	o.PriorityGroup.Set(&v)
}
// SetPriorityGroupNil sets the value for PriorityGroup to be an explicit nil
func (o *CreateRuleRequestBody) SetPriorityGroupNil() {
	o.PriorityGroup.Set(nil)
}

// UnsetPriorityGroup ensures that no value is present for PriorityGroup, not even an explicit nil
func (o *CreateRuleRequestBody) UnsetPriorityGroup() {
	o.PriorityGroup.Unset()
}

// GetSkipWebhooks returns the SkipWebhooks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateRuleRequestBody) GetSkipWebhooks() bool {
	if o == nil || IsNil(o.SkipWebhooks.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipWebhooks.Get()
}

// GetSkipWebhooksOk returns a tuple with the SkipWebhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRuleRequestBody) GetSkipWebhooksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipWebhooks.Get(), o.SkipWebhooks.IsSet()
}

// HasSkipWebhooks returns a boolean if a field has been set.
func (o *CreateRuleRequestBody) HasSkipWebhooks() bool {
	if o != nil && o.SkipWebhooks.IsSet() {
		return true
	}

	return false
}

// SetSkipWebhooks gets a reference to the given NullableBool and assigns it to the SkipWebhooks field.
func (o *CreateRuleRequestBody) SetSkipWebhooks(v bool) {
	o.SkipWebhooks.Set(&v)
}
// SetSkipWebhooksNil sets the value for SkipWebhooks to be an explicit nil
func (o *CreateRuleRequestBody) SetSkipWebhooksNil() {
	o.SkipWebhooks.Set(nil)
}

// UnsetSkipWebhooks ensures that no value is present for SkipWebhooks, not even an explicit nil
func (o *CreateRuleRequestBody) UnsetSkipWebhooks() {
	o.SkipWebhooks.Unset()
}

// GetValue returns the Value field value
func (o *CreateRuleRequestBody) GetValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateRuleRequestBody) GetValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CreateRuleRequestBody) SetValue(v bool) {
	o.Value = v
}

func (o CreateRuleRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRuleRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["condition_groups"] = o.ConditionGroups
	toSerialize["conditions"] = o.Conditions
	if o.FlagId.IsSet() {
		toSerialize["flag_id"] = o.FlagId.Get()
	}
	toSerialize["name"] = o.Name
	if o.PlanId.IsSet() {
		toSerialize["plan_id"] = o.PlanId.Get()
	}
	toSerialize["priority"] = o.Priority
	if o.PriorityGroup.IsSet() {
		toSerialize["priority_group"] = o.PriorityGroup.Get()
	}
	if o.SkipWebhooks.IsSet() {
		toSerialize["skip_webhooks"] = o.SkipWebhooks.Get()
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableCreateRuleRequestBody struct {
	value *CreateRuleRequestBody
	isSet bool
}

func (v NullableCreateRuleRequestBody) Get() *CreateRuleRequestBody {
	return v.value
}

func (v *NullableCreateRuleRequestBody) Set(val *CreateRuleRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRuleRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRuleRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRuleRequestBody(val *CreateRuleRequestBody) *NullableCreateRuleRequestBody {
	return &NullableCreateRuleRequestBody{value: val, isSet: true}
}

func (v NullableCreateRuleRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRuleRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


