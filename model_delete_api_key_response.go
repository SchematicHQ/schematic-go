/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the DeleteApiKeyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteApiKeyResponse{}

// DeleteApiKeyResponse struct for DeleteApiKeyResponse
type DeleteApiKeyResponse struct {
	Data DeleteResponse `json:"data"`
	// Input parameters
	Params map[string]interface{} `json:"params"`
}

// NewDeleteApiKeyResponse instantiates a new DeleteApiKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteApiKeyResponse(data DeleteResponse, params map[string]interface{}) *DeleteApiKeyResponse {
	this := DeleteApiKeyResponse{}
	this.Data = data
	this.Params = params
	return &this
}

// NewDeleteApiKeyResponseWithDefaults instantiates a new DeleteApiKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteApiKeyResponseWithDefaults() *DeleteApiKeyResponse {
	this := DeleteApiKeyResponse{}
	return &this
}

// GetData returns the Data field value
func (o *DeleteApiKeyResponse) GetData() DeleteResponse {
	if o == nil {
		var ret DeleteResponse
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *DeleteApiKeyResponse) GetDataOk() (*DeleteResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *DeleteApiKeyResponse) SetData(v DeleteResponse) {
	o.Data = v
}

// GetParams returns the Params field value
func (o *DeleteApiKeyResponse) GetParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *DeleteApiKeyResponse) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *DeleteApiKeyResponse) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o DeleteApiKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteApiKeyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

type NullableDeleteApiKeyResponse struct {
	value *DeleteApiKeyResponse
	isSet bool
}

func (v NullableDeleteApiKeyResponse) Get() *DeleteApiKeyResponse {
	return v.value
}

func (v *NullableDeleteApiKeyResponse) Set(val *DeleteApiKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteApiKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteApiKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteApiKeyResponse(val *DeleteApiKeyResponse) *NullableDeleteApiKeyResponse {
	return &NullableDeleteApiKeyResponse{value: val, isSet: true}
}

func (v NullableDeleteApiKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteApiKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


