/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the GetRuleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRuleResponse{}

// GetRuleResponse struct for GetRuleResponse
type GetRuleResponse struct {
	Data RuleDetailResponseData `json:"data"`
	// Input parameters
	Params map[string]interface{} `json:"params"`
}

// NewGetRuleResponse instantiates a new GetRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRuleResponse(data RuleDetailResponseData, params map[string]interface{}) *GetRuleResponse {
	this := GetRuleResponse{}
	this.Data = data
	this.Params = params
	return &this
}

// NewGetRuleResponseWithDefaults instantiates a new GetRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRuleResponseWithDefaults() *GetRuleResponse {
	this := GetRuleResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GetRuleResponse) GetData() RuleDetailResponseData {
	if o == nil {
		var ret RuleDetailResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetRuleResponse) GetDataOk() (*RuleDetailResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetRuleResponse) SetData(v RuleDetailResponseData) {
	o.Data = v
}

// GetParams returns the Params field value
func (o *GetRuleResponse) GetParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *GetRuleResponse) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *GetRuleResponse) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o GetRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRuleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

type NullableGetRuleResponse struct {
	value *GetRuleResponse
	isSet bool
}

func (v NullableGetRuleResponse) Get() *GetRuleResponse {
	return v.value
}

func (v *NullableGetRuleResponse) Set(val *GetRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRuleResponse(val *GetRuleResponse) *NullableGetRuleResponse {
	return &NullableGetRuleResponse{value: val, isSet: true}
}

func (v NullableGetRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


