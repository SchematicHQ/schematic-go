/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the UpdateFlagRulesRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFlagRulesRequestBody{}

// UpdateFlagRulesRequestBody struct for UpdateFlagRulesRequestBody
type UpdateFlagRulesRequestBody struct {
	Rules []CreateOrUpdateRuleRequestBody `json:"rules"`
}

// NewUpdateFlagRulesRequestBody instantiates a new UpdateFlagRulesRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFlagRulesRequestBody(rules []CreateOrUpdateRuleRequestBody) *UpdateFlagRulesRequestBody {
	this := UpdateFlagRulesRequestBody{}
	this.Rules = rules
	return &this
}

// NewUpdateFlagRulesRequestBodyWithDefaults instantiates a new UpdateFlagRulesRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFlagRulesRequestBodyWithDefaults() *UpdateFlagRulesRequestBody {
	this := UpdateFlagRulesRequestBody{}
	return &this
}

// GetRules returns the Rules field value
func (o *UpdateFlagRulesRequestBody) GetRules() []CreateOrUpdateRuleRequestBody {
	if o == nil {
		var ret []CreateOrUpdateRuleRequestBody
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *UpdateFlagRulesRequestBody) GetRulesOk() ([]CreateOrUpdateRuleRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *UpdateFlagRulesRequestBody) SetRules(v []CreateOrUpdateRuleRequestBody) {
	o.Rules = v
}

func (o UpdateFlagRulesRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFlagRulesRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rules"] = o.Rules
	return toSerialize, nil
}

type NullableUpdateFlagRulesRequestBody struct {
	value *UpdateFlagRulesRequestBody
	isSet bool
}

func (v NullableUpdateFlagRulesRequestBody) Get() *UpdateFlagRulesRequestBody {
	return v.value
}

func (v *NullableUpdateFlagRulesRequestBody) Set(val *UpdateFlagRulesRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFlagRulesRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFlagRulesRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFlagRulesRequestBody(val *UpdateFlagRulesRequestBody) *NullableUpdateFlagRulesRequestBody {
	return &NullableUpdateFlagRulesRequestBody{value: val, isSet: true}
}

func (v NullableUpdateFlagRulesRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFlagRulesRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


