/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the UpdatePlanRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePlanRequestBody{}

// UpdatePlanRequestBody struct for UpdatePlanRequestBody
type UpdatePlanRequestBody struct {
	Name string `json:"name"`
	SkipWebhooks NullableBool `json:"skip_webhooks,omitempty"`
}

// NewUpdatePlanRequestBody instantiates a new UpdatePlanRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePlanRequestBody(name string) *UpdatePlanRequestBody {
	this := UpdatePlanRequestBody{}
	this.Name = name
	return &this
}

// NewUpdatePlanRequestBodyWithDefaults instantiates a new UpdatePlanRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePlanRequestBodyWithDefaults() *UpdatePlanRequestBody {
	this := UpdatePlanRequestBody{}
	return &this
}

// GetName returns the Name field value
func (o *UpdatePlanRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdatePlanRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdatePlanRequestBody) SetName(v string) {
	o.Name = v
}

// GetSkipWebhooks returns the SkipWebhooks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePlanRequestBody) GetSkipWebhooks() bool {
	if o == nil || IsNil(o.SkipWebhooks.Get()) {
		var ret bool
		return ret
	}
	return *o.SkipWebhooks.Get()
}

// GetSkipWebhooksOk returns a tuple with the SkipWebhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePlanRequestBody) GetSkipWebhooksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipWebhooks.Get(), o.SkipWebhooks.IsSet()
}

// HasSkipWebhooks returns a boolean if a field has been set.
func (o *UpdatePlanRequestBody) HasSkipWebhooks() bool {
	if o != nil && o.SkipWebhooks.IsSet() {
		return true
	}

	return false
}

// SetSkipWebhooks gets a reference to the given NullableBool and assigns it to the SkipWebhooks field.
func (o *UpdatePlanRequestBody) SetSkipWebhooks(v bool) {
	o.SkipWebhooks.Set(&v)
}
// SetSkipWebhooksNil sets the value for SkipWebhooks to be an explicit nil
func (o *UpdatePlanRequestBody) SetSkipWebhooksNil() {
	o.SkipWebhooks.Set(nil)
}

// UnsetSkipWebhooks ensures that no value is present for SkipWebhooks, not even an explicit nil
func (o *UpdatePlanRequestBody) UnsetSkipWebhooks() {
	o.SkipWebhooks.Unset()
}

func (o UpdatePlanRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePlanRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.SkipWebhooks.IsSet() {
		toSerialize["skip_webhooks"] = o.SkipWebhooks.Get()
	}
	return toSerialize, nil
}

type NullableUpdatePlanRequestBody struct {
	value *UpdatePlanRequestBody
	isSet bool
}

func (v NullableUpdatePlanRequestBody) Get() *UpdatePlanRequestBody {
	return v.value
}

func (v *NullableUpdatePlanRequestBody) Set(val *UpdatePlanRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePlanRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePlanRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePlanRequestBody(val *UpdatePlanRequestBody) *NullableUpdatePlanRequestBody {
	return &NullableUpdatePlanRequestBody{value: val, isSet: true}
}

func (v NullableUpdatePlanRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePlanRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


