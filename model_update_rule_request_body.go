/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the UpdateRuleRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRuleRequestBody{}

// UpdateRuleRequestBody struct for UpdateRuleRequestBody
type UpdateRuleRequestBody struct {
	ConditionGroups []CreateOrUpdateConditionGroupRequestBody `json:"condition_groups"`
	Conditions []CreateOrUpdateConditionRequestBody `json:"conditions"`
	Name string `json:"name"`
	Priority int32 `json:"priority"`
	PriorityGroup NullableInt32 `json:"priority_group,omitempty"`
	Value bool `json:"value"`
}

// NewUpdateRuleRequestBody instantiates a new UpdateRuleRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRuleRequestBody(conditionGroups []CreateOrUpdateConditionGroupRequestBody, conditions []CreateOrUpdateConditionRequestBody, name string, priority int32, value bool) *UpdateRuleRequestBody {
	this := UpdateRuleRequestBody{}
	this.ConditionGroups = conditionGroups
	this.Conditions = conditions
	this.Name = name
	this.Priority = priority
	this.Value = value
	return &this
}

// NewUpdateRuleRequestBodyWithDefaults instantiates a new UpdateRuleRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRuleRequestBodyWithDefaults() *UpdateRuleRequestBody {
	this := UpdateRuleRequestBody{}
	return &this
}

// GetConditionGroups returns the ConditionGroups field value
func (o *UpdateRuleRequestBody) GetConditionGroups() []CreateOrUpdateConditionGroupRequestBody {
	if o == nil {
		var ret []CreateOrUpdateConditionGroupRequestBody
		return ret
	}

	return o.ConditionGroups
}

// GetConditionGroupsOk returns a tuple with the ConditionGroups field value
// and a boolean to check if the value has been set.
func (o *UpdateRuleRequestBody) GetConditionGroupsOk() ([]CreateOrUpdateConditionGroupRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConditionGroups, true
}

// SetConditionGroups sets field value
func (o *UpdateRuleRequestBody) SetConditionGroups(v []CreateOrUpdateConditionGroupRequestBody) {
	o.ConditionGroups = v
}

// GetConditions returns the Conditions field value
func (o *UpdateRuleRequestBody) GetConditions() []CreateOrUpdateConditionRequestBody {
	if o == nil {
		var ret []CreateOrUpdateConditionRequestBody
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *UpdateRuleRequestBody) GetConditionsOk() ([]CreateOrUpdateConditionRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *UpdateRuleRequestBody) SetConditions(v []CreateOrUpdateConditionRequestBody) {
	o.Conditions = v
}

// GetName returns the Name field value
func (o *UpdateRuleRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateRuleRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateRuleRequestBody) SetName(v string) {
	o.Name = v
}

// GetPriority returns the Priority field value
func (o *UpdateRuleRequestBody) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *UpdateRuleRequestBody) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *UpdateRuleRequestBody) SetPriority(v int32) {
	o.Priority = v
}

// GetPriorityGroup returns the PriorityGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateRuleRequestBody) GetPriorityGroup() int32 {
	if o == nil || IsNil(o.PriorityGroup.Get()) {
		var ret int32
		return ret
	}
	return *o.PriorityGroup.Get()
}

// GetPriorityGroupOk returns a tuple with the PriorityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateRuleRequestBody) GetPriorityGroupOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriorityGroup.Get(), o.PriorityGroup.IsSet()
}

// HasPriorityGroup returns a boolean if a field has been set.
func (o *UpdateRuleRequestBody) HasPriorityGroup() bool {
	if o != nil && o.PriorityGroup.IsSet() {
		return true
	}

	return false
}

// SetPriorityGroup gets a reference to the given NullableInt32 and assigns it to the PriorityGroup field.
func (o *UpdateRuleRequestBody) SetPriorityGroup(v int32) {
	o.PriorityGroup.Set(&v)
}
// SetPriorityGroupNil sets the value for PriorityGroup to be an explicit nil
func (o *UpdateRuleRequestBody) SetPriorityGroupNil() {
	o.PriorityGroup.Set(nil)
}

// UnsetPriorityGroup ensures that no value is present for PriorityGroup, not even an explicit nil
func (o *UpdateRuleRequestBody) UnsetPriorityGroup() {
	o.PriorityGroup.Unset()
}

// GetValue returns the Value field value
func (o *UpdateRuleRequestBody) GetValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *UpdateRuleRequestBody) GetValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *UpdateRuleRequestBody) SetValue(v bool) {
	o.Value = v
}

func (o UpdateRuleRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRuleRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["condition_groups"] = o.ConditionGroups
	toSerialize["conditions"] = o.Conditions
	toSerialize["name"] = o.Name
	toSerialize["priority"] = o.Priority
	if o.PriorityGroup.IsSet() {
		toSerialize["priority_group"] = o.PriorityGroup.Get()
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableUpdateRuleRequestBody struct {
	value *UpdateRuleRequestBody
	isSet bool
}

func (v NullableUpdateRuleRequestBody) Get() *UpdateRuleRequestBody {
	return v.value
}

func (v *NullableUpdateRuleRequestBody) Set(val *UpdateRuleRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRuleRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRuleRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRuleRequestBody(val *UpdateRuleRequestBody) *NullableUpdateRuleRequestBody {
	return &NullableUpdateRuleRequestBody{value: val, isSet: true}
}

func (v NullableUpdateRuleRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRuleRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


