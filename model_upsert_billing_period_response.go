/*
Schematic API

Schematic API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schematic

import (
	"encoding/json"
)

// checks if the UpsertBillingPeriodResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpsertBillingPeriodResponse{}

// UpsertBillingPeriodResponse struct for UpsertBillingPeriodResponse
type UpsertBillingPeriodResponse struct {
	Data BillingPeriodResponseData `json:"data"`
	// Input parameters
	Params map[string]interface{} `json:"params"`
}

// NewUpsertBillingPeriodResponse instantiates a new UpsertBillingPeriodResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertBillingPeriodResponse(data BillingPeriodResponseData, params map[string]interface{}) *UpsertBillingPeriodResponse {
	this := UpsertBillingPeriodResponse{}
	this.Data = data
	this.Params = params
	return &this
}

// NewUpsertBillingPeriodResponseWithDefaults instantiates a new UpsertBillingPeriodResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertBillingPeriodResponseWithDefaults() *UpsertBillingPeriodResponse {
	this := UpsertBillingPeriodResponse{}
	return &this
}

// GetData returns the Data field value
func (o *UpsertBillingPeriodResponse) GetData() BillingPeriodResponseData {
	if o == nil {
		var ret BillingPeriodResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *UpsertBillingPeriodResponse) GetDataOk() (*BillingPeriodResponseData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *UpsertBillingPeriodResponse) SetData(v BillingPeriodResponseData) {
	o.Data = v
}

// GetParams returns the Params field value
func (o *UpsertBillingPeriodResponse) GetParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *UpsertBillingPeriodResponse) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *UpsertBillingPeriodResponse) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o UpsertBillingPeriodResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpsertBillingPeriodResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

type NullableUpsertBillingPeriodResponse struct {
	value *UpsertBillingPeriodResponse
	isSet bool
}

func (v NullableUpsertBillingPeriodResponse) Get() *UpsertBillingPeriodResponse {
	return v.value
}

func (v *NullableUpsertBillingPeriodResponse) Set(val *UpsertBillingPeriodResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertBillingPeriodResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertBillingPeriodResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertBillingPeriodResponse(val *UpsertBillingPeriodResponse) *NullableUpsertBillingPeriodResponse {
	return &NullableUpsertBillingPeriodResponse{value: val, isSet: true}
}

func (v NullableUpsertBillingPeriodResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertBillingPeriodResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


