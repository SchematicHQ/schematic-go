// This file was auto-generated by Fern from our API Definition.

package schematichq

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/schematichq/schematic-go/core"
)

type CountWebhookEventsRequest struct {
	WebhookID *string   `json:"-" url:"webhook_id,omitempty"`
	IDs       []*string `json:"-" url:"ids,omitempty"`
	Q         *string   `json:"-" url:"q,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type CountWebhooksRequest struct {
	Q *string `json:"-" url:"q,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type CreateWebhookRequestBody struct {
	Name         string                                     `json:"name" url:"-"`
	RequestTypes []CreateWebhookRequestBodyRequestTypesItem `json:"request_types,omitempty" url:"-"`
	URL          string                                     `json:"url" url:"-"`
}

type ListWebhookEventsRequest struct {
	WebhookID *string   `json:"-" url:"webhook_id,omitempty"`
	IDs       []*string `json:"-" url:"ids,omitempty"`
	Q         *string   `json:"-" url:"q,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type ListWebhooksRequest struct {
	Q *string `json:"-" url:"q,omitempty"`
	// Page limit (default 100)
	Limit *int `json:"-" url:"limit,omitempty"`
	// Page offset (default 0)
	Offset *int `json:"-" url:"offset,omitempty"`
}

type CountWebhookEventsResponse struct {
	Data *CountResponse `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *CountWebhookEventsParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CountWebhookEventsResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CountWebhookEventsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CountWebhookEventsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CountWebhookEventsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CountWebhookEventsResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CountWebhooksResponse struct {
	Data *CountResponse `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *CountWebhooksParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CountWebhooksResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CountWebhooksResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CountWebhooksResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CountWebhooksResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CountWebhooksResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CreateWebhookRequestBodyRequestTypesItem string

const (
	CreateWebhookRequestBodyRequestTypesItemCompanyUpdated         CreateWebhookRequestBodyRequestTypesItem = "company.updated"
	CreateWebhookRequestBodyRequestTypesItemUserUpdated            CreateWebhookRequestBodyRequestTypesItem = "user.updated"
	CreateWebhookRequestBodyRequestTypesItemPlanUpdated            CreateWebhookRequestBodyRequestTypesItem = "plan.updated"
	CreateWebhookRequestBodyRequestTypesItemPlanEntitlementUpdated CreateWebhookRequestBodyRequestTypesItem = "plan.entitlement.updated"
	CreateWebhookRequestBodyRequestTypesItemCompanyOverrideUpdated CreateWebhookRequestBodyRequestTypesItem = "company.override.updated"
	CreateWebhookRequestBodyRequestTypesItemFeatureUpdated         CreateWebhookRequestBodyRequestTypesItem = "feature.updated"
	CreateWebhookRequestBodyRequestTypesItemFlagUpdated            CreateWebhookRequestBodyRequestTypesItem = "flag.updated"
	CreateWebhookRequestBodyRequestTypesItemFlagRulesUpdated       CreateWebhookRequestBodyRequestTypesItem = "flag_rules.updated"
	CreateWebhookRequestBodyRequestTypesItemCompanyCreated         CreateWebhookRequestBodyRequestTypesItem = "company.created"
	CreateWebhookRequestBodyRequestTypesItemUserCreated            CreateWebhookRequestBodyRequestTypesItem = "user.created"
	CreateWebhookRequestBodyRequestTypesItemPlanCreated            CreateWebhookRequestBodyRequestTypesItem = "plan.created"
	CreateWebhookRequestBodyRequestTypesItemPlanEntitlementCreated CreateWebhookRequestBodyRequestTypesItem = "plan.entitlement.created"
	CreateWebhookRequestBodyRequestTypesItemCompanyOverrideCreated CreateWebhookRequestBodyRequestTypesItem = "company.override.created"
	CreateWebhookRequestBodyRequestTypesItemFeatureCreated         CreateWebhookRequestBodyRequestTypesItem = "feature.created"
	CreateWebhookRequestBodyRequestTypesItemFlagCreated            CreateWebhookRequestBodyRequestTypesItem = "flag.created"
	CreateWebhookRequestBodyRequestTypesItemCompanyDeleted         CreateWebhookRequestBodyRequestTypesItem = "company.deleted"
	CreateWebhookRequestBodyRequestTypesItemUserDeleted            CreateWebhookRequestBodyRequestTypesItem = "user.deleted"
	CreateWebhookRequestBodyRequestTypesItemPlanDeleted            CreateWebhookRequestBodyRequestTypesItem = "plan.deleted"
	CreateWebhookRequestBodyRequestTypesItemPlanEntitlementDeleted CreateWebhookRequestBodyRequestTypesItem = "plan.entitlement.deleted"
	CreateWebhookRequestBodyRequestTypesItemCompanyOverrideDeleted CreateWebhookRequestBodyRequestTypesItem = "company.override.deleted"
	CreateWebhookRequestBodyRequestTypesItemFeatureDeleted         CreateWebhookRequestBodyRequestTypesItem = "feature.deleted"
	CreateWebhookRequestBodyRequestTypesItemFlagDeleted            CreateWebhookRequestBodyRequestTypesItem = "flag.deleted"
	CreateWebhookRequestBodyRequestTypesItemTestSend               CreateWebhookRequestBodyRequestTypesItem = "test.send"
)

func NewCreateWebhookRequestBodyRequestTypesItemFromString(s string) (CreateWebhookRequestBodyRequestTypesItem, error) {
	switch s {
	case "company.updated":
		return CreateWebhookRequestBodyRequestTypesItemCompanyUpdated, nil
	case "user.updated":
		return CreateWebhookRequestBodyRequestTypesItemUserUpdated, nil
	case "plan.updated":
		return CreateWebhookRequestBodyRequestTypesItemPlanUpdated, nil
	case "plan.entitlement.updated":
		return CreateWebhookRequestBodyRequestTypesItemPlanEntitlementUpdated, nil
	case "company.override.updated":
		return CreateWebhookRequestBodyRequestTypesItemCompanyOverrideUpdated, nil
	case "feature.updated":
		return CreateWebhookRequestBodyRequestTypesItemFeatureUpdated, nil
	case "flag.updated":
		return CreateWebhookRequestBodyRequestTypesItemFlagUpdated, nil
	case "flag_rules.updated":
		return CreateWebhookRequestBodyRequestTypesItemFlagRulesUpdated, nil
	case "company.created":
		return CreateWebhookRequestBodyRequestTypesItemCompanyCreated, nil
	case "user.created":
		return CreateWebhookRequestBodyRequestTypesItemUserCreated, nil
	case "plan.created":
		return CreateWebhookRequestBodyRequestTypesItemPlanCreated, nil
	case "plan.entitlement.created":
		return CreateWebhookRequestBodyRequestTypesItemPlanEntitlementCreated, nil
	case "company.override.created":
		return CreateWebhookRequestBodyRequestTypesItemCompanyOverrideCreated, nil
	case "feature.created":
		return CreateWebhookRequestBodyRequestTypesItemFeatureCreated, nil
	case "flag.created":
		return CreateWebhookRequestBodyRequestTypesItemFlagCreated, nil
	case "company.deleted":
		return CreateWebhookRequestBodyRequestTypesItemCompanyDeleted, nil
	case "user.deleted":
		return CreateWebhookRequestBodyRequestTypesItemUserDeleted, nil
	case "plan.deleted":
		return CreateWebhookRequestBodyRequestTypesItemPlanDeleted, nil
	case "plan.entitlement.deleted":
		return CreateWebhookRequestBodyRequestTypesItemPlanEntitlementDeleted, nil
	case "company.override.deleted":
		return CreateWebhookRequestBodyRequestTypesItemCompanyOverrideDeleted, nil
	case "feature.deleted":
		return CreateWebhookRequestBodyRequestTypesItemFeatureDeleted, nil
	case "flag.deleted":
		return CreateWebhookRequestBodyRequestTypesItemFlagDeleted, nil
	case "test.send":
		return CreateWebhookRequestBodyRequestTypesItemTestSend, nil
	}
	var t CreateWebhookRequestBodyRequestTypesItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c CreateWebhookRequestBodyRequestTypesItem) Ptr() *CreateWebhookRequestBodyRequestTypesItem {
	return &c
}

type CreateWebhookResponse struct {
	Data *WebhookResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CreateWebhookResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateWebhookResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateWebhookResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateWebhookResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateWebhookResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DeleteWebhookResponse struct {
	Data *DeleteResponse `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (d *DeleteWebhookResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteWebhookResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteWebhookResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteWebhookResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties

	d._rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteWebhookResponse) String() string {
	if len(d._rawJSON) > 0 {
		if value, err := core.StringifyJSON(d._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GetWebhookEventResponse struct {
	Data *WebhookEventDetailResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetWebhookEventResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetWebhookEventResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetWebhookEventResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetWebhookEventResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetWebhookEventResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetWebhookResponse struct {
	Data *WebhookResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetWebhookResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetWebhookResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetWebhookResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetWebhookResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetWebhookResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type ListWebhookEventsResponse struct {
	// The returned resources
	Data []*WebhookEventDetailResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *ListWebhookEventsParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListWebhookEventsResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListWebhookEventsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListWebhookEventsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListWebhookEventsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListWebhookEventsResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListWebhooksResponse struct {
	// The returned resources
	Data []*WebhookResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params *ListWebhooksParams `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListWebhooksResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListWebhooksResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListWebhooksResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListWebhooksResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListWebhooksResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type UpdateWebhookRequestBodyRequestTypesItem string

const (
	UpdateWebhookRequestBodyRequestTypesItemCompanyUpdated         UpdateWebhookRequestBodyRequestTypesItem = "company.updated"
	UpdateWebhookRequestBodyRequestTypesItemUserUpdated            UpdateWebhookRequestBodyRequestTypesItem = "user.updated"
	UpdateWebhookRequestBodyRequestTypesItemPlanUpdated            UpdateWebhookRequestBodyRequestTypesItem = "plan.updated"
	UpdateWebhookRequestBodyRequestTypesItemPlanEntitlementUpdated UpdateWebhookRequestBodyRequestTypesItem = "plan.entitlement.updated"
	UpdateWebhookRequestBodyRequestTypesItemCompanyOverrideUpdated UpdateWebhookRequestBodyRequestTypesItem = "company.override.updated"
	UpdateWebhookRequestBodyRequestTypesItemFeatureUpdated         UpdateWebhookRequestBodyRequestTypesItem = "feature.updated"
	UpdateWebhookRequestBodyRequestTypesItemFlagUpdated            UpdateWebhookRequestBodyRequestTypesItem = "flag.updated"
	UpdateWebhookRequestBodyRequestTypesItemFlagRulesUpdated       UpdateWebhookRequestBodyRequestTypesItem = "flag_rules.updated"
	UpdateWebhookRequestBodyRequestTypesItemCompanyCreated         UpdateWebhookRequestBodyRequestTypesItem = "company.created"
	UpdateWebhookRequestBodyRequestTypesItemUserCreated            UpdateWebhookRequestBodyRequestTypesItem = "user.created"
	UpdateWebhookRequestBodyRequestTypesItemPlanCreated            UpdateWebhookRequestBodyRequestTypesItem = "plan.created"
	UpdateWebhookRequestBodyRequestTypesItemPlanEntitlementCreated UpdateWebhookRequestBodyRequestTypesItem = "plan.entitlement.created"
	UpdateWebhookRequestBodyRequestTypesItemCompanyOverrideCreated UpdateWebhookRequestBodyRequestTypesItem = "company.override.created"
	UpdateWebhookRequestBodyRequestTypesItemFeatureCreated         UpdateWebhookRequestBodyRequestTypesItem = "feature.created"
	UpdateWebhookRequestBodyRequestTypesItemFlagCreated            UpdateWebhookRequestBodyRequestTypesItem = "flag.created"
	UpdateWebhookRequestBodyRequestTypesItemCompanyDeleted         UpdateWebhookRequestBodyRequestTypesItem = "company.deleted"
	UpdateWebhookRequestBodyRequestTypesItemUserDeleted            UpdateWebhookRequestBodyRequestTypesItem = "user.deleted"
	UpdateWebhookRequestBodyRequestTypesItemPlanDeleted            UpdateWebhookRequestBodyRequestTypesItem = "plan.deleted"
	UpdateWebhookRequestBodyRequestTypesItemPlanEntitlementDeleted UpdateWebhookRequestBodyRequestTypesItem = "plan.entitlement.deleted"
	UpdateWebhookRequestBodyRequestTypesItemCompanyOverrideDeleted UpdateWebhookRequestBodyRequestTypesItem = "company.override.deleted"
	UpdateWebhookRequestBodyRequestTypesItemFeatureDeleted         UpdateWebhookRequestBodyRequestTypesItem = "feature.deleted"
	UpdateWebhookRequestBodyRequestTypesItemFlagDeleted            UpdateWebhookRequestBodyRequestTypesItem = "flag.deleted"
	UpdateWebhookRequestBodyRequestTypesItemTestSend               UpdateWebhookRequestBodyRequestTypesItem = "test.send"
)

func NewUpdateWebhookRequestBodyRequestTypesItemFromString(s string) (UpdateWebhookRequestBodyRequestTypesItem, error) {
	switch s {
	case "company.updated":
		return UpdateWebhookRequestBodyRequestTypesItemCompanyUpdated, nil
	case "user.updated":
		return UpdateWebhookRequestBodyRequestTypesItemUserUpdated, nil
	case "plan.updated":
		return UpdateWebhookRequestBodyRequestTypesItemPlanUpdated, nil
	case "plan.entitlement.updated":
		return UpdateWebhookRequestBodyRequestTypesItemPlanEntitlementUpdated, nil
	case "company.override.updated":
		return UpdateWebhookRequestBodyRequestTypesItemCompanyOverrideUpdated, nil
	case "feature.updated":
		return UpdateWebhookRequestBodyRequestTypesItemFeatureUpdated, nil
	case "flag.updated":
		return UpdateWebhookRequestBodyRequestTypesItemFlagUpdated, nil
	case "flag_rules.updated":
		return UpdateWebhookRequestBodyRequestTypesItemFlagRulesUpdated, nil
	case "company.created":
		return UpdateWebhookRequestBodyRequestTypesItemCompanyCreated, nil
	case "user.created":
		return UpdateWebhookRequestBodyRequestTypesItemUserCreated, nil
	case "plan.created":
		return UpdateWebhookRequestBodyRequestTypesItemPlanCreated, nil
	case "plan.entitlement.created":
		return UpdateWebhookRequestBodyRequestTypesItemPlanEntitlementCreated, nil
	case "company.override.created":
		return UpdateWebhookRequestBodyRequestTypesItemCompanyOverrideCreated, nil
	case "feature.created":
		return UpdateWebhookRequestBodyRequestTypesItemFeatureCreated, nil
	case "flag.created":
		return UpdateWebhookRequestBodyRequestTypesItemFlagCreated, nil
	case "company.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemCompanyDeleted, nil
	case "user.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemUserDeleted, nil
	case "plan.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemPlanDeleted, nil
	case "plan.entitlement.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemPlanEntitlementDeleted, nil
	case "company.override.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemCompanyOverrideDeleted, nil
	case "feature.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemFeatureDeleted, nil
	case "flag.deleted":
		return UpdateWebhookRequestBodyRequestTypesItemFlagDeleted, nil
	case "test.send":
		return UpdateWebhookRequestBodyRequestTypesItemTestSend, nil
	}
	var t UpdateWebhookRequestBodyRequestTypesItem
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (u UpdateWebhookRequestBodyRequestTypesItem) Ptr() *UpdateWebhookRequestBodyRequestTypesItem {
	return &u
}

type UpdateWebhookRequestBodyStatus string

const (
	UpdateWebhookRequestBodyStatusActive   UpdateWebhookRequestBodyStatus = "active"
	UpdateWebhookRequestBodyStatusInactive UpdateWebhookRequestBodyStatus = "inactive"
)

func NewUpdateWebhookRequestBodyStatusFromString(s string) (UpdateWebhookRequestBodyStatus, error) {
	switch s {
	case "active":
		return UpdateWebhookRequestBodyStatusActive, nil
	case "inactive":
		return UpdateWebhookRequestBodyStatusInactive, nil
	}
	var t UpdateWebhookRequestBodyStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (u UpdateWebhookRequestBodyStatus) Ptr() *UpdateWebhookRequestBodyStatus {
	return &u
}

type UpdateWebhookResponse struct {
	Data *WebhookResponseData `json:"data,omitempty" url:"data,omitempty"`
	// Input parameters
	Params map[string]interface{} `json:"params,omitempty" url:"params,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (u *UpdateWebhookResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UpdateWebhookResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UpdateWebhookResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UpdateWebhookResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UpdateWebhookResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UpdateWebhookRequestBody struct {
	Name         *string                                    `json:"name,omitempty" url:"-"`
	RequestTypes []UpdateWebhookRequestBodyRequestTypesItem `json:"request_types,omitempty" url:"-"`
	Status       *UpdateWebhookRequestBodyStatus            `json:"status,omitempty" url:"-"`
	URL          *string                                    `json:"url,omitempty" url:"-"`
}
